#include <olectl.h>
// stocktickerATL.idl : IDL source for stocktickerATL.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (stocktickerATL.tlb) and marshalling code.

#define DISPID_FORECOLOR                (-513)
#define DISPID_BACKCOLOR                (-501)
#define DISPID_FONT                     (-512)

import "oaidl.idl";
import "ocidl.idl";

typedef [uuid(66504301-BE0F-101A-8BBB-00AA00300CAB), public] DWORD OLE_COLOR;
    

[
    uuid(237C2EC3-A494-11D0-945E-00A0C903487E),
    version(1.0),
    helpstring("stocktickerATL 1.0 Type Library")
]
library STOCKTICKERATLLib
{
    importlib("stdole32.tlb");
    importlib("stdole2.tlb");

    [
        object,
        uuid(237C2ED2-A494-11D0-945E-00A0C903487E),
        dual,
        helpstring("IStockTickerATL Interface"),
        pointer_default(unique)
    ]
    
    interface IStockTickerATL : IDispatch
    {
        [propput, id(DISPID_BACKCOLOR)]
        HRESULT BackColor([in]OLE_COLOR clr);
        [propget, id(DISPID_BACKCOLOR)]
        HRESULT BackColor([out,retval]OLE_COLOR* pclr);
        [propputref, id(DISPID_FONT)]
        HRESULT Font([in]IFontDisp* pFont);
        [propput, id(DISPID_FONT)]
        HRESULT Font([in]IFontDisp* pFont);
        [propget, id(DISPID_FONT)]
        HRESULT Font([out, retval]IFontDisp** ppFont);
        [propput, id(DISPID_FORECOLOR)]
        HRESULT ForeColor([in]OLE_COLOR clr);
        [propget, id(DISPID_FORECOLOR)]
        HRESULT ForeColor([out,retval]OLE_COLOR* pclr);
        [propget, id(1), helpstring("property UpdateInterval")] HRESULT UpdateInterval([out, retval] short *pVal);
        [propput, id(1), helpstring("property UpdateInterval")] HRESULT UpdateInterval([in] short newVal);
        [propget, id(2), helpstring("property TickerSpeed")] HRESULT TickerSpeed([out, retval] short *pVal);
        [propput, id(2), helpstring("property TickerSpeed")] HRESULT TickerSpeed([in] short newVal);
        [propget, id(3), helpstring("property MSInvestorURL")] HRESULT MSInvestorURL([out, retval] BSTR *pVal);
        [propput, id(3), helpstring("property MSInvestorURL")] HRESULT MSInvestorURL([in] BSTR newVal);
        [propget, id(4), helpstring("property StockSourceISAPIDllURL")] HRESULT StockSourceISAPIDllURL([out, retval] BSTR *pVal);
        [propput, id(4), helpstring("property StockSourceISAPIDllURL")] HRESULT StockSourceISAPIDllURL([in] BSTR newVal);
    };


    [
        uuid(50D64433-8EA4-11D0-943E-00A0C903487E),
        helpstring("StockTickerATL Class")
    ]
    coclass StockTickerATL
    {
        [default] interface IStockTickerATL;
    };
    

    [
        uuid(4B4780D3-A88D-11D0-9468-00A0C903487E),
        helpstring("StockTickerProp Class")
    ]
    coclass StockTickerProp
    {
        interface IUnknown;
    };
};
