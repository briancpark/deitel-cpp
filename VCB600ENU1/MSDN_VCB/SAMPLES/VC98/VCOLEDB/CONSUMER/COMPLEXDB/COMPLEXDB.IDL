#include <olectl.h>
// ComplexDB.idl : IDL source for ComplexDB.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (ComplexDB.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";

[
	uuid(392BBDE2-06E1-11D1-8F8F-000000000000),
	version(1.0),
	helpstring("ComplexDB 1.0 Type Library")
]
library COMPLEXDBLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");
	importlib("msdatsrc.tlb");

	[
		object,
		uuid(392BBDEF-06E1-11D1-8F8F-000000000000),
		dual,
		helpstring("IComplexCtl Interface"),
		pointer_default(unique)
	]
	interface IComplexCtl : IDispatch
	{
		[propget, id(1), helpstring("property DataSource")] HRESULT DataSource([out, retval] DataSource** ppDataSource);
		[propputref, id(1), helpstring("property DataSource")] HRESULT DataSource([in] DataSource* pDataSource);
		[propget, id(2), helpstring("property DataMember")] HRESULT DataMember([out, retval] DataMember *pVal);
		[propput, id(2), helpstring("property DataMember")] HRESULT DataMember([in] DataMember newVal);
		[propget, id(3), helpstring("property FieldName")] HRESULT FieldName([out, retval] BSTR *pVal);
		[propput, id(3), helpstring("property FieldName")] HRESULT FieldName([in] BSTR newVal);
	};

	[
		uuid(392BBDF0-06E1-11D1-8F8F-000000000000),
		helpstring("ComplexCtl Class")
	]
	coclass ComplexCtl
	{
		[default] interface IComplexCtl;
	};
};
