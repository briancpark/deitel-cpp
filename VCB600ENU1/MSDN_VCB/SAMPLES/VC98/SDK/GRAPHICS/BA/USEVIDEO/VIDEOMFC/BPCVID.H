//
// bpcvid.h: Defines the CBPCVid class 
//
// Copyright (C) 1997 Microsoft Corporation
// All rights reserved.
//
// This source code is only intended as a supplement to the
// Broadcast Architecture Programmer's Reference.
// For detailed information regarding Broadcast
// Architecture, see the reference.
//
#if !defined(AFX_BPCVID_H__4E088A10_0E75_11D1_A073_00A0C9054174__INCLUDED_)
#define AFX_BPCVID_H__4E088A10_0E75_11D1_A073_00A0C9054174__INCLUDED_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000
// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


// Dispatch interfaces referenced by this interface
class CBPCDeviceBase;
class CBPCDevices;

/////////////////////////////////////////////////////////////////////////////
// CBPCVid wrapper class

class CBPCVid : public CWnd
{
protected:
	DECLARE_DYNCREATE(CBPCVid)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x31263ec0, 0x2957, 0x11cf, { 0xa1, 0xe5, 0x0, 0xaa, 0x9e, 0xc7, 0x97, 0x0 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:

// Operations
public:
	BOOL GetPower();
	void SetPower(BOOL bNewValue);
	double GetStartTime();
	void SetStartTime(double newValue);
	double GetStopTime();
	void SetStopTime(double newValue);
	BOOL GetVideoOn();
	void SetVideoOn(BOOL bNewValue);
	BOOL GetClosedCaption();
	void SetClosedCaption(BOOL bNewValue);
	BOOL GetDebug();
	void SetDebug(BOOL bNewValue);
	long GetDeviceCount();
	CBPCDeviceBase GetInput();
	void SetInput(LPDISPATCH newValue);
	CBPCDeviceBase GetOutput();
	void SetOutput(LPDISPATCH newValue);
	long GetColorKey();
	void SetColorKey(long nNewValue);
	CString GetFileName();
	void SetFileName(LPCTSTR lpszNewValue);
	long GetPriority();
	void SetPriority(long nNewValue);
	long GetVolume();
	void SetVolume(long nNewValue);
	long GetBalance();
	void SetBalance(long nNewValue);
	long GetImageSourceHeight();
	long GetImageSourceWidth();
	short GetMovieWindowSetting();
	void SetMovieWindowSetting(short nNewValue);
	long GetCurrentState();
	double GetCurrentPosition();
	void SetCurrentPosition(double newValue);
	double GetDuration();
	double GetPrerollTime();
	void SetPrerollTime(double newValue);
	double GetRate();
	void SetRate(double newValue);
	long GetLocaleID();
	void SetLocaleID(long nNewValue);
	LPDISPATCH GetFont();
	void SetFont(LPDISPATCH newValue);
	short GetDisplayMode();
	void SetDisplayMode(short nNewValue);
	long GetHWnd();
	CBPCDevices GetDevices();
	void Run();
	void Pause();
	void Stop();
	void Close();
	void Open(LPCTSTR FileName);
	void Login(LPCTSTR UserName, LPCTSTR Password);
	void Tune(long lTuningSpace, long Channel, long VideoSubchannel, long AudioSubchannel);
	long TSDeviceCount(long lTuningSpace);
	void Refresh();
	void AboutBox();
};

//{{AFX_INSERT_LOCATION}}
// Microsoft Developer Studio will insert additional declarations immediately before the previous line.

#endif // !defined(AFX_BPCVID_H__4E088A10_0E75_11D1_A073_00A0C9054174__INCLUDED_)
