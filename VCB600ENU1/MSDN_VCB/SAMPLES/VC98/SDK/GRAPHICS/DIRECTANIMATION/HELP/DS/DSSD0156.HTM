<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IMediaSample Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0155.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0157.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060144000000">IMediaSample Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IMediaSample</B> interface provides shared memory buffer
functionality, holds some properties about the data, and holds a
pointer to the data itself. It is used by connected pins to transport media
samples from one pin to another.

<P>The <A HREF="dssd0157.htm" TARGET="TEXT">IMediaSample2</A> interface extends the functionality of this interface to allow you to set and to retrieve media sample properties.

<A NAME="If_0001060144010000"></A><P><B>When to Implement</B>
<P>Implement this interface if you are providing an allocator (buffer) to be used for
transporting media samples between filters. This interface is implemented
by the <A HREF="dssd0228.htm#Lib_0001060230000000" TARGET="TEXT">CMediaSample</A> class in the DirectShow&#153; class library.

<A NAME="If_0001060144020000"></A><P><B>When to Use</B>
<P>Filters use methods on this interface to set properties and pass data to another filter.
Downstream filters use methods on this interface to read the media sample's data and
properties. Filters can modify the data in a media sample in place or can make
a copy of the sample, modify the copy, and pass it on.

<A NAME="If_0001060144030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IMediaSample methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030400" TARGET="TEXT">GetPointer</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a read/write pointer to this buffer's memory.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030500" TARGET="TEXT">GetSize</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the size, in bytes, of the buffer data area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030600" TARGET="TEXT">GetTime</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the stream times at which this sample should begin and finish.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144031000" TARGET="TEXT">SetTime</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the stream times at which this sample should begin and finish.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030900" TARGET="TEXT">IsSyncPoint</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the beginning of a sample is a synchronization point.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030f00" TARGET="TEXT">SetSyncPoint</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the synchronization point.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030800" TARGET="TEXT">IsPreroll</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates a preroll property. If TRUE, this sample is for preroll only and should not be displayed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030e00" TARGET="TEXT">SetPreroll</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the preroll property. If TRUE, this sample is for preroll only and should not be displayed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030100" TARGET="TEXT">GetActualDataLength</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the data length of the sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030a00" TARGET="TEXT">SetActualDataLength</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the data length of the sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030300" TARGET="TEXT">GetMediaType</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the media type of the sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030d00" TARGET="TEXT">SetMediaType</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the media type of the sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030700" TARGET="TEXT">IsDiscontinuity</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates a discontinuity property. If S_OK is returned, sample is not contiguous with previous sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030b00" TARGET="TEXT">SetDiscontinuity</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the discontinuity property. Set to TRUE if sample is new after a seek or dropped sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030200" TARGET="TEXT">GetMediaTime</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the media time stamps for the sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0156.htm#If_0001060144030c00" TARGET="TEXT">SetMediaTime</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the media time stamps for the sample.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030100">IMediaSample::GetActualDataLength</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Retrieves the data length of the sample.

<P><B>HRESULT</B> <B>GetActualDataLength</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that is the length.

<H5>Remarks</H5>
<P>Note that although this is typed as returning an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value, it actually returns the length in bytes, not an error value.
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030200">IMediaSample::GetMediaTime</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Retrieves the media time stamps for this sample.

<P><B>HRESULT</B> <B>GetMediaTime</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pTimeStart</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pTimeEnd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTimeStart</I>
</DT><DD>[out] Retrieved beginning media time.
</DD><DT><I>pTimeEnd</I>
</DT><DD>[out] Retrieved ending media time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the sample contains valid time stamps.
Returns <A HREF="dssd0293.htm#errcodes_0001060a01000070" TARGET="TEXT">VFW_E_MEDIA_TIME_NOT_SET</A> if the time has not been set
in the sample.

<H3><HR COLOR=#0000FF><A NAME="If_0001060144030300">IMediaSample::GetMediaType</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Retrieves the media type of the <A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample</A> object.

<P><B>HRESULT</B> <B>GetMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_MEDIA_TYPE</B> <B>**</B> <I>ppMediaType</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppMediaType</I>
</DT><DD>[in] Pointer to a pointer to the retrieved media type.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value. When a sample is received and there is no format
change, this method returns S_FALSE.

<H5>Remarks</H5>
<P>This method allows for limited in-band format changes.
Free the format block with <A HREF="dssd0267.htm#fmutil_000106030b000500" TARGET="TEXT">FreeMediaType</A>, and then free the
entire media type with the Microsoft&#174; Win32&#174; <A HREF="dssd0389.htm#external_00010a0109000011" TARGET="TEXT">CoTaskMemFree</A> function.

<H3><HR COLOR=#0000FF><A NAME="If_0001060144030400">IMediaSample::GetPointer</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Retrieves a read/write pointer to this buffer's memory.

<P><B>HRESULT</B> <B>GetPointer</B><B>(</B><BR>&nbsp;&nbsp;<B>BYTE</B> <B>**</B> <I>ppBuffer</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppBuffer</I>
</DT><DD>[out] Retrieved pointer to the buffer.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H3><HR COLOR=#0000FF><A NAME="If_0001060144030500">IMediaSample::GetSize</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Returns the size, in bytes, of the buffer data area.

<P><B>HRESULT</B> <B>GetSize</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P> Note that although this is typed as returning an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value, it actually returns the length in bytes, not an error value.
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030600">IMediaSample::GetTime</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Retrieves the stream times at which this sample should begin and finish.

<P><B>HRESULT</B> <B>GetTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <B>*</B> <I>pTimeStart</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <B>*</B> <I>pTimeEnd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTimeStart</I>
 </DT><DD>[out] Retrieved beginning stream time.
</DD><DT><I>pTimeEnd</I>
 </DT><DD>[out] Retrieved ending stream time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the sample contains valid time stamps. Returns <A HREF="dssd0293.htm#errcodes_0001060a01000070" TARGET="TEXT">VFW_E_MEDIA_TIME_NOT_SET</A> if the time has not been set in the sample.

<H3><HR COLOR=#0000FF><A NAME="If_0001060144030700">IMediaSample::IsDiscontinuity</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Determines if there is discontinuity in the data stream.

<P><B>HRESULT</B> <B>IsDiscontinuity</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK if the sample is a discontinuous sample, or S_FALSE if not; otherwise, returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> error value.

<H5>Remarks</H5>
<P>Discontinuity occurs when a source filter seeks to a different place
in the stream or when a filter drops samples for quality control.

<P>Note that while calling <A HREF="dssd0156.htm#If_0001060144030b00" TARGET="TEXT">SetDiscontinuity</A>
with a value of TRUE (1) sets the discontinuity property, calling
<B>IsDiscontinuity</B> on a discontinuous sample
returns S_OK (0).
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030800">IMediaSample::IsPreroll</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Preroll property. If TRUE, this sample is for preroll only and should not be displayed.

<P><B>HRESULT</B> <B>IsPreroll</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK if the sample is a preroll sample, or S_FALSE if not;
otherwise, returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> error value.

Note that while calling <A HREF="dssd0156.htm#If_0001060144030e00" TARGET="TEXT">SetPreroll</A>
with a value of TRUE (1) sets the preroll property, calling
<B>IsPreroll</B> on a preroll sample
returns S_OK (0).


<H3><HR COLOR=#0000FF><A NAME="If_0001060144030900">IMediaSample::IsSyncPoint</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Determines if the beginning of a sample is a synchronization point.

<P><B>HRESULT</B> <B>IsSyncPoint</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK if the sample is a synchronization point and S_FALSE if not;
otherwise, returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> error value.

<H5>Remarks</H5>
<P>If the <A HREF="dssd0287.htm#structs_0001060501000304" TARGET="TEXT">bTemporalCompression</A> member of the <A HREF="dssd0287.htm#structs_0001060501000300" TARGET="TEXT">AM_MEDIA_TYPE</A>
structure is FALSE, all samples are synchronization points. A filter can begin a stream at any
synchronization point.

<P>Note that while calling <A HREF="dssd0156.htm#If_0001060144030f00" TARGET="TEXT">SetSyncPoint</A>
with a value of TRUE (1) sets the synchronization point, calling
<B>IsSyncPoint</B> on a synchronization point sample
returns S_OK (0).
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030a00">IMediaSample::SetActualDataLength</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Sets the sample's data length.

<P><B>HRESULT</B> <B>SetActualDataLength</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>lLen</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lLen</I>
 </DT><DD>Length of the data in the media sample, in bytes.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H3><HR COLOR=#0000FF><A NAME="If_0001060144030b00">IMediaSample::SetDiscontinuity</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Sets the discontinuity property.

<P><B>HRESULT</B> <B>SetDiscontinuity</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bIsDiscontinuity</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bIsDiscontinuity</I>
 </DT><DD>[in] Set to TRUE to specify the media sample as discontinuous with the previous sample.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>Discontinuous samples occur when a source filter seeks to a different place
in the media stream or when a filter drops samples for quality control.

<P>Note that while calling <B>SetDiscontinuity</B>
with a value of TRUE (1) sets the discontinuity property, calling
<A HREF="dssd0156.htm#If_0001060144030700" TARGET="TEXT">IsDiscontinuity</A> on a discontinuous sample
returns S_OK (0).
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030c00">IMediaSample::SetMediaTime</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Sets the media time stamps for this sample.

<P><B>HRESULT</B> <B>SetMediaTime</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pTimeStart</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pTimeEnd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTimeStart</I>
</DT><DD>[in] Beginning media time.
</DD><DT><I>pTimeEnd</I>
</DT><DD>[in] Ending media time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>To reset the time, use this method with both <I>pTimeStart</I> and
<I>pTimeEnd</I> set to NULL. This will cause <A HREF="dssd0156.htm#If_0001060144030200" TARGET="TEXT">IMediaSample::GetMediaTime</A>
to return an error.
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030d00">IMediaSample::SetMediaType</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Sets the media type for the <A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample</A> object.

<P><B>HRESULT</B> <B>SetMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_MEDIA_TYPE</B> <B>*</B> <I>pMediaType</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pMediaType</I>
</DT><DD>Pointer to a pointer to a media type structure to be set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method allows for limited in-band format changes.
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030e00">IMediaSample::SetPreroll</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Sets the preroll property. If TRUE, this sample is for preroll only
and should not be displayed.

<P><B>HRESULT</B> <B>SetPreroll</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bIsPreroll</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bIsPreroll</I>
 </DT><DD>Set to TRUE to specify the media sample as a preroll sample; otherwise, set to FALSE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Preroll samples are samples that are processed but not displayed, and are
located in the media stream before the displayable samples.

<P>Note that while calling <B>SetPreroll</B>
with a value of TRUE (1) sets the preroll property,
calling <A HREF="dssd0156.htm#If_0001060144030800" TARGET="TEXT">IsPreroll</A>
on a preroll sample returns S_OK (0).
<H3><HR COLOR=#0000FF><A NAME="If_0001060144030f00">IMediaSample::SetSyncPoint</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Property of a synchronization point.

<P><B>HRESULT</B> <B>SetSyncPoint</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bIsSyncPoint</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bIsSyncPoint</I>
 </DT><DD>[in] Set to TRUE to specify the sample as a synchronization point; otherwise,
 set to FALSE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK.

<H5>Remarks</H5>
<P>A filter can begin a stream at any synchronization point.
Note that while calling <B>SetSyncPoint</B>
with a value of TRUE (1) sets the synchronization point, calling
<A HREF="dssd0156.htm#If_0001060144030900" TARGET="TEXT">IsSyncPoint</A> on a synchronization point sample
returns S_OK (0).
<H3><HR COLOR=#0000FF><A NAME="If_0001060144031000">IMediaSample::SetTime</A></H3>
<A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample Interface</A>
<P>Sets the stream time when this sample should begin and finish.

<P><B>HRESULT</B> <B>SetTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <B>*</B> <I>pTimeStart</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <B>*</B> <I>pTimeEnd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTimeStart</I>
</DT><DD>[in] Stream time at which the sample begins.
</DD><DT><I>pTimeEnd</I>
</DT><DD>[in] Stream time at which the sample ends.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>To reset the time, use this method with both <I>pTimeStart</I> and <I>pTimeEnd</I> set to NULL. This will cause <A HREF="dssd0156.htm#If_0001060144030600" TARGET="TEXT">IMediaSample::GetTime</A> to return VFW_S_NO_STOP_TIME.

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
