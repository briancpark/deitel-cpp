<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CBaseMediaFilter Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0196.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0198.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060211000000">CBaseMediaFilter Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/filter05.gif" WIDTH="259" HEIGHT="143" ALT="CBaseMediaFilter class hierarchy" >

<P>This is an abstract base class that provides support for the <A HREF="dssd0153.htm" TARGET="TEXT">IMediaFilter</A> interface.
The <B>CBaseMediaFilter</B> class handles State_Stopped, State_Paused, and State_Running 
state transitions.
Typically, this class is used for plug-in distributors rather than filters with pins.
Derive your filter classes from the <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> class (or base classes derived
from this) instead of from this class. 

<P>All member functions in this class that return <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> and accept a pointer as a 
parameter return E_POINTER when passed a null pointer. 

<A NAME="Lib_0001060211010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060211010001">m_pClock</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to a reference clock used for synchronization. The reference count of the clock 
object must be incremented using <A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>. Pass NULL if no reference clock is available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060211010002">m_State</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Current state of the filter, which can be State_Stopped, State_Paused, or
State_Running.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060211010003">m_tStart</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Offset from the stream time to the reference time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060211010004">m_clsid</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Class identifier (CLSID) used for serialization using <A HREF="dssd0389.htm#external_00010a0109000089" TARGET="TEXT">IPersist</A>.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060211020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060100" TARGET="TEXT">CBaseMediaFilter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060500" TARGET="TEXT">IsActive</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the filter is currently active (running or paused) or stopped.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060211030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060b00" TARGET="TEXT">StreamTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the current stream time.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060211040000"></A><P><B>Implemented IPersist Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060200" TARGET="TEXT">GetClassID</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the class identifier of this filter.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060211050000"></A><P><B>Implemented IMediaFilter Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060300" TARGET="TEXT">GetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current state of the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060400" TARGET="TEXT">GetSyncSource</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current reference clock in use by this filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060700" TARGET="TEXT">Pause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the filter to transition to the new (paused) state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060800" TARGET="TEXT">Run</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the filter to transition to the new (running) state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060900" TARGET="TEXT">SetSyncSource</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the filter of the reference clock with which it should synchronize activity.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060a00" TARGET="TEXT">Stop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the filter to transition to the new (stopped) state.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060211060000"></A><P><B>Implemented INonDelegatingUnknown Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0197.htm#Lib_0001060211060600" TARGET="TEXT">NonDelegatingQueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Passes out references to interfaces supported by <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A>. Override
 this to pass out pointers to interfaces supported in a derived filter class.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060100">CBaseMediaFilter::CBaseMediaFilter</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Constructs a <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A> object.

<P><B>CBaseMediaFilter</B><B>(</B><BR>&nbsp;&nbsp;<B>TCHAR</B> <I>*pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>CCritSec</B> <I>*pLock</I><B>,</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>clsid</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
 </DT><DD>Name of the <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A> class.
</DD><DT><I>pUnk</I>
 </DT><DD><A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface of the delegating object.
</DD><DT><I>pLock</I>
 </DT><DD>Pointer to the object that maintains the lock.
</DD><DT><I>clsid</I>
 </DT><DD>Class identifier used to serialize this filter.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060200">CBaseMediaFilter::GetClassID</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Fills the <I>pClsID</I> parameter with the class identifier of this filter
(from <A HREF="dssd0197.htm#Lib_0001060211010004" TARGET="TEXT">m_clsid</A>).

<P><B>HRESULT</B> <B>GetClassID</B><B>(</B><BR>&nbsp;&nbsp;<B>CLSID</B> <I>*pClsID</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClsID</I>
</DT><DD>Pointer to the class identifier to be filled out.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060300">CBaseMediaFilter::GetState</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Retrieves the current state of the filter.

<P><B>HRESULT</B> <B>GetState</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwMilliSecsTimeout</I><B>,</B><BR>&nbsp;&nbsp;<B>FILTER_STATE</B> <B>*</B> <I>State</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwMilliSecsTimeout</I>
</DT><DD>Duration of the time-out, in milliseconds. 
</DD><DT><I>State</I>
</DT><DD>Returned state of the filter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030100" TARGET="TEXT">IMediaFilter::GetState</A> method. It returns the value of the 
<A HREF="dssd0197.htm#Lib_0001060211010002" TARGET="TEXT">m_State</A> data member. 

<P>Filters should derive their filters from <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> and not from <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A>, so filters will not likely use this member function. Use <A HREF="dssd0194.htm#Lib_000106020e080a00" TARGET="TEXT">CBaseFilter::GetState</A> instead.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060400">CBaseMediaFilter::GetSyncSource</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Retrieves the current reference clock in use by this filter.

<P><B>HRESULT</B> <B>GetSyncSource</B><B>(</B><BR>&nbsp;&nbsp;<B>IReferenceClock</B> <B>**</B> <I>pClock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClock</I>
</DT><DD>Pointer to a reference clock; will be set to the <A HREF="dssd0170.htm" TARGET="TEXT">IReferenceClock</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030200" TARGET="TEXT">IMediaFilter::GetSyncSource</A> method. It returns the value of 
<A HREF="dssd0197.htm#Lib_0001060211010001" TARGET="TEXT">m_pClock</A> after adding a reference to it. Be sure to release the interface by calling the <A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">IUnknown::Release</A> method when finished with the pointer. 

<P>Filters should derive their filters from <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> and not from <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A>, so filters will not likely use this member function. Use <A HREF="dssd0194.htm#Lib_000106020e080b00" TARGET="TEXT">CBaseFilter::GetSyncSource</A> instead.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060500">CBaseMediaFilter::IsActive</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Determines if the filter is currently active (running or paused) or stopped.

<P><B>BOOL</B> <B>IsActive</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns TRUE if the filter is paused or running, or FALSE if it is stopped.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060600">CBaseMediaFilter::NonDelegatingQueryInterface</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Retrieves an interface and increments the reference count.

<P><B>HRESULT</B> <B>NonDelegatingQueryInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <B>**</B> <I>ppv</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>riid</I>
 </DT><DD>Reference identifier.
</DD><DT><I>ppv</I>
 </DT><DD>Pointer to the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a pointer to the interface.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0265.htm#fmutil_0001060309000001" TARGET="TEXT">INonDelegatingUnknown::NonDelegatingQueryInterface</A> method and passes out 
references to the <A HREF="dssd0153.htm" TARGET="TEXT">IMediaFilter</A>, <A HREF="dssd0389.htm#external_00010a0109000089" TARGET="TEXT">IPersist</A>, and <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interfaces. Override this class to return other interfaces on the object in the derived class.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060700">CBaseMediaFilter::Pause</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Transitions the filter to State_Paused state if it is not in this state already. 

<P><B>HRESULT</B> <B>Pause</B> <B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> return value (S_OK by default). 


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030300" TARGET="TEXT">IMediaFilter::Pause</A> method. It sets the 
value of <A HREF="dssd0197.htm#Lib_0001060211010002" TARGET="TEXT">m_State</A> to State_Paused.

<P>Note that filters should derive their filters from <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> and not from 
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A>, so this member function will not likely be used by filters. 
Use <A HREF="dssd0194.htm#Lib_000106020e081100" TARGET="TEXT">CBaseFilter::Pause</A> instead.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060800">CBaseMediaFilter::Run</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Transitions the filter to State_Running state if it is not in this state already. 

<P><B>HRESULT</B> <B>Run</B> <B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStart</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tStart</I>
 </DT><DD>Reference time value corresponding to stream time 0.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value. 


<H5>Remarks</H5>
<P>If the filter is in State_Stopped state, the <A HREF="dssd0197.htm#Lib_0001060211060700" TARGET="TEXT">CBaseMediaFilter::Pause</A> member function is called first to transition the filter to State_Paused state, which has the effect of activating any of the filter's connected pins. If any pin returns a failure return code from its <A HREF="dssd0200.htm#Lib_0001060214060100" TARGET="TEXT">CBasePin::Active</A> member function, the function fails and the state is not changed. If this member function succeeds, the filter's <A HREF="dssd0197.htm#Lib_0001060211010002" TARGET="TEXT">m_State</A> member variable
is set to State_Running. This member function holds the filter's lock.

<P>Filters should derive their filters from <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> and not from <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A>, so filters will not likely use this member function. Use <A HREF="dssd0194.htm#Lib_000106020e081500" TARGET="TEXT">CBaseFilter::Run</A> instead.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060900">CBaseMediaFilter::SetSyncSource</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Identifies the reference clock to which the filter should synchronize activity.

<P><B>HRESULT</B> <B>SetSyncSource</B><B>(</B><BR>&nbsp;&nbsp;<B>IReferenceClock</B> <B>*</B> <I>pClock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClock</I>
</DT><DD>Pointer to the <A HREF="dssd0170.htm" TARGET="TEXT">IReferenceClock</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030500" TARGET="TEXT">IMediaFilter::SetSyncSource</A> method. It sets the 
<A HREF="dssd0197.htm#Lib_0001060211010001" TARGET="TEXT">m_pClock</A> data member to the <I>pClock</I> parameter and increments the reference count on the <A HREF="dssd0170.htm" TARGET="TEXT">IReferenceClock</A> interface passed in. 

<P>This member function is most important to rendering filters and might not apply to other filters.

<P>Filters should derive their filters from <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> and not from <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A>, so filters will not likely use this member function. Use <A HREF="dssd0194.htm#Lib_000106020e081600" TARGET="TEXT">CBaseFilter::SetSyncSource</A> instead.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060a00">CBaseMediaFilter::Stop</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Transitions the filter to State_Stopped state if it is not in this state already.

<P><B>HRESULT</B> <B>Stop</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030600" TARGET="TEXT">IMediaFilter::Stop</A> method.
It sets the <A HREF="dssd0197.htm#Lib_0001060211010002" TARGET="TEXT">m_State</A> member variable to State_Stopped. 

<P>Note that filters should derive their filters from <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> and not from 
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A>, so this member function will not likely be used by filters.
Use <A HREF="dssd0194.htm#Lib_000106020e081700" TARGET="TEXT">CBaseFilter::Stop</A> instead.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060211060b00">CBaseMediaFilter::StreamTime</A></H3>
<A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter Class</A>
<P>Retrieves the current stream time.

<P><B>virtual</B> <B>HRESULT</B> <B>StreamTime</B><B>(</B><BR>&nbsp;&nbsp;<B>CRefTime&amp;</B> <I>rtStream</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rtStream</I>
</DT><DD>Current stream time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value, which can include the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unable to get time from clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream time returned in the <I>rtStream</I> parameter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0293.htm#errcodes_0001060a0100003b" TARGET="TEXT">VFW_E_NO_CLOCK</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No reference clock is available.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Current stream time is the reference clock time minus the stream time offset.
All samples with time stamps less than or equal to this time should have been presented.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
