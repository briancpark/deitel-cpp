<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CTransInPlaceFilter Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0249.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0251.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060246000000">CTransInPlaceFilter Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/tsip03.gif" WIDTH="323" HEIGHT="261" ALT="CTransInPlaceFilter class hierarchy" >

<P><B>CTransInPlaceFilter</B> is an abstract base class that provides support for a simple transform filter with a single input and a single output. It is derived from the <A HREF="dssd0253.htm" TARGET="TEXT">CUnknown</A> class, and supports the <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface, the <A HREF="dssd0153.htm" TARGET="TEXT">IMediaFilter</A> interface, and two pins. Each pin supports the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface and uses the shared memory transport based on the <A HREF="dssd0161.htm" TARGET="TEXT">IMemInputPin</A> interface. The filter uses classes derived from the <A HREF="dssd0197.htm" TARGET="TEXT">CBaseMediaFilter</A> class to support <B>IBaseFilter</B> and <B>IMediaFilter</B>. The input pin is derived from the 
<A HREF="dssd0195.htm" TARGET="TEXT">CBaseInputPin</A> class, and the output pin is derived from the <A HREF="dssd0199.htm" TARGET="TEXT">CBaseOutputPin</A> class.

<P>For more information about using this class to create a transform filter, see <A HREF="dssd0078.htm" TARGET="TEXT">Creating a Transform Filter</A>. 

<A NAME="Lib_0001060246010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060246010001">m_idTransInPlace</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Performance-measuring identifier.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060246020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030300" TARGET="TEXT">Copy</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a pointer to an identical copy of a media sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030400" TARGET="TEXT">CTransInPlaceFilter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030800" TARGET="TEXT">InputPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a pointer to the input pin associated with the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030900" TARGET="TEXT">OutputPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a pointer to the output pin associated with the filter.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060246030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030100" TARGET="TEXT">CheckTransform</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Verifies that the media type is supported by input and output pins. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030200" TARGET="TEXT">CompleteConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Reconnects the input or output pin if necessary.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030500" TARGET="TEXT">DecideBufferSize</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines the size of the transport buffer.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030600" TARGET="TEXT">GetMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the media type to be used by the output pin. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030700" TARGET="TEXT">GetPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a pin if an index is specified. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030a00" TARGET="TEXT">Receive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Receives the sample, calls the derived class's <A HREF="dssd0250.htm#Lib_0001060246030c00" TARGET="TEXT">Transform</A> member function, and then 
delivers the sample. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030b00" TARGET="TEXT">RegisterPerfId</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Registers a performance measurement identifier (if PERF is defined).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0250.htm#Lib_0001060246030c00" TARGET="TEXT">Transform</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Performs transformation operations in place on the <A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample</A> interface (pure virtual).
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030100">CTransInPlaceFilter::CheckTransform</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Verifies that the media is supported by input and output pins.

<P><B>HRESULT</B> <B>CheckTransform</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType</B> <I>*mtIn</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType</B> <I>*mtOut</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>mtIn</I>
 </DT><DD>Input pin media type.
</DD><DT><I>mtOut</I>
 </DT><DD>Output pin media type.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK by default.

<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0247.htm#Lib_0001060243040600" TARGET="TEXT">CTransformFilter::CheckTransform</A> member 
function. The base class functions that call this member function are overridden in this
class to call the <A HREF="dssd0247.htm#Lib_0001060243040500" TARGET="TEXT">CTransformFilter::CheckInputType</A> member function that is overridden
in the derived class, with the assumption that the type does not change. Usually there
is no reason for this member function to be called. In debug builds some calls will be made,
and returning S_OK ensures that these calls do not assert.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030200">CTransInPlaceFilter::CompleteConnect</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Reconnects the input or output pin if necessary.

<P><B>HRESULT</B> <B>CompleteConnect</B><B>(</B><BR>&nbsp;&nbsp;<B>PIN_DIRECTION</B> <I>direction</I><B>,</B><BR>&nbsp;&nbsp;<B>IPin</B> <I>*pReceivePin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>direction</I>
 </DT><DD>Pin direction.
</DD><DT><I>pReceivePin</I>
 </DT><DD>Pointer to the output pin to which to connect.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if successful; otherwise, returns VFW_E_NOT_IN_GRAPH if the filter is not part of a graph, or returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> that indicates the error. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0247.htm#Lib_0001060243040700" TARGET="TEXT">CTransformFilter::CompleteConnect</A> member
function. It is called by one of the pin classes at the end of a successful connection. Because the 
input and output pins must both use the same allocator, this member function reconnects the 
opposite pin if necessary.

<P>When the input pin is first connected, the output pin has not yet been connected and the 
downstream filter's allocator is unknown, so the allocator for the input pin is chosen to be the 
upstream pin's allocator. When the transform filter's output pin is connected, however, it has access 
to the downstream filter's allocator and should force a reconnect on the input pin and offer that 
allocator. When the input pin is reconnected, it forces a reconnect on the output pin if the allocator 
chosen for the input pin's connection differs from the output pin's connection.
This member function supplies the reconnection for either output or input pins.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030300">CTransInPlaceFilter::Copy</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Creates a copy of the specified media sample.

<P><B>IMediaSample</B> <B>*</B> <B>CTransInPlaceFilter::Copy</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <I>*pSource</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSource</I>
</DT><DD>Pointer to an object that implements the <A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a pointer to the new sample.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030400">CTransInPlaceFilter::CTransInPlaceFilter</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Constructs a <A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter</A> object.

<P><B>CTransInPlaceFilter</B><B>(</B><BR>&nbsp;&nbsp;<B>TCHAR</B> <B>*</B> <I>pObjectName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>lpUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>clsid</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>*</B> <I>phr</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pObjectName</I>
</DT><DD>Name given to the <A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter</A> object.
</DD><DT><I>lpUnk</I>
</DT><DD>Pointer to LPUNKNOWN.
</DD><DT><I>clsid</I>
</DT><DD>Class identifier of the <A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter</A> class.
</DD><DT><I>phr</I>
</DT><DD>Pointer to the <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value for resulting information.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030500">CTransInPlaceFilter::DecideBufferSize</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Determines the size of the transport buffer.

<P><B>HRESULT</B> <B>DecideBufferSize</B><B>(</B><BR>&nbsp;&nbsp;<B>IMemAllocator</B> <B>*</B> <I>pAlloc</I><B>,</B><BR>&nbsp;&nbsp;<B>ALLOCATOR_PROPERTIES</B> <B>*</B> <I>pProperties</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pAlloc</I>
</DT><DD>Pointer to the <A HREF="dssd0160.htm" TARGET="TEXT">IMemAllocator</A> object used by the output pin.

</DD><DT><I>pProperties</I>
</DT><DD>Requested allocator properties for count, size, and alignment,
as specified by the <A HREF="dssd0287.htm#structs_0001060501000100" TARGET="TEXT">ALLOCATOR_PROPERTIES</A> structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if successful; otherwise, returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value indicating the error. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0247.htm#Lib_0001060243040900" TARGET="TEXT">CTransformFilter::DecideBufferSize</A> member 
function. It is called when the filter must provide its own allocator. Allocator 
requirements are obtained from the filter's input pin and passed to the output pin. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030600">CTransInPlaceFilter::GetMediaType</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Returns the media type to be used by the output pin.

<P><B>HRESULT</B> <B>GetMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>iPosition</I><B>,</B><BR>&nbsp;&nbsp;<B>CMediaType</B> <I>*pMediaType</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>iPosition</I>
 </DT><DD>Position of the media type in the media type list.
</DD><DT><I>pMediaType</I>
 </DT><DD>Returned media type object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_UNEXPECTED because it is not expected to be called.


<H5>Remarks</H5>
<P>In the <A HREF="dssd0247.htm" TARGET="TEXT">CTransformFilter</A> class, this member function is called by the associated 
input or output pin class's <A HREF="dssd0249.htm#Lib_0001060245070800" TARGET="TEXT">GetMediaType</A> 
member function to retrieve the next media type in the list and return it to the pin's 
<A HREF="dssd0200.htm#Lib_0001060214061300" TARGET="TEXT">CBasePin::EnumMediaTypes</A> member function. 

<P>However, in the <A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter</A> class, the pin classes override the 
<A HREF="dssd0200.htm#Lib_0001060214061300" TARGET="TEXT">CBasePin::EnumMediaTypes</A> member function so that it bypasses the filter and calls the 
enumerator of the opposite connected pin. (For example, the output pin enumerator uses the
upstream filter's enumerator, and the input pin uses the connected downstream
filter's enumerator.) Therefore, this member function should never be called
by the inplace pin classes. It is implemented to prevent "undefined pure virtual" compiler warnings.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030700">CTransInPlaceFilter::GetPin</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Returns a pin if an index is specified.

<P><B>virtual</B> <B>CBasePin</B> <B>*</B> <B>GetPin</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>n</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>n</I>
</DT><DD>Index of the pin to return.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a pointer to a <A HREF="dssd0200.htm" TARGET="TEXT">CBasePin</A> object.


<H5>Remarks</H5>
<P>This member function is implemented and need not be overridden unless one or more of the
transform pin classes (<A HREF="dssd0251.htm" TARGET="TEXT">CTransInPlaceInputPin</A> or <A HREF="dssd0252.htm" TARGET="TEXT">CTransInPlaceOutputPin</A>) are 
being overridden. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030800">CTransInPlaceFilter::InputPin</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Retrieves a pointer to the input pin associated with the filter.

<P><B>CTransInPlaceInputPin</B> <B>*InputPin</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a pointer to a <A HREF="dssd0251.htm" TARGET="TEXT">CTransInPlaceInputPin</A> object.


<H5>Remarks</H5>
<P>This member function is protected.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030900">CTransInPlaceFilter::OutputPin</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Retrieves a pointer to the output pin associated with the filter.

<P><B>CTransInPlaceOutputPin</B> <B>*OutputPin</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a pointer to a <A HREF="dssd0252.htm" TARGET="TEXT">CTransInPlaceOutputPin</A> object.


<H5>Remarks</H5>
<P>This member function is protected.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030a00">CTransInPlaceFilter::Receive</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Receives the media sample, calls the <A HREF="dssd0250.htm#Lib_0001060246030c00" TARGET="TEXT">CTransInPlaceFilter::Transform</A>
member function, and then delivers the media sample.

<P><B>HRESULT</B> <B>Receive</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <I>*pSample</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSample</I>
</DT><DD>Sample to deliver.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the derived class' <A HREF="dssd0250.htm#Lib_0001060246030c00" TARGET="TEXT">Transform function</A> . <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0247.htm#Lib_0001060243041200" TARGET="TEXT">CTransformFilter::Receive</A> member function.
Override it only if you need more control of the process. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030b00">CTransInPlaceFilter::RegisterPerfId</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Registers a performance measurement identifier.

<P><B>virtual</B> <B>void</B> <B>RegisterPerfId</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>By default, this member function registers the performance identifier 
(<A HREF="dssd0247.htm#Lib_0001060243010001" TARGET="TEXT">m_idTransform</A>) with the string "TransinPlace". Override this member function to register 
a performance measurement with a less generic string. This should be done to avoid confusion with 
other filters. This member function is enabled only when PERF is defined. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060246030c00">CTransInPlaceFilter::Transform</A></H3>
<A HREF="dssd0250.htm" TARGET="TEXT">CTransInPlaceFilter Class</A>
<P>Transforms the data in <I>pSample</I> in place. 

<P><B>virtual</B> <B>HRESULT</B> <B>Transform</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <I>*pSample</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSample</I>
 </DT><DD>Pointer to the input <A HREF="dssd0156.htm" TARGET="TEXT">IMediaSample</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation. <B>HRESULT</B> can be one of the following standard constants, or other values not listed:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null pointer argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Invalid argument.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method isn't supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK or NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>You must supply this member function in the derived class to perform the actual work of 
your filter. This member function is called by <A HREF="dssd0250.htm#Lib_0001060246030a00" TARGET="TEXT">CTransInPlaceFilter::Receive</A> before passing 
the sample on to the downstream filter. <B>Transform</B> can return S_FALSE to indicate that the 
sample should not be delivered downstream.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
