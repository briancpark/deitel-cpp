<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CTransformInputPin Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0247.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0249.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060244000000">CTransformInputPin Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/tfrm01.gif" WIDTH="339" HEIGHT="261" ALT="CTransformInputPin class hierarchy" >

<P>The <B>CTransformInputPin</B> class implements the input pin of a simple transform filter. It is the class assigned to the <A HREF="dssd0247.htm#Lib_0001060243010002" TARGET="TEXT">m_pInput</A> data member of the <A HREF="dssd0247.htm" TARGET="TEXT">CTransformFilter</A> class. Typically, you can create objects derived from <B>CTransformFilter</B> without modifying the <B>CTransformInputPin</B> class. That is, you can usually override the member functions in <B>CTransformFilter</B> that are called by member functions of this class. This means that you need not derive your own classes for either of the pin classes.

<P>However, if you want to override this class and have your filter class derived from <A HREF="dssd0247.htm" TARGET="TEXT">CTransformFilter</A>, you must override the <A HREF="dssd0247.htm#Lib_0001060243040e00" TARGET="TEXT">CTransformFilter::GetPin</A> member function to create pins of your derived class.

<A NAME="Lib_0001060244010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060244010001">m_pTransformFilter</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to the owning <A HREF="dssd0247.htm" TARGET="TEXT">CTransformFilter</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060244020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050700" TARGET="TEXT">CTransformInputPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050800" TARGET="TEXT">CurrentMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the media type currently assigned to the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050c00" TARGET="TEXT">PassNotify</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Passes a quality-control notification to the appropriate sink.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060244030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050200" TARGET="TEXT">BreakConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the derived class when the connection is broken.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050300" TARGET="TEXT">CheckConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the derived class when the connection process is starting.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050400" TARGET="TEXT">CheckMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the pin can use a specified media type.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050500" TARGET="TEXT">CheckStreaming</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Verifies conditions for continuing with a streaming operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050600" TARGET="TEXT">CompleteConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the derived class when the connection process has completed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050f00" TARGET="TEXT">SetMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the derived class when the media type is established for the connection.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060244040000"></A><P><B>Implemented IPin Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050100" TARGET="TEXT">BeginFlush</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the pin to begin a flush operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050900" TARGET="TEXT">EndFlush</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the pin to end a flush operation and notifies the pin that it
can start accepting data again.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050a00" TARGET="TEXT">EndOfStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the input pin that no additional data is expected until a new run 
command is issued.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050b00" TARGET="TEXT">NewSegment</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies that samples following this call are grouped as a segment with a given
start time, stop time, and rate.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050d00" TARGET="TEXT">QueryId</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves an identifier for the pin.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060244050000"></A><P><B>Implemented IMemInputPin Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050e00" TARGET="TEXT">Receive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Receives the next block of data from the stream.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050100">CTransformInputPin::BeginFlush</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the pin to begin a flush operation.

<P><B>HRESULT</B> <B>BeginFlush</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030100" TARGET="TEXT">IPin::BeginFlush</A> method and overrides the <A HREF="dssd0195.htm#Lib_000106020f070100" TARGET="TEXT">CBaseInputPin::BeginFlush</A> member function. It checks to see if the pin is connected, and then calls <B>CBaseInputPin::BeginFlush</B>, and finally calls the <A HREF="dssd0247.htm#Lib_0001060243040200" TARGET="TEXT">CTransformFilter::BeginFlush</A> member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050200">CTransformInputPin::BreakConnect</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the derived class when the connection is broken.

<P><B>HRESULT</B> <B>BreakConnect</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR in this implementation.


<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0200.htm#Lib_0001060214060400" TARGET="TEXT">CBasePin::BreakConnect</A> member function and calls the <A HREF="dssd0247.htm#Lib_0001060243040300" TARGET="TEXT">CTransformFilter::BreakConnect</A> member function. Override <B>CTransformFilter::BreakConnect</B> to undo anything carried out in <A HREF="dssd0248.htm#Lib_0001060244050300" TARGET="TEXT">CTransformInputPin::CheckConnect</A> (such as releasing extra interfaces).
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050300">CTransformInputPin::CheckConnect</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the derived class when the connection process is starting.

<P><B>HRESULT</B> <B>CheckConnect</B><B>(</B><BR>&nbsp;&nbsp;<B>IPin</B> <I>*pPin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pPin</I>
</DT><DD>Pointer to the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface of the connecting pin.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR by default.


<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0200.htm#Lib_0001060214060600" TARGET="TEXT">CBasePin::CheckConnect</A> member function and calls the <A HREF="dssd0247.htm#Lib_0001060243040400" TARGET="TEXT">CTransformFilter::CheckConnect</A> member function. Override <B>CTransformFilter::CheckConnect</B> to add additional interfaces.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050400">CTransformInputPin::CheckMediaType</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Determines if the pin can use a specified media type.

<P><B>HRESULT</B> <B>CheckMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType*</B> <I>mtIn</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>mtIn</I>
</DT><DD>Pointer to a media type object.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>This member function calls the pure-virtual <A HREF="dssd0247.htm#Lib_0001060243040500" TARGET="TEXT">CTransformFilter::CheckInputType</A> member function, which must be overridden when deriving a class from the <A HREF="dssd0247.htm" TARGET="TEXT">CTransformFilter</A> class. The overridden 
<A HREF="dssd0247.htm#Lib_0001060243040500" TARGET="TEXT">CheckInputType</A> member function is responsible for determining which media types the input pin supports.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050500">CTransformInputPin::CheckStreaming</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Verifies conditions for continuing with a streaming operation.

<P><B>HRESULT</B> <B>CheckStreaming</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns one of the following <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> values, depending on the state.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Currently in flushing state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0248.htm#Lib_0001060244050e00" TARGET="TEXT">Receive</A> or 
<A HREF="dssd0248.htm#Lib_0001060244050a00" TARGET="TEXT">EndOfStream</A> operations can safely proceed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0293.htm#errcodes_0001060a01000031" TARGET="TEXT">VFW_E_NOT_CONNECTED</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The output pin either does not exist or isn't connected.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0293.htm#errcodes_0001060a01000033" TARGET="TEXT">VFW_E_RUNTIME_ERROR</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A run-time error occurred when processing a previous sample.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0293.htm#errcodes_0001060a0100004f" TARGET="TEXT">VFW_E_WRONG_STATE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The filter is in the <A HREF="dssd0288.htm#dtypes_0001060601001801" TARGET="TEXT">State_Stopped</A> state.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0195.htm#Lib_000106020f070300" TARGET="TEXT">CBaseInputPin::CheckStreaming</A> member function and calls that base class implementation for most of the condition checks. It determines if the pin is connected, if it is in a paused or running state, and if it is not currently flushing data or processing a run-time error. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050600">CTransformInputPin::CompleteConnect</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the derived class when the connection process has been completed.

<P><B>HRESULT</B> <B>CompleteConnect</B><B>(</B><BR>&nbsp;&nbsp;<B>IPin</B> <I>*pReceivePin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pReceivePin</I>
</DT><DD>Pointer to the input pin being connected to.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0200.htm#Lib_0001060214060800" TARGET="TEXT">CBasePin::CompleteConnect</A> member function. It calls the base class <B>CBasePin::CompleteConnect</B> member function and then calls <A HREF="dssd0247.htm#Lib_0001060243040700" TARGET="TEXT">CTransformFilter::CompleteConnect</A>. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050700">CTransformInputPin::CTransformInputPin</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Constructs a <A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin</A> object.

<P><B>CTransformInputPin</B><B>(</B><BR>&nbsp;&nbsp;<B>TCHAR</B> <I>*pObjectName</I><B>,</B><BR>&nbsp;&nbsp;<B>CTransformFilter</B> <I>*pTransformFilter</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>*</B> <I>phr</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>pName</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pObjectName</I>
</DT><DD>Name of the <A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin</A> object.
</DD><DT><I>pTransformFilter</I>
</DT><DD>Pointer to the <A HREF="dssd0247.htm" TARGET="TEXT">CTransformFilter</A> class.
</DD><DT><I>phr</I>
</DT><DD>Pointer to an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value in which to return resulting information. This should be modified only if a failure occurs. If it is a failure code on input, construction can be terminated, but in any case the destructor will be called by the creator when the <B>HRESULT</B> error is detected.
</DD><DT><I>pName</I>
</DT><DD>Name of the pin.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050800">CTransformInputPin::CurrentMediaType</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Retrieves the media type currently assigned to the filter.

<P><B>CMediaType&amp;</B> <B>CurrentMediaType</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the value of <A HREF="dssd0200.htm#Lib_0001060214010003" TARGET="TEXT">CBasePin::m_mt</A>.


<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050900">CTransformInputPin::EndFlush</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the pin to end a flush operation and notifies the pin that it can start accepting data again.

<P><B>HRESULT</B> <B>EndFlush</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030600" TARGET="TEXT">IPin::EndFlush</A> method and overrides the <A HREF="dssd0195.htm#Lib_000106020f070500" TARGET="TEXT">CBaseInputPin::EndFlush</A> member function. It checks to see if the pin is connected, calls the <B>CBaseInputPin::EndFlush</B> member function, and finally calls the <A HREF="dssd0247.htm#Lib_0001060243040a00" TARGET="TEXT">CTransformFilter::EndFlush</A> member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050a00">CTransformInputPin::EndOfStream</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the input pin that no additional data is expected until a new run command is issued.

<P><B>HRESULT</B> <B>EndOfStream</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030700" TARGET="TEXT">IPin::EndOfStream</A> method. It calls <A HREF="dssd0248.htm#Lib_0001060244050500" TARGET="TEXT">CTransformInputPin::CheckStreaming</A> to see that the filter is in a streaming state and then calls the <A HREF="dssd0247.htm#Lib_0001060243040b00" TARGET="TEXT">CTransformFilter::EndOfStream</A> member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050b00">CTransformInputPin::NewSegment</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Specifies that samples following this call are grouped as a segment with a given start time, stop time, and rate.

<P><B>HRESULT</B> <B>NewSegment</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStart</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStop</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tStart</I>
</DT><DD>Start time of the segment.
</DD><DT><I>tStop</I>
</DT><DD>Stop time of the segment.
</DD><DT><I>dRate</I>
</DT><DD>Rate of the segment.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030900" TARGET="TEXT">IPin::NewSegment</A> method and overrides the <A HREF="dssd0200.htm#Lib_0001060214061c00" TARGET="TEXT">CBasePin::NewSegment</A> member function. It calls the base class implementation first (<B>CBasePin::NewSegment</B>), and then calls <A HREF="dssd0247.htm#Lib_0001060243041000" TARGET="TEXT">CTransformFilter::NewSegment</A> to pass the notification on to the next filter downstream.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050c00">CTransformInputPin::PassNotify</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Passes a quality-control notification to the appropriate sink.

<P><B>HRESULT</B> <B>PassNotify</B><B>(</B><BR>&nbsp;&nbsp;<B>Quality</B> <I>q</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>q</I>
</DT><DD>Quality-control notification object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Output pins receive quality-control notifications and, if possible, filters act on them to degrade appropriately. Often, filters cannot respond to the notifications; in this case the notification should be passed to the quality-control sink or, by default, upstream to the next filter. The <B>PassNotify</B> member function is called from the <A HREF="dssd0249.htm#Lib_0001060245070a00" TARGET="TEXT">CTransformOutputPin::Notify</A> member function when a notification requires passing. The <A HREF="dssd0287.htm#structs_0001060501001700" TARGET="TEXT">Quality</A> structure passed is the one that the output pin received.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050d00">CTransformInputPin::QueryId</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Retrieves an identifier for the pin.

<P><B>HRESULT</B> <B>QueryId</B><B>(</B><BR>&nbsp;&nbsp;<B>LPWSTR</B> <B>*</B> <I>Id</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Id</I>
</DT><DD>Pin identifier.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030c00" TARGET="TEXT">IPin::QueryId</A> method and overrides the <A HREF="dssd0200.htm#Lib_0001060214062300" TARGET="TEXT">CBasePin::QueryId</A> member function. It returns the name "In". The caller is responsible for freeing the memory by using the Microsoft&#174; Win32&#174; <A HREF="dssd0389.htm#external_00010a0109000011" TARGET="TEXT">CoTaskMemFree</A> function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050e00">CTransformInputPin::Receive</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Receives the next block of data from the stream.

<P><B>HRESULT</B> <B>Receive</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <B>*</B> <I>pSample</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSample</I>
</DT><DD>Pointer to a media sample.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0161.htm#If_0001060149030400" TARGET="TEXT">IMemInputPin::Receive</A> method. Add a reference to the block of data if access to it is required after the completion of this method. For instance, some decoder filters for temporal compression data streams require that the previous sample be kept in order to decode the current sample. 

<P>This member function calls the <A HREF="dssd0247.htm#Lib_0001060243041200" TARGET="TEXT">CTransformFilter::Receive</A> member function, which does the work of calling the transform function and then passing the sample on. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060244050f00">CTransformInputPin::SetMediaType</A></H3>
<A HREF="dssd0248.htm" TARGET="TEXT">CTransformInputPin Class</A>
<P>Informs the derived class when the media type is established for the connection.

<P><B>HRESULT</B> <B>SetMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType*</B> <I>mt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>mt</I>
</DT><DD>Pointer to an input media type to be used.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function overrides the <A HREF="dssd0200.htm#Lib_0001060214062800" TARGET="TEXT">CBasePin::SetMediaType</A> member function. It calls the base class <B>CBasePin::SetMediaType</B> member function, which returns NOERROR, and then calls <A HREF="dssd0247.htm#Lib_0001060243041400" TARGET="TEXT">CTransformFilter::SetMediaType</A>, which the derived class can override to be informed when the media type is set.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
