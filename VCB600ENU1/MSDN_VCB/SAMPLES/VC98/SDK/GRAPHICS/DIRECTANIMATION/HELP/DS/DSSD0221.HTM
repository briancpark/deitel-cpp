<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CImageDisplay Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0220.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0222.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060229000000">CImageDisplay Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/wutil06.gif" WIDTH="205" HEIGHT="56" ALT="CImageDisplay class hierarchy" >

<P>This class initializes itself with a display format so that other objects can
query or reset the display type. It also provides member functions to check display formats
and accept only those video formats that can be efficiently rendered by using GDI calls.

<A NAME="Lib_0001060229010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060229010001">m_Display</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure corresponding to the current device display type.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060229020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020100" TARGET="TEXT">CheckBitFields</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Checks that the bit fields on a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure are correct.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020200" TARGET="TEXT">CheckHeaderValidity</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if a <A HREF="dssd0075.htm#avispec_0001050502020800" TARGET="TEXT">BITMAPINFOHEADER</A> structure is valid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020300" TARGET="TEXT">CheckMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the filter can support the media type proposed by the output pin.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020400" TARGET="TEXT">CheckPaletteHeader</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the palette on a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure is correct.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020500" TARGET="TEXT">CheckVideoType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Compares a video type to determine if it is compatible with the current display mode.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020600" TARGET="TEXT">CImageDisplay</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020700" TARGET="TEXT">CountPrefixBits</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Counts the number of prefix bits.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020800" TARGET="TEXT">CountSetBits</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Counts the total number of bits set in a field.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020900" TARGET="TEXT">GetBitMasks</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a set of color element bitmasks for the supplied <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A>
structure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020a00" TARGET="TEXT">GetColourMask</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a set of individual color element masks.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020b00" TARGET="TEXT">GetDisplayDepth</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the bit depth of the current display mode.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020c00" TARGET="TEXT">GetDisplayFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure representing the current display mode.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020d00" TARGET="TEXT">IsPalettized</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the display uses a palette.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020e00" TARGET="TEXT">RefreshDisplayType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Updates the <A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay</A> object with the current display type.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0221.htm#Lib_0001060229020f00" TARGET="TEXT">UpdateFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Updates the <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure to remove implicit assumptions.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020100">CImageDisplay::CheckBitFields</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Checks that the bit fields in the <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure are correct.

<P><B>BOOL</B> <B>CheckBitFields</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>VIDEOINFO</B> <I>*pInput</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pInput</I>
 </DT><DD><A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure to check.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">TRUE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Bit fields are correct.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Bit fields contain an error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The assumption throughout the object is that any bitmasks are allowed no
more than 8 bits to store a color component. This member function checks that the
bit count assumption is enforced, and also ensures that all the bits set are contiguous.

<P>This is a protected member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020200">CImageDisplay::CheckHeaderValidity</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Determines if a <A HREF="dssd0075.htm#avispec_0001050502020800" TARGET="TEXT">BITMAPINFOHEADER</A> structure is valid.

<P><B>BOOL</B> <B>CheckHeaderValidity</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>VIDEOINFO</B> <I>*pInput</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pInput</I>
 </DT><DD><A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure that contains the bitmap details.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">TRUE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Format is valid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Format contains an error.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>The <A HREF="dssd0075.htm#avispec_0001050502020800" TARGET="TEXT">BITMAPINFOHEADER</A> structure might be rejected for a number of reasons.
These might include a number-of-planes entry greater or less than one, the size of the
structure not being equal to the size of <B>BITMAPINFOHEADER</B>, 
or, perhaps, being asked to validate a YUV format (this member function only
validates RGB formats; it will always return FALSE for YUV types).

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020300">CImageDisplay::CheckMediaType</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Determines if the filter can support the media type proposed by the output pin.

<P><B>HRESULT</B> <B>CheckMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType</B> <I>*pmtIn</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pmtIn</I>
 </DT><DD>Media type to check.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This helper member function can be used to validate a video media type. It
examines the major and minor type <A HREF="dssd0397.htm#gloss_00010b0108000001" TARGET="TEXT">GUID</A>s and verifies that the format <B>GUID</B> defines a
<A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020400">CImageDisplay::CheckPaletteHeader</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Determines if the palette on a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure is correct.

<P><B>BOOL</B> <B>CheckPaletteHeader</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>VIDEOINFO</B> <I>*pInput</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pInput</I>
 </DT><DD><A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure to validate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">TRUE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Palette is correct.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No valid palette.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This member function returns FALSE if the format specifies that no palette is
available (it might be a true-color format). It also returns FALSE if the
number of palette colors used (or those that are important) exceeds the number
specified for the video format.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020500">CImageDisplay::CheckVideoType</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Compares a video type to determine if it is compatible with the current display mode.

<P><B>HRESULT</B> <B>CheckVideoType</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>VIDEOINFO</B> <I>*pInput</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pInput</I>
 </DT><DD><A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure to validate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>Many video rendering filters want a function to determine if proposed
formats are okay. This member function checks the <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure
passed as a media type and returns NOERROR if the media type is valid; otherwise,
it returns E_INVALIDARG434. Note, however, that only formats that can be
easily displayed on the current display device are accepted; so, for example, a 16-bit device
will not accept 24-bit images. Because most displays draw 8-bit palettized images efficiently,
this format is always accepted unless the display is 16-color VGA.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020600">CImageDisplay::CImageDisplay</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Constructs a <A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay</A> object.

<P><B>CImageDisplay</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>The <A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay</A> class helps renderers that want to determine the format of the
current display mode. This member function retrieves the display mode and creates a
<A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure that represents its format. The class supplies that format
for clients through member functions such as <A HREF="dssd0221.htm#Lib_0001060229020d00" TARGET="TEXT">IsPalettized</A>
and <A HREF="dssd0221.htm#Lib_0001060229020c00" TARGET="TEXT">GetDisplayFormat</A>.
If a client detects the display format has changed (perhaps it receives a
WM_DISPLAYCHANGED message), it should call
<A HREF="dssd0221.htm#Lib_0001060229020e00" TARGET="TEXT">RefreshDisplayType</A>.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020700">CImageDisplay::CountPrefixBits</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Helper member function to count the number of prefix bits.

<P><B>DWORD</B> <B>CountPrefixBits</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>DWORD</B> <I>Field</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Field</I>
 </DT><DD>Input bitmask field.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>Given a bitmask, this member function counts the number of zero bits up to the least
significant set bit. So, for a binary number 00000100, the member function returns
2 (decimal). The member function does, however, work on <A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A> values, so it counts from
the least significant bit up through the <B>DWORD</B> to the last bit (0x80000000). If no
bits are found, this will return the (impossible) value 32 (decimal).

<P>This is a protected member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020800">CImageDisplay::CountSetBits</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Counts the number of bit sets in the <I>Field</I> parameter.

<P><B>DWORD</B> <B>CountSetBits</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>DWORD</B> <I>Field</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Field</I>
 </DT><DD>Field in which to count bit sets.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the number of bit sets.

<H5>Remarks</H5>
<P>This is a protected member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020900">CImageDisplay::GetBitMasks</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Retrieves a set of color element bitmasks for the supplied <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A>
structure.

<P><B>const</B> <B>DWORD</B> <B>*GetBitMasks</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>VIDEOINFO</B> <I>*pVideoInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pVideoInfo</I>
 </DT><DD>Input <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure format.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>This member function should be called only with RGB formats. If the RGB format has a
bit depth of 16/32 bits per pixel, it will return the bitmasks for
the individual red, green, and blue color elements (for example, RGB565
is 0xF800, 0x07E0, and 0x001F). For RGB24, this will return 0xFF0000, 0xFF00,
and 0xFF. For palettized formats, this will return all zeros.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020a00">CImageDisplay::GetColourMask</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Retrieves a set of individual color element masks.

<P><B>BOOL</B> <B>GetColourMask</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pMaskRed</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pMaskGreen</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pMaskBlue</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pMaskRed</I>
 </DT><DD>Holds red mask.
</DD><DT><I>pMaskGreen</I>
 </DT><DD>Holds green mask.
</DD><DT><I>pMaskBlue</I>
 </DT><DD>Holds blue mask.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">TRUE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Masks were filled out correctly.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">FALSE </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No masks were available for the display.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Given a video format described by a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure,
this member function returns the mask
that is used to obtain the range of acceptable colors for this type (for
example, the mask for a 24-bit true color format is 0xFF in all cases). A
16-bit 5:6:5 display format uses 0xF8, 0xFC, and 0xF8. Therefore, given any
RGB triplets, this member function can find one that is
compatible with the display format by using a bitwise-AND operation.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020b00">CImageDisplay::GetDisplayDepth</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Retrieves the bit depth of the current display mode.

<P><B>WORD</B> <B>GetDisplayDepth</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the number of bits per pixel used on the display.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020c00">CImageDisplay::GetDisplayFormat</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Retrieves a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure representing the current display mode.

<P><B>const</B> <B>VIDEOINFO</B> <B>*GetDisplayFormat</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure representing the display format.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020d00">CImageDisplay::IsPalettized</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Determines if the display uses a palette.

<P><B>BOOL</B> <B>IsPalettized</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns TRUE if the display uses a palette; otherwise, returns FALSE.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020e00">CImageDisplay::RefreshDisplayType</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Updates the <A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay</A> object with the current display type.

<P><B>HRESULT</B> <B>RefreshDisplayType</B><B>(</B><BR>&nbsp;&nbsp;<B>LPSTR</B> <I>szDeviceName</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>szDeviceName</I>
 </DT><DD><A HREF="dssd0389.htm#external_00010a01090000ae" TARGET="TEXT">LPSTR</A> value that contains the name of the device to update. If omitted, this parameter defaults to the main device.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function should be called when a WM_DISPLAYCHANGED message is received.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060229020f00">CImageDisplay::UpdateFormat</A></H3>
<A HREF="dssd0221.htm" TARGET="TEXT">CImageDisplay Class</A>
<P>Updates the <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure to remove implicit assumptions.

<P><B>HRESULT</B> <B>UpdateFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>VIDEOINFO</B> <I>*pVideoInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pVideoInfo</I>
 </DT><DD><A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure to update.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is probably suitable only for specific filters to use.
The <A HREF="dssd0075.htm#avispec_0001050502020801" TARGET="TEXT">BITMAPINFO</A> structure has certain fields that are not well
specified. In particular, the number of colors specified for a palette can be zero,
in which case it is defined to be the maximum for that format type.
This member function updates these fields so that their contents are explicit.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
