<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Event Notification Codes</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0290.htm','/dssd0000.htm','/dssd0290.htm','/index.htm','/dssd0292.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="events_0001060801000000">Event Notification Codes</A></H2>
<BR CLEAR=ALL>
<P>Microsoft&#174; DirectShow&#153; supports system-defined events, which filters in the filter graph pass to the filter graph manager. Filters pass these events to the filter graph manager by using the <A HREF="dssd0152.htm#If_0001060140030100" TARGET="TEXT">IMediaEventSink::Notify</A> method, and the application retrieves them with the <A HREF="dssd0150.htm#If_000106013e030300" TARGET="TEXT">IMediaEvent::GetEvent</A> method.

<P>When you retrieve an event by calling <A HREF="dssd0150.htm#If_000106013e030300" TARGET="TEXT">GetEvent</A>, the event can contain interface pointers or pointers to allocated memory. Code that uses <B>GetEvent</B> should, therefore, call <A HREF="dssd0150.htm#If_000106013e030200" TARGET="TEXT">IMediaEvent::FreeEventParams</A> to free any resources associated with the event's parameters after it handles the event.

<P>The system-defined event notification codes are listed in the Evcode.h header file. <P>See <A HREF="dssd0292.htm#dvdevent_0001060901000000" TARGET="TEXT">DVD Event Notification Codes</A> for event notification codes that are specific to DVD. The following list shows the available event notification codes in alphabetical order. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event Notification Code </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000100" TARGET="TEXT">EC_ACTIVATE</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An audio or video renderer is losing or gaining activation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000200" TARGET="TEXT">EC_BUFFERING_DATA</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The buffering status is changing.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000300" TARGET="TEXT">EC_CLOCK_CHANGED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The filter graph has changed from one reference clock to another.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000400" TARGET="TEXT">EC_COMPLETE</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">All data has been rendered.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000500" TARGET="TEXT">EC_DISPLAY_CHANGED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The current display mode has been changed.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000600" TARGET="TEXT">EC_ERROR_STILLPLAYING</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">At least one call to <A HREF="dssd0194.htm#Lib_000106020e081500" TARGET="TEXT">Run</A> failed in an active filter graph. The current state of any underlying filter graph or graphs is indeterminate; they might be running, but some are almost certainly not.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000700" TARGET="TEXT">EC_ERRORABORT</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An error forced the termination of a requested operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000800" TARGET="TEXT">EC_FULLSCREEN_LOST</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The video renderer is switching out of full-screen mode.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000900" TARGET="TEXT">EC_NEED_RESTART</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The current graph must be stopped and restarted.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000a00" TARGET="TEXT">EC_NOTIFY_WINDOW</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pass the window handle around during pin connection.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000b00" TARGET="TEXT">EC_OLE_EVENT</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A filter is passing a text string to the application.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000c00" TARGET="TEXT">EC_OPENING_FILE</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The open file status is changing.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000d00" TARGET="TEXT">EC_PALETTE_CHANGED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The video palette has changed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000e00" TARGET="TEXT">EC_QUALITY_CHANGE</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The playback quality has changed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801000f00" TARGET="TEXT">EC_REPAINT</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A repaint is required.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001000" TARGET="TEXT">EC_SHUTTING_DOWN</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The filter graph is starting to shut down. DirectShow passes this notification to any plug-in distributors that support the <A HREF="dssd0152.htm" TARGET="TEXT">IMediaEventSink</A> interface.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001100" TARGET="TEXT">EC_STARVATION</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of the filters (usually a parser or file source filter) isn't receiving enough data. By default, the filter graph manager will pause all running filters, and then return to normal operation when enough data is available.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001200" TARGET="TEXT">EC_STREAM_CONTROL_STARTED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The starting reference time from an earlier call to <A HREF="dssd0106.htm#If_0001060112030100" TARGET="TEXT">IAMStreamControl::StartAt</A> passed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001300" TARGET="TEXT">EC_STREAM_CONTROL_STOPPED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stopping reference time from an earlier call to <A HREF="dssd0106.htm#If_0001060112030200" TARGET="TEXT">IAMStreamControl::StopAt</A> passed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001400" TARGET="TEXT">EC_STREAM_ERROR_STILLPLAYING</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream is still playing, but should not be playing.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001500" TARGET="TEXT">EC_STREAM_ERROR_STOPPED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream has stopped, but should not have stopped.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001600" TARGET="TEXT">EC_TIME</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The requested reference time occurred.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001700" TARGET="TEXT">EC_USERABORT</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A user has forced the termination of a requested operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001800" TARGET="TEXT">EC_VIDEO_SIZE_CHANGED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the native video has changed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0291.htm#events_0001060801001900" TARGET="TEXT">EC_WINDOW_DESTROYED</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The video renderer's filter is being removed or destroyed.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000100">EC_ACTIVATE</A></H3>
<P>An audio or video renderer is losing or gaining activation. The audio or video renderer sends this event notification.
<P><B>EC_ACTIVATE</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
</DT><DD>Set to 1 if activation gained, or 0 if lost.
</DD><DT><I>lParam2</I>
 </DT><DD>Pointer to the <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface that is sending the event notification.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is not sent to the application. This notification is used for sound-follows-focus and full-screen switching. To interact in full-screen protocols, a video renderer should send an <B>EC_ACTIVATE</B> notification whenever its window is either activated or deactivated. In other words, an <B>EC_ACTIVATE</B> notification should be sent for each WM_ACTIVATEAPP message received by a renderer.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000200">EC_BUFFERING_DATA</A></H3>
<P>The buffering status is changing.
<P><B>EC_BUFFERING_DATA</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
</DT><DD>Set to 1 if starting to buffer data, or 0 if not buffering any more.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent to the application. This notification is used to allow the user interface to indicate that some data (media) is being buffered (loaded) prior to being processed by DirectShow. This notification is also sent when the buffering has stopped.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000300">EC_CLOCK_CHANGED</A></H3>
<P>The filter graph has changed from one reference clock to another.
<P><B>EC_CLOCK_CHANGED</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>One likely cause of this event notification is a call to the <A HREF="dssd0153.htm#If_0001060141030500" TARGET="TEXT">IMediaFilter::SetSyncSource</A> method.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000400">EC_COMPLETE</A></H3>
<P>All data has been rendered. Renderers send this event notification.
<P><B>EC_COMPLETE</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD><A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value of some operation. This can be S_OK.


</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>The default is not to send this event notification to the application, you can override the default by calling the <A HREF="dssd0150.htm#If_000106013e030100" TARGET="TEXT">IMediaEvent::CancelDefaultHandling</A> method.
No more data should be accepted after the <A HREF="dssd0165.htm#If_000106014d030700" TARGET="TEXT">EndOfStream</A> method is called on the renderer's input pin. Exactly one <B>EC_COMPLETE</B> notification must be sent for each logical stream. Stopping a renderer resets any end-of-stream state that is cached.

<P>Although individual <B>EC_COMPLETE</B> events aren't sent by default, the last individual <B>EC_COMPLETE</B> is sent to the application when all streams
have sent one to the filter graph. If the default handling is turned off, the application gets them all (one per stream).
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000500">EC_DISPLAY_CHANGED</A></H3>
<P> The current display mode has been changed. Renderers send this event notification when they detect a display change.
<P><B>EC_DISPLAY_CHANGED</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Pointer to the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface that should be reconnected by the graph.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is not sent to the application. Most video renderers pick a format during connection so that the format can be drawn efficiently through GDI. If the user changes the current display mode without restarting the machine, a renderer might find itself with a bad image format connection. In these situations, a renderer might send an <B>EC_DISPLAY_CHANGED</B> event code to the filter graph manager. The first parameter should be the pin that needs reconnecting. The filter graph manager will arrange for the filter graph to be stopped and the pin reconnected. During the subsequent reconnection, the renderer can accept a more appropriate format.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000600">EC_ERROR_STILLPLAYING</A></H3>
<P>A playback error has occurred, but the graph is still playing.
<P><B>EC_ERROR_STILLPLAYING</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD><A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value of some operation that failed.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000700">EC_ERRORABORT</A></H3>
<P>An error forced the termination of a requested operation.
<P><B>EC_ERRORABORT</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD><A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value of some operation that failed. For instance, this might be <A HREF="dssd0293.htm#errcodes_0001060a0100003f" TARGET="TEXT">VFW_E_CANNOT_CONNECT</A> if a reconnect failed.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>A filter or the filter graph manager generates this event notification and sends it to the application.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000800">EC_FULLSCREEN_LOST</A></H3>
<P>The video renderer is switching out of full-screen mode. 
<P><B>EC_FULLSCREEN_LOST</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>The full-screen renderer sends this event notification to an application. When the <A HREF="dssd0291.htm#events_0001060801000100" TARGET="TEXT">EC_ACTIVATE</A> notification is sent to the filter graph manager upon switching out of full-screen mode, the filter graph manager sends an <B>EC_FULLSCREEN_LOST</B> notification to the controlling application. The application might use this notification to restore the state of a full-screen button, for example. The <B>EC_ACTIVATE</B> notifications are used internally by DirectShow to manage full-screen switching on cues from the video renderers.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000900">EC_NEED_RESTART</A></H3>
<P>The current graph must be stopped and restarted.
<P><B>EC_NEED_RESTART</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>Renderers send this notification when they regain a resource. For example, if a renderer loses contact with a device and rejects the next data sample, the stream must reconnect to the device and restart at the current position to start rendering data again. If the media stream is currently running, DirectShow calls <A HREF="dssd0103.htm#If_000106010f031100" TARGET="TEXT">IAMovie::Pause</A> to pause the stream, <A HREF="dssd0103.htm#If_000106010f031400" TARGET="TEXT">IAMovie::put_CurrentPosition</A> to set the current position, and <A HREF="dssd0103.htm#If_000106010f031e00" TARGET="TEXT">IAMovie::Run</A> to restart the stream.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000a00">EC_NOTIFY_WINDOW</A></H3>
<P>Pass the window handle around during pin connection.
<P><B>EC_NOTIFY_WINDOW</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Handle to the window.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000b00">EC_OLE_EVENT</A></H3>
<P>A filter is passing a text string to the application.
<P><B>EC_OLE_EVENT</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD><A HREF="dssd0389.htm#external_00010a0109000006" TARGET="TEXT">BSTR</A> for the event notification. The application must free the <B>BSTR</B> by calling the <A HREF="dssd0150.htm#If_000106013e030200" TARGET="TEXT">IMediaEvent::FreeEventParams</A> method.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000c00">EC_OPENING_FILE</A></H3>
<P>The open file status is changing.
<P><B>EC_OPENING_FILE</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
</DT><DD>Set to 1 if starting to open file, or 0 if not opening any more.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent to the application. This notification is used to allow the user interface to indicate that a media file is being opened prior to being processed by DirectShow. (Because the file might be on the Internet or some slow device, some opens might take longer.) This notification is also sent when the file has been opened.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000d00">EC_PALETTE_CHANGED</A></H3>
<P>The video palette has changed.
<P><B>EC_PALETTE_CHANGED</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent to the application and the filter graph manager. Whenever a video renderer detects a palette change in the stream, it should send the <B>EC_PALETTE_CHANGED</B> notification to the filter graph manager. The DirectShow video renderers detect whether a palette has really changed in dynamic format or not. The video renderers do this not only to filter out the number of <B>EC_PALETTE_CHANGED</B> notifications sent, but also to reduce the amount of palette creation, installation,
and deletion required.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000e00">EC_QUALITY_CHANGE</A></H3>
<P>The playback quality has changed.
<P><B>EC_QUALITY_CHANGE</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent to the application from a filter. This notification occurs only once if degradation has occurred and a filter has responded to a quality event notification.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801000f00">EC_REPAINT</A></H3>
<P>A repaint is required. Paused or stopped video renderers send this message when they receive a WM_PAINT message and there is no data to display.

<P><B>EC_REPAINT</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Pointer to the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface that needs the data to be sent again.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>The default is not to send this event notification to the application, although the default can be overridden by calling <A HREF="dssd0150.htm#If_000106013e030100" TARGET="TEXT">IMediaEvent::CancelDefaultHandling</A>.
A renderer should send its input pin as the first parameter to the event. By doing this, the attached output pin will be queried for <A HREF="dssd0152.htm" TARGET="TEXT">IMediaEventSink</A>, and if supported, the <B>EC_REPAINT</B> notification will be sent there first. This allows output pins to handle repaints before the filter graph must be touched.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001000">EC_SHUTTING_DOWN</A></H3>
<P>The shutdown of the filter graph is starting.
<P><B>EC_SHUTTING_DOWN</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is not sent to the application. This notification notifies plug-in distributors that the filter graph is shutting down.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001100">EC_STARVATION</A></H3>
<P>A filter has detected starvation.
<P><B>EC_STARVATION</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>A filter sends this event notification. This notification is not sent to the application. The default handling of this notification (only when running) is for the graph to be paused until all filters enter the paused state, and then to wait for the pause to complete. The filter which signaled <B>EC_STARVATION</B> should not complete
the pause until it has enough data to resume. Normally, this would be sent by a parser or source filter when too little data is arriving.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001200">EC_STREAM_CONTROL_STARTED</A></H3>
<P>A previous call to the <A HREF="dssd0106.htm#If_0001060112030100" TARGET="TEXT">IAMStreamControl::StartAt</A> method has taken effect.

<P><B>EC_STREAM_CONTROL_STARTED</B><BR><H5>Parameters</H5>
<DL><DT><I>pSender</I>
 </DT><DD>Address of an <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface that will contain the pin that called <A HREF="dssd0106.htm#If_0001060112030100" TARGET="TEXT">IAMStreamControl::StartAt</A>. 
</DD><DT><I>dwCookie</I>
 </DT><DD><A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A> value that you can use to mark the start.
</DD></DL>
<H5>Remarks</H5>
<P>You can mark calls to this event with <I>dwCookie</I>, allowing applications to easily associate request and completion notifications.

<P>After the completion of this event, <I>pSender</I> will point to the pin that called <A HREF="dssd0106.htm#If_0001060112030100" TARGET="TEXT">IAMStreamControl::StartAt</A>. This is not necessarily the pin that received the <B>IAMStreamControl::StartAt</B> call.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001300">EC_STREAM_CONTROL_STOPPED</A></H3>
<P>A previous call to the <A HREF="dssd0106.htm#If_0001060112030200" TARGET="TEXT">IAMStreamControl::StopAt</A> method has taken effect.

<P><B>EC_STREAM_CONTROL_STOPPED</B><BR><H5>Parameters</H5>
<DL><DT><I>pSender</I>
 </DT><DD>Address of an <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface that will contain the pin that called <A HREF="dssd0106.htm#If_0001060112030200" TARGET="TEXT">IAMStreamControl::StopAt</A>. 
</DD><DT><I>dwCookie</I>
 </DT><DD><A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A> value that you can use to mark the stop.
</DD></DL>
<H5>Remarks</H5>
<P>You can mark calls to this event with <I>dwCookie</I>, allowing applications to easily associate request and completion notifications.

<P>After the completion of this event, <I>pSender</I> will point to the pin that called <A HREF="dssd0106.htm#If_0001060112030200" TARGET="TEXT">IAMStreamControl::StopAt</A>. This is not necessarily the pin that received the <B>IAMStreamControl::StopAt</B> call.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001400">EC_STREAM_ERROR_STILLPLAYING</A></H3>
<P>The stream is still playing, but should not be playing.
<P><B>EC_STREAM_ERROR_STILLPLAYING</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Major code (<A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> of some operation that failed).
</DD><DT><I>lParam2</I>
 </DT><DD>Minor code (generally zero).
</DD></DL>
<H5>Remarks</H5>
<P>A filter send this event notification to the filter graph manager and the application.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001500">EC_STREAM_ERROR_STOPPED</A></H3>
<P>The stream has stopped, but should not have stopped.
<P><B>EC_STREAM_ERROR_STOPPED</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Major code (<A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> of some operation that failed).
</DD><DT><I>lParam2</I>
 </DT><DD>Minor code (generally zero.).
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent from a filter to the filter graph manager and
the application.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001600">EC_TIME</A></H3>
<P>The requested reference time occurred.
<P><B>EC_TIME</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Reference time, low-order <A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A>.
</DD><DT><I>lParam2</I>
 </DT><DD>Reference time, high-order <A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A>.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001700">EC_USERABORT</A></H3>
<P>A user has forced the termination of a requested operation.
<P><B>EC_USERABORT</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Zero.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent by video renderers to the filter graph manager and the application. This notification signals a closure that the user requested. For example, this notification would be sent if the user closed the video window. After this notification has been sent, no more samples should be accepted until the renderer has gone through a stop transition. No <A HREF="dssd0291.htm#events_0001060801000f00" TARGET="TEXT">EC_REPAINT</A> notifications should be sent after an <B>EC_USERABORT</B> notification is sent unless the renderer is stopped and reset.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001800">EC_VIDEO_SIZE_CHANGED</A></H3>
<P>The size of the native video has changed.
<P><B>EC_VIDEO_SIZE_CHANGED</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Low-order <B>WORD</B> value is the width in pixels; high-order <B>WORD</B> is the height in pixels.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is sent whenever a video renderer detects a change in native video size. An application might use this notification to negotiate space in a compound document. The actual video dimensions are available through the <A HREF="dssd0118.htm" TARGET="TEXT">IBasicVideo</A> control interface. The DirectShow renderers detect whether the video has changed size or not prior to sending these events.
<H3><HR COLOR=#0000FF><A NAME="events_0001060801001900">EC_WINDOW_DESTROYED</A></H3>
<P>The video renderer's filter is being removed or destroyed. Video renderers send this event notification so that resources that depend on window focus can be passed to other filters.
<P><B>EC_WINDOW_DESTROYED</B><BR><H5>Parameters</H5>
<DL><DT><I>lParam1</I>
 </DT><DD>Pointer to the <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface whose window is being destroyed.
</DD><DT><I>lParam2</I>
 </DT><DD>Zero.
</DD></DL>
<H5>Remarks</H5>
<P>This event notification is not sent to the application. A renderer should send this notification when its window is destroyed. The first parameter must be the renderer's <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface. In fact, sending this when the filter is being destroyed might be too late, because the filter graph manager might have already been destroyed. Therefore, it is best to handle this when the renderer's <A HREF="dssd0116.htm#If_000106011c030300" TARGET="TEXT">IBaseFilter::JoinFilterGraph</A> method is called with a null filter graph (indicating that the renderer is about to be
removed from the filter graph). Sending these event codes allows the plug-in distributor in the filter graph manager to pass on resources that depend on window focus to other filters (such as audio devices).
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
