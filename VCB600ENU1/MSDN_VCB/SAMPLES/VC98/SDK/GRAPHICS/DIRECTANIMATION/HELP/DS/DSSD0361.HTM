<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IMultiMediaStream Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0360.htm','/dssd0000.htm','/dssd0360.htm','/index.htm','/dssd0362.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="mms_face_0001080301000000">IMultiMediaStream Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IMultiMediaStream</B> interface provides methods that control a multimedia stream and provide access to its underlying media streams. A multimedia stream is the highest-level streaming object and can contain one or more media streams. While each media stream is media-type specific (audio, video, and so on), multimedia streams are generic across all types



 because they must provide access to a number of streams that can have very different media types. <B>IMultiMediaStream</B> interface methods enable you to enumerate and retrieve pointers to the specific streams; <A HREF="dssd0362.htm" TARGET="TEXT">IMediaStream</A> interface methods provide specific control over the media stream behavior.

<P>For sample code which implements the Multimedia streaming interfaces see <A HREF="dssd0375.htm#mm_code_0001080501000000" TARGET="TEXT">Multimedia Streaming Sample Code</A>.

<A NAME="mms_face_0001080301010000"></A><P><B>When to Implement</B>
<P>Implement this interface when you want create containers for a specific type of media stream.

<A NAME="mms_face_0001080301020000"></A><P><B>When to Use</B>
<P>Use this interface when application need to enumerate and control a multimedia stream's underlying, type-specific streams.



<A NAME="mms_face_0001080301030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IMultiMediaStream methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030400" TARGET="TEXT">GetInformation</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the capabilities and stream type of a mulitmedia stream. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030500" TARGET="TEXT">GetMediaStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a media stream that has the specified purpose ID.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030100" TARGET="TEXT">EnumMediaStreams</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a media stream from a multimedia stream by zero-based index.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030600" TARGET="TEXT">GetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the multimedia stream's current state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030900" TARGET="TEXT">SetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the media stream to either a running or stopped state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030700" TARGET="TEXT">GetTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current time from the multimedia stream's clock, if it has a clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030200" TARGET="TEXT">GetDuration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the media stream's duration.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030800" TARGET="TEXT">Seek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the seek location of all derived media streams to the specified time.




</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0361.htm#mms_face_0001080301030300" TARGET="TEXT">GetEndOfStreamEventHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the handle for the event triggered when the stream completes playback.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030100">IMultiMediaStream::EnumMediaStreams</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Retrieves a media stream from a multimedia stream by zero-based index.
<P><B>HRESULT</B> <B>EnumMediaStreams</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>Index</I><B>,</B><BR>&nbsp;&nbsp;<B>IMediaStream**</B> <I>ppMediaStream</I> <B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>Index</I>
 </DT><DD>[in] Index of the stream array to check.
</DD><DT><I>ppMediaStream</I>
 </DT><DD>[out] Address of a pointer to an <A HREF="dssd0362.htm" TARGET="TEXT">IMediaStream</A> interface object. On return,



 it contains a pointer to the stream at the specified index.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>ppMediaStream</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>Index</I> is out of range; no streams are left to enumerate. When the method returns this value, it also sets <I>ppMediaStream</I> to NULL.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>You should call this method until it returns S_FALSE, which indicates that the stream enumeration is complete.
<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030200">IMultiMediaStream::GetDuration</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Returns the media stream's duration.
<P><B>HRESULT</B> <B>GetDuration</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_TIME</B> <I>*pDuration</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pDuration</I>
 </DT><DD>[out] Pointer to a <A HREF="dssd0372.htm#mm_types_000108030c000001" TARGET="TEXT">STREAM_TIME</A> value that will contain the media duration.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value of <I>pDuration</I> is invalid.



</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_WRITESTREAM
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The media stream is writable and therefore has no duration.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream contains live data or this method couldn't determine the duration. On exit, this method sets <I>pDuration</I> to zero.



</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream contains recorded media. On return, <I>pDuration</I> contains duration of media.



</FONT></TD></TR></TABLE>

<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030300">IMultiMediaStream::GetEndOfStreamEventHandle</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Retrieves the handle for the event triggered when the stream completes playback.
<P><B>HRESULT</B> <B>GetEndOfStreamEventHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>HANDLE*</B> <I>phEOS</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>phEOS</I>
 </DT><DD>[out] Pointer to a HANDLE



 of an event returned by the current object when it completes playback.



 If no such handle exists, this value will be null.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful or E_POINTER if one or more of the required parameters are null.

<H5>Remarks</H5>
<P>The Microsoft&#174; Win32&#174; <A HREF="dssd0389.htm#external_00010a01090000da" TARGET="TEXT">WaitForSingleObject</A> and <A HREF="dssd0389.htm#external_00010a01090000d9" TARGET="TEXT">WaitForMultipleObjects</A> functions use the retrieved handle to watch for completion of playback.
<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030400">IMultiMediaStream::GetInformation</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Retrieves the capabilities of a media stream that matches the specified media type.<P><B>HRESULT</B> <B>GetInformation</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>STREAM_TYPE</B> <I>*pStreamType</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pwdFlags</I>
 </DT><DD>[out] Pointer to a value that will contain a combination of one or more of the following flags. Can be NULL.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MMSSF_ASYNCHRONOUS
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream supports asynchronous sample updates. All implementations of <A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream</A> will support the asyncronous updates,



 this flag confirms it.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MMSSF_HASCLOCK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream has a clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MMSSF_SUPPORTSEEK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The stream supports seeking.
</FONT></TD></TR></TABLE>
</DD><DT><I>pStreamType</I>
 </DT><DD>[out] Pointer to a <A HREF="dssd0372.htm#mm_types_000108030c000100" TARGET="TEXT">STREAM_TYPE</A> enumeration type that will contain the media type information for the derived media streams. Can be NULL.



</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful.


<H5>Remarks</H5>
<P>A stream's capabilities include whether it has a clock, if it supports seeking, and whether it supports asynchronous updating. 
<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030500">IMultiMediaStream::GetMediaStream</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Retrieves a media stream that has the specified purpose ID.
<P><B>HRESULT</B> <B>GetMediaStream</B><B>(</B><BR>&nbsp;&nbsp;<B>REFMSPID</B> <I>idPurpose</I><B>,</B><BR>&nbsp;&nbsp;<B>IMediaStream</B> <I>**pMediaStream</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>idPurpose</I>
 </DT><DD>Value



 that specifies the desired stream.
</DD><DT><I>ppMediaStream</I>
 </DT><DD>Address of a pointer to an <A HREF="dssd0362.htm" TARGET="TEXT">IMediaStream</A> interface that will point to the desired media stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>ppMediaStream</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_NOSTREAM
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No stream has the specified purpose ID.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>If a stream exists that matches the purpose ID in <I>idPurpose</I>, the <I>ppMediaStream</I> parameter points to the stream and increments its reference count.

<P>MSPID_PrimaryVideo and MSPID_PrimaryAudio, which represent the primary video and audio streams, are the most commonly used purpose IDs. 


<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030600">IMultiMediaStream::GetState</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Retrieves the multimedia stream's current state.
<P><B>HRESULT</B> <B>GetState</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_STATE*</B> <I>pCurrentState</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrentState</I>
 </DT><DD>[out] Pointer to the <A HREF="dssd0372.htm#mm_types_000108030c000200" TARGET="TEXT">STREAM_STATE</A> enumerated type that will contain the current multimedia stream's state.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful or E_POINTER if <I>pCurrentState</I> is invalid.

<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030700">IMultiMediaStream::GetTime</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Retrieves the current time from the multimedia stream's clock, if it has a clock.
<P><B>HRESULT</B> <B>GetTime</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_TIME*</B> <I>pCurrentTime</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrentTime</I>
 </DT><DD>[out] Pointer to a STREAM_TIME value that will contain the current time, if the media stream has a clock.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <I>pCurrentTime</I> pointer is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_FALSE
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream doesn't have a clock; <I>*pCurrentTime</I> is zero.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream has a clock and the method succeeded; <I>pCurrentTime</I> contains the current time.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>If the stream doesn't have a clock, this method sets <I>*pCurrentTime</I> to zero and returns S_FALSE. If a stream has a clock, the stream sample times are relative to the stream's clock.

<P>STREAM_TIME is defined as a LONGLONG value.


<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030800">IMultiMediaStream::Seek</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Sets the seek location of all contained media streams to the specified time. 
<P><B>HRESULT</B> <B>Seek</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_TIME</B> <I>SeekTime</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>SeekTime</I>
 </DT><DD>[in] <A HREF="dssd0372.htm#mm_types_000108030c000001" TARGET="TEXT">STREAM_TIME</A> value that specifies the seek time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_POINTER
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of the pointers is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_NOSEEKING
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One or more media streams don't support seeking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">MS_E_WRITESTREAM
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The streams are writable and therefore don't support seeking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method won't work on streams that don't support seeking. Before calling this method, retrieve the stream's capabilities by calling <A HREF="dssd0361.htm#mms_face_0001080301030400" TARGET="TEXT">IMultiMediaStream::GetInformation</A>; if the retrieved value includes the MMSSF_SUPPORTSEEK flag, you can call this method.




<P>When seeking a stream that has a clock, the current time can change to an unpredictable value, including a time before the desired seek time. This causes the method to fail.



<P>This method seeks to the specified time in all the media streams contained under the multimedia stream object.


<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080301030900">IMultiMediaStream::SetState</A></H3>
<A HREF="dssd0361.htm" TARGET="TEXT">IMultiMediaStream Interface</A>
<P>Sets the media stream to either a running or stopped state.
<P><B>HRESULT</B> <B>SetState</B><B>(</B><BR>&nbsp;&nbsp;<B>STREAM_STATE</B> <I>NewState</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>NewState</I>
 </DT><DD>[in] A <A HREF="dssd0372.htm#mm_types_000108030c000200" TARGET="TEXT">STREAM_STATE</A> enumeration value that specifies the new media stream state.



</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK.

<H5>Remarks</H5>
<P>When you set the stream to STREAMSTATE_STOP, this method deletes all data still pending.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
