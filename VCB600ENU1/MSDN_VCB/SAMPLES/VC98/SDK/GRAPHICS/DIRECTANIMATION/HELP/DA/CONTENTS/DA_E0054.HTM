<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>DANumber Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0053.htm','/DA_E0000.htm','/DA_E0030.htm','/index.htm','/DA_E0055.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="vref_0001060118000000">DANumber Class</A></H2>
<BR CLEAR=ALL>
<P>Creates a <B>DANumber</B> object that represents an animated number. This means the value of the object can vary over time.

<P>This class inherits from the <A HREF="DA_E0035.htm" TARGET="TEXT">DABehavior</A> class.
<UL><LI><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118010000" TARGET="TEXT">DANumber Functions</A>
<LI><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118020000" TARGET="TEXT">Relevant Functions from the DAStatics Class</A>
<LI><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118030000" TARGET="TEXT">Relevant Properties from the DAStatics Class</A>
</UL>
<H3><A NAME="vref_0001060118010000">DANumber Functions</A></H3>
<P><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118010100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">AnimateProperty</A><BR>
<P><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118010200" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Extract</A><BR>
<P><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118010300" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">ToStringAnim</A><BR>
<P><A CLASS=tctop HREF="DA_E0054.htm#vref_0001060118010400" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">ToString</A><BR>
<H4><HR COLOR=#0000FF><A NAME="vref_0001060118010100">AnimateProperty</A></H4>
<A HREF="DA_E0054.htm" TARGET="TEXT">DANumber Class</A>
<P>Allows control properties to be animated (vary over time). This function forms fragments of script and passes them to the scripting engine on every frame. For example, a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object can be attached to the width property of a frame on an HTML page. When the <I>invoke</I> parameter is FALSE, the property is set directly as shown in this fragment from the JScript sample in JScript\Exercises\AnimatedGlow.html:

<PRE><FONT FACE="Courier" SIZE="2">
glow.AnimateProperty("DAControl.Filter[0].strength", "JScript", false, .08));
</FONT></PRE>
<P>If the <I>invoke</I> parameter is TRUE, then a function name should be specified in the string parameter (<I>property</I>) and is invoked as shown in this fragment from the JScript sample in JScript\Templates\AnimatedProperties.html:

<PRE><FONT FACE="Courier" SIZE="2">
filterMethod = getNumber().AnimateProperty("SetFilter", "JScript", true, .1);
</FONT></PRE>
<P><B>numberObj.AnimateProperty</B><B>(</B><BR>&nbsp;&nbsp;<I>property</I><B>,</B><BR>&nbsp;&nbsp;<I>language</I><B>,</B><BR>&nbsp;&nbsp;<I>invoke</I><B>,</B><BR>&nbsp;&nbsp;<I>update</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>property</I>
 </DT><DD>A string that is either the name of the property to animate or the name of a scripting function to invoke that will set the property.
</DD><DT><I>language</I>
 </DT><DD>A string that is name of the scripting language.
</DD><DT><I>invoke</I>
 </DT><DD>A boolean that determines if the property is set directly or if a function is invoked. If FALSE, the property is set directly. If TRUE, a function is invoked. 
</DD><DT><I>update</I>
 </DT><DD>A double specifying how frequently the position is updated.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0058.htm#vref_000106011c010100" TARGET="TEXT">AnimateControlPositionPixel</A>

<H4><HR COLOR=#0000FF><A NAME="vref_0001060118010200">Extract</A></H4>
<A HREF="DA_E0054.htm" TARGET="TEXT">DANumber Class</A>
<P>Extracts the value of <I>numberObj</I>, returning a number (a double). The object must have a constant value. 

<P><B>numberObj.Extract</B><BR><H5>Return Values</H5>
<P>Returns a number (a double).


<H4><HR COLOR=#0000FF><A NAME="vref_0001060118010300">ToStringAnim</A></H4>
<A HREF="DA_E0054.htm" TARGET="TEXT">DANumber Class</A>
<P>Converts a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to a <A HREF="DA_E0108.htm" TARGET="TEXT">DAString</A> object.

<P><B>numberObj.ToStringAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object representing the number of digits to use after the decimal point. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0108.htm" TARGET="TEXT">DAString</A> object.


<H4><HR COLOR=#0000FF><A NAME="vref_0001060118010400">ToString</A></H4>
<A HREF="DA_E0054.htm" TARGET="TEXT">DANumber Class</A>
<P>Converts a double to a <A HREF="DA_E0108.htm" TARGET="TEXT">DAString</A>.

<P><B>numberObj.ToString</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The double representing the number of digits to use after the decimal point.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0108.htm" TARGET="TEXT">DAString</A> object.


<H3><A NAME="vref_0001060118020000">Relevant Functions from the DAStatics Class</A></H3>
<P>The following functions are defined in the <A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics</A> class and are most relevant for objects of type <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A>.

<P><A HREF="DA_E0089.htm#vref_000106013b000100" TARGET="TEXT">lib.Abs(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000200" TARGET="TEXT">lib.Acos(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000300" TARGET="TEXT">lib.Add(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000400" TARGET="TEXT">lib.Asin(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000500" TARGET="TEXT">lib.Atan(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000600" TARGET="TEXT">lib.Atan2(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000700" TARGET="TEXT">lib.Ceiling(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000800" TARGET="TEXT">lib.Cos(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000900" TARGET="TEXT">lib.DANumber(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000a00" TARGET="TEXT">lib.Derivative(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000b00" TARGET="TEXT">lib.Div(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000c00" TARGET="TEXT">lib.EQ(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000d00" TARGET="TEXT">lib.Exp(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000e00" TARGET="TEXT">lib.Floor(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b000f00" TARGET="TEXT">lib.GT(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001000" TARGET="TEXT">lib.GTE(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001100" TARGET="TEXT">lib.Integral(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001200" TARGET="TEXT">lib.InterpolateAnim(from, to, duration)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001300" TARGET="TEXT">lib.Interpolate(from, to, duration)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001400" TARGET="TEXT">lib.Ln(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001500" TARGET="TEXT">lib.Log10(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001600" TARGET="TEXT">lib.LT(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001700" TARGET="TEXT">lib.LTE(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001800" TARGET="TEXT">lib.Mod(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001900" TARGET="TEXT">lib.Mul(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001a00" TARGET="TEXT">lib.NE(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001b00" TARGET="TEXT">lib.Neg(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001c00" TARGET="TEXT">lib.NumberBSpline(degree, knots, control_elements, weights, evaluation)</A> 
<P><A HREF="DA_E0089.htm#vref_000106013b001d00" TARGET="TEXT">lib.Pow(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001e00" TARGET="TEXT">lib.Round(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b001f00" TARGET="TEXT">lib.SeededRandom(seed)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002000" TARGET="TEXT">lib.Sin(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002200" TARGET="TEXT">lib.SlowInSlowOut(from, to, duration, acceleration)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002100" TARGET="TEXT">lib.SlowInSlowOutAnim(from, to, duration, acceleration)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002300" TARGET="TEXT">lib.Sqrt(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002400" TARGET="TEXT">lib.Sub(a, b)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002500" TARGET="TEXT">lib.Tan(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002600" TARGET="TEXT">lib.ToDegrees(a)</A>
<P><A HREF="DA_E0089.htm#vref_000106013b002700" TARGET="TEXT">lib.ToRadians(a)</A>

<H3><A NAME="vref_0001060118030000">Relevant Properties from the DAStatics Class</A></H3>
<P>The following properties are defined in the <A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics</A> class and are most relevant for objects of type <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A>.

<P><A HREF="DA_E0090.htm#vref_000106013c000100" TARGET="TEXT">lib.GlobalTime</A>
<P><A HREF="DA_E0090.htm#vref_000106013c000200" TARGET="TEXT">lib.LocalTime</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
