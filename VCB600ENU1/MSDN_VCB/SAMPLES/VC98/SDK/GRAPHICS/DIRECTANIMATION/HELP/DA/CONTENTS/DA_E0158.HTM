<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Static Methods Relevant to Behavior Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0157.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0159.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_000107012a000000">Static Methods Relevant to Behavior Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012a000100">cond</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a new behavior from the <A HREF="DA_E0123.htm" TARGET="TEXT">BooleanBvr</A> and two other behaviors. The value of the new behavior, at any point in time, is one of those two behaviors. Which of the behaviors chosen depends on the value of the <B>BooleanBvr</B>. Here is an example:

<PRE><FONT FACE="Courier" SIZE="2">//Create a new behavior, y, which is either 1.0 if x &gt; 1.0, or another behavior, x
&#009;NumberBvr y = (NumberBvr)cond(gte(x, toBvr(1.0)), toBvr(1.0), x);
</FONT></PRE>
<P><B>public</B> <B>static</B> <B>Behavior</B> <B>cond</B><B>(</B><BR>&nbsp;&nbsp;<B>BooleanBvr</B> <I>bool</I><B>,</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>bool</I>
 </DT><DD>The <A HREF="DA_E0123.htm" TARGET="TEXT">BooleanBvr</A> object that determines which of the two behaviors will become the value of the new behavior.
</DD><DT><I>a</I>
 </DT><DD>The first of the two possible values the new behavior can assume.
</DD><DT><I>b</I>
 </DT><DD>The second of the two possible values the new behavior can assume.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012a000200">sequence</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a new behavior that is the sum of the two <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> parameters. In other words, the two behaviors are concatenated, according to their order in the parameter list. Once the duration is over, the behavior becomes a snapshot of the second behavior. An exception is when the first behavior is of infinite duration. In this case, the returned behavior is always the infinite behavior, no matter what the second behavior is.

<P><B>public</B> <B>static</B> <B>Behavior</B> <B>sequence</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The first behavior in the sequence.
</DD><DT><I>b</I>
 </DT><DD>The second behavior in the sequence.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object.


<H5>Remarks</H5>
<P>Notice that, in contrast to <A HREF="DA_E0194.htm#dxmref_000107014e000100" TARGET="TEXT">compose</A>, which first apply the right-hand argument and then the left, <B>sequence</B> first applies the left-hand argument and then the right.

<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012a000300">until</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a behavior that changes when a given event occurs. Up to and including the time the event occurs, the behavior is the same as <I>a</I>. After the event <I>e</I> occurs, the behavior changes to be the same as <I>b</I>. Because <A HREF="DA_E0122.htm" TARGET="TEXT">until</A> takes behaviors and returns a behavior, it can be nested. Here are some examples:

<PRE><FONT FACE="Courier" SIZE="2">//The ColorBvr col is initially red
//It turns blue when the left mouse button is pressed
ColorBvr c = (ColorBvr)until(red, leftButtonDown, blue);

//Example of nested behaviors
//The behavior is initially red
//It turns blue when the left mouse button is pressed
//And turns green when it is pressed again
ColorBvr c = (ColorBvr)until(red, leftButtonDown,
&#009;&#009;&#009;until(blue, leftButtonDown, green));
</FONT></PRE>
<P><B>public</B> <B>static</B> <B>Behavior</B> <B>until</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>DXMEvent</B> <I>e</I><B>,</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object that the behavior represents initially.
</DD><DT><I>e</I>
 </DT><DD>A <A HREF="DA_E0132.htm" TARGET="TEXT">DXMEvent</A> object specifying the event.
</DD><DT><I>b</I>
 </DT><DD>The <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object that the behavior represents after the event.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012a000400">untilEx</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> that changes upon a given event. Initially, the behavior is the same as <I>a</I>. When event <I>e</I> occurs, the behavior changes to the behavior returned by the event. This means that only <A HREF="DA_E0132.htm" TARGET="TEXT">DXMEvents</A> that return a <B>Behavior</B> can be used. These events can be constructed with <A HREF="DA_E0132.htm#dxmref_0001070110020100" TARGET="TEXT">attachData</A>, <A HREF="DA_E0132.htm#dxmref_0001070110020200" TARGET="TEXT">notifyEvent</A>, and <A HREF="DA_E0132.htm#dxmref_0001070110020400" TARGET="TEXT">snapshotEvent</A>.

<P><B>public</B> <B>static</B> <B>Behavior</B> <B>untilEx</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>DXMEvent</B> <I>e</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object that the behavior represents initially.
</DD><DT><I>e</I>
 </DT><DD>The <A HREF="DA_E0132.htm" TARGET="TEXT">DXMEvent</A> object that triggers the switch and returns the new behavior. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object caused by the event <I>e</I>.


<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012a000500">untilNotify</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a behavior that changes upon a given event. Initially, the behavior is the same as <I>a</I>. When event <I>e</I> occurs, the behavior changes to the behavior returned by the event notifier <I>notifier</I>.

<P><B>public</B> <B>static</B> <B>Behavior</B> <B>untilNotify</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>DXMEvent</B> <I>e</I><B>,</B><BR>&nbsp;&nbsp;<B>UntilNotifier</B> <I>notifier</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object that the behavior represents initially.
</DD><DT><I>e</I>
 </DT><DD>A <A HREF="DA_E0132.htm" TARGET="TEXT">DXMEvent</A> object specifying the event.
</DD><DT><I>b</I>
 </DT><DD>The <A HREF="DA_E0208.htm" TARGET="TEXT">UntilNotifier</A> object. The <A HREF="DA_E0208.htm#dxmref_000107015c010100" TARGET="TEXT">notify</A> method of this object, called on the given event, returns the new behavior.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object.


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
