<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IAMDevMemoryAllocator Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0095.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0097.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060108000000">IAMDevMemoryAllocator Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IAMDevMemoryAllocator</B> interface enables the creation of third-party memory allocators by using



 an on-board memory manager object. Many <A HREF="dssd0393.htm#gloss_00010b0104000003" TARGET="TEXT">codec</A>



 hardware manufacturers put on-board mapped memory



 for the codecs to improve the efficiency of buffer manipulation. This interface allocates that memory and provides the <A HREF="dssd0096.htm#If_0001060108030400" TARGET="TEXT">GetDevMemoryObject</A> method to retrieve a device memory control object, which supports the <A HREF="dssd0097.htm" TARGET="TEXT">IAMDevMemoryControl</A> interface. Devices that share the same device ID can use the memory.

<P>The global memory manager object exposes this interface to allocate memory from memory that is on a particular device.




<A NAME="If_0001060108010000"></A><P><B>When to Implement



</B>
<P>Implement this interface when your pin must support the creation of on-board memory allocators. Source filters that are aware of on-board memory and need to



 create their own allocators should query for this interface, request an amount of memory and then create an allocator (aggregating the device memory control object). Source filters that don't need to create their own allocator



 could just use the allocator of the downstream pin (which also aggregates the device memory control object).



 The hardware-based filter can confirm the usage of its on-board memory by calling methods on the aggregated allocator.


<A NAME="If_0001060108020000"></A><P><B>When to Use
</B>
<P>Use this interface when applications need to control the memory of codecs with on-board memory.



<A NAME="If_0001060108030000"></A><P><B>Methods in Vtable Order

</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IAMDevMemoryAllocator methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0096.htm#If_0001060108030500" TARGET="TEXT">GetInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves information about the memory capabilities.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0096.htm#If_0001060108030200" TARGET="TEXT">CheckMemory</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests whether a memory pointer was allocated by the specific instance (device)


 of the allocator.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0096.htm#If_0001060108030100" TARGET="TEXT">Alloc</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Allocates a memory buffer.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0096.htm#If_0001060108030300" TARGET="TEXT">Free</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Frees the previously allocated memory.



 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0096.htm#If_0001060108030400" TARGET="TEXT">GetDevMemoryObject</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves an <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface pointer to a device memory control object that can be aggregated with a custom allocator.



</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060108030100">IAMDevMemoryAllocator::Alloc</A></H3>
<A HREF="dssd0096.htm" TARGET="TEXT">IAMDevMemoryAllocator Interface</A>
<P>Allocates a memory buffer.
<P><B>HRESULT</B> <B>Alloc</B><B>(</B><BR>&nbsp;&nbsp;<B>BYTE</B> <I>**ppBuffer</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwcbBuffer</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppBuffer</I>
 </DT><DD>[out] Address of a pointer to the allocated memory buffer.
</DD><DT><I>pdwcbBuffer</I>
 </DT><DD>[in, out] For input, the number of bytes to allocate. For output, the number of actual bytes allocate.



</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if the desired quantity of memory was allocated, S_FALSE if memory was unavailable.




<H5>Remarks</H5>
<P>Call this method to allocate a block of memory from the available pool.

<H5>See Also</H5>
<P><A HREF="dssd0096.htm#If_0001060108030300" TARGET="TEXT">IAMDevMemoryAllocator::Free</A><H3><HR COLOR=#0000FF><A NAME="If_0001060108030200">IAMDevMemoryAllocator::CheckMemory</A></H3>
<A HREF="dssd0096.htm" TARGET="TEXT">IAMDevMemoryAllocator Interface</A>
<P>Tests whether a memory pointer was allocated by the specific instance (device) of the allocator.
<P><B>HRESULT</B> <B>CheckMemory</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>BYTE</B> <I>*pBuffer</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pBuffer</I>
 </DT><DD>[in] Pointer to the allocated memory buffer's address.



</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if the on-board allocator allocated the memory, or S_FALSE if not. Memory that is on the particular device but not allocated will also return S_FALSE.

<H5>Remarks</H5>
<P>The hardware filter typically uses this method to test whether the pointer actually points to on-board memory.

<H3><HR COLOR=#0000FF><A NAME="If_0001060108030300">IAMDevMemoryAllocator::Free</A></H3>
<A HREF="dssd0096.htm" TARGET="TEXT">IAMDevMemoryAllocator Interface</A>
<P>Frees the previously allocated memory.
<P><B>HRESULT</B> <B>Free</B><B>(</B><BR>&nbsp;&nbsp;<B>BYTE</B> <I>*pBuffer</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pBuffer</I>
 </DT><DD>[in] Pointer to the allocated memory.
</DD></DL>
<H5>Return Values</H5>
<P>Returns E_INVALIDARG if the specified allocator



 didn't allocate the memory (that is, <A HREF="dssd0096.htm#If_0001060108030200" TARGET="TEXT">CheckMemory</A> fails).

<H5>Remarks</H5>
<P>This method frees a block of memory from the pool.



<H3><HR COLOR=#0000FF><A NAME="If_0001060108030400">IAMDevMemoryAllocator::GetDevMemoryObject</A></H3>
<A HREF="dssd0096.htm" TARGET="TEXT">IAMDevMemoryAllocator Interface</A>
<P>Retrieves an <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface pointer to a device memory control object that can be aggregated with a custom allocator.
<P><B>HRESULT</B> <B>GetDevMemoryObject</B><B>(</B><BR>&nbsp;&nbsp;<B>IUnknown</B> <I>**ppUnkInnner</I><B>,</B><BR>&nbsp;&nbsp;<B>IUnknown</B> <I>*pUnkOuter</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppUnkInnner</I>



 </DT><DD>[out] Address of a pointer to the newly created control object's own <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A>.



 This inner <B>IUnknown</B> interface



should be released when the outer object is destroyed.



 The custom allocator should call the <A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> method on this pointer to obtain the <A HREF="dssd0097.htm" TARGET="TEXT">IAMDevMemoryControl</A> interface.
</DD><DT><I>pUnkOuter</I>
 </DT><DD>[in] Pointer to the custom allocator's own <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface. This interface aggregates



 the device memory control object inside the custom allocator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface.

<H5>Remarks</H5>
<P>The device memory control object is necessary to aggregate with the custom allocator because renderers that require the use of on-board memory will query for <A HREF="dssd0097.htm" TARGET="TEXT">IAMDevMemoryControl</A> when they receive a new allocator, to verify that the memory is from the same device. This occurs because



 the hardware filter will receive an <A HREF="dssd0160.htm" TARGET="TEXT">IMemAllocator</A> object, which might or might not use the on-board memory. To decide if it is a compatible allocator, the object



 would query for the <B>IAMDevMemoryControl</B> interface to access specific methods. The <B>IAMDevMemoryControl</B> creates an aggregated object that implements the methods of <B>IAMDevMemoryControl</B> (these are often hardware specific).

<P>See COM documentation for rules on how the outer object implements aggregation.

<H3><HR COLOR=#0000FF><A NAME="If_0001060108030500">IAMDevMemoryAllocator::GetInfo</A></H3>
<A HREF="dssd0096.htm" TARGET="TEXT">IAMDevMemoryAllocator Interface</A>
<P>Retrieves information about the memory capabilities.
<P><B>HRESULT</B> <B>GetInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwcbTotalFree</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwcbLargestFree</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwcbTotalMemory</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwcbMinimumChunk</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwcbTotalFree</I>
 </DT><DD>[out] Total free memory size.



</DD><DT><I>pdwcbLargestFree</I>
 </DT><DD>[out] Retrieves the largest free memory size.
</DD><DT><I>pdwcbTotalMemory</I>
 </DT><DD>[out] Retrieves the total memory size.
</DD><DT><I>pdwcbMinimumChunk</I>
 </DT><DD>[out] Retrieves the minimum chunk size, giving granularity and alignment rules.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface.




<H5>Remarks</H5>
<P>Use this method to find out



 the total amount of memory available. This method returns values for the entire on-board memory that is available on that device. If multiple filters (devices) share the memory, it will return the amount available to that specific device, which might



 be a portion of the total amount of on-board memory. This amount will be implementation specific. For example, the on-board memory manager on the codec might be able to access all 32 megabytes (MB) of memory on the card. However, individual pin implementations of <A HREF="dssd0096.htm" TARGET="TEXT">IAMDevMemoryAllocator</A> only report a portion of this memory.




<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
