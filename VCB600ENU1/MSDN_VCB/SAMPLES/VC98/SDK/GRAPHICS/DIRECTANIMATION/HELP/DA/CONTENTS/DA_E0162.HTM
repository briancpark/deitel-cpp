<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Static Methods Relevant to ColorBvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0161.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0163.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_000107012e000000">Static Methods Relevant to ColorBvr Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012e000100">colorHsl</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a color behavior that represents a color given by hue, saturation, and lightness values. The behavior's value at any given time depends on the values of <I>h</I>, <I>s</I>, and <I>l</I>. The following example creates a color whose hue varies with time, but whose saturation and lightness values are constant:

<PRE><FONT FACE="Courier" SIZE="2">//vary the hue over time
ColorBvr animCol = colorHsl(localTime, toBvr(0.5), toBvr(0.5));
</FONT></PRE>
<P><B>public</B> <B>static</B> <B>ColorBvr</B> <B>colorHsl</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>h</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>s</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>l</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>h</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying the hue or base color. 0.0 is red, 0.33 is green, and 0.67 is blue. This number is considered "modulo 1," which means, for example, that the numbers 1.67, and 0.67 are both considered to be 0.67. This parameter can also be of type double.
</DD><DT><I>s</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying saturation or intensity of the hue. If saturation is 0.0, the color produced is gray regardless of the hue value. This parameter can also be of type double. 
</DD><DT><I>l</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying lightness or amount of white in the color. If lightness is 1.0, the color produced is white regardless of the hue and saturation values. Similarly, if lightness is 0.0, the color is black. This parameter can also be of type double. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0127.htm" TARGET="TEXT">ColorBvr</A> object. 


<H5>Remarks</H5>
<P>Hue, saturation, and lightness values can range from 0.0 to 1.0. If the corresponding number behavior has a value outside this range, then the number is considered modulo 1.

<H5>See Also</H5>
<P><A HREF="DA_E0162.htm#dxmref_000107012e000200" TARGET="TEXT">colorRgb</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012e000200">colorRgb</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a color behavior that represents a color given by red, green, and blue intensity values. The behavior's value at any given time depends on the values of <I>r</I>, <I>g</I>, and <I>b</I>. The following example creates a color behavior whose red component varies from 0 to 1:

<PRE><FONT FACE="Courier" SIZE="2">//Create a sawtooth wave that goes repetitively from 0 to 1
//Do this by taking the modulus of localTime and 1
NumberBvr sawtooth = mod(localTime, toBvr(1));
//Now create the RGB color, making red = to the value of sawtooth
ColorBvr col = colorRgb(sawtooth, toBvr(0), toBvr(0));
</FONT></PRE>
<P><B>public</B> <B>static</B> <B>ColorBvr</B> <B>colorRgb</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>r</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>g</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>r</I>, <I>g</I>, and <I>b</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects specifying the red, green, and blue values, respectively. The value of each specifies that color's intensity, with 0.0 for no color and 1.0 for the highest possible intensity. These parameters can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0127.htm" TARGET="TEXT">ColorBvr</A> object. 


<H5>Remarks</H5>
<P>Intensity values can range from 0.0 to 1.0. If the corresponding number behavior has a value outside this range, the integer part of the value is discarded and only the fractional part is used.

<H5>See Also</H5>
<P><A HREF="DA_E0162.htm#dxmref_000107012e000100" TARGET="TEXT">colorHsl</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_000107012e000300">colorRgb255</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a color behavior that represents a color given by red, green, and blue intensity values. The behavior's value at any given time depends on the values of <I>r</I>, <I>g</I>, and <I>b</I>. These values can be in the range [0, 255].

<P><B>public</B> <B>static</B> <B>ColorBvr</B> <B>colorRgb255</B><B>(</B><BR>&nbsp;&nbsp;<B>short</B> <I>r</I><B>,</B><BR>&nbsp;&nbsp;<B>short</B> <I>g</I><B>,</B><BR>&nbsp;&nbsp;<B>short</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>r</I>, <I>g</I>, and <I>b</I>
 </DT><DD>The shorts specifying the red, green, and blue values, respectively. The value of each specifies that color's intensity, with 0 for no color and 255 for the highest possible intensity.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0127.htm" TARGET="TEXT">ColorBvr</A> object. 


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
