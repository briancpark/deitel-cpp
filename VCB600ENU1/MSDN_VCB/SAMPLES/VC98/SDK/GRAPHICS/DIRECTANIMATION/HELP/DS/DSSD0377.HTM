<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Using DirectDrawEx</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0376.htm','/dssd0000.htm','/dssd0376.htm','/index.htm','/dssd0378.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="ddrawex_0001090101000000">Using DirectDrawEx</A></H2>
<BR CLEAR=ALL>
<P>This article provides a brief overview of DirectDrawEx and how it extends the functionality of a DirectDraw object as described in the Microsoft DirectX&#174; SDK. 

<P><B>Contents of this article:</B>
<UL><LI><A HREF="dssd0377.htm#ddrawex_0001090101010000" TARGET="TEXT">What Is DirectDrawEx?</A>
 <LI><A HREF="dssd0377.htm#ddrawex_0001090101020000" TARGET="TEXT">Advantages of Using DirectDrawEx</A>
 <LI><A HREF="dssd0377.htm#ddrawex_0001090101030000" TARGET="TEXT">Creating DirectDraw Objects and Surfaces with DirectDrawEx</A>
 <LI><A HREF="dssd0377.htm#ddrawex_0001090101040000" TARGET="TEXT">Distinctions Between DirectDraw and DirectDrawEx</A>
</UL>
<A NAME="ddrawex_0001090101010000"></A><P><B>What Is DirectDrawEx?</B>
<P>DirectDrawEx is a dynamic-link library (DLL) that embellishes



 current functionality of DirectDraw, enhancing existing features and providing new functionality. DirectDrawEx also exposes new interfaces that applications can use when you include the ddrawex.h header file.



<P>To create a DirectDraw object that can use the extended features provided by DirectDrawEx, you must create the object by using



 the <A HREF="dssd0378.htm" TARGET="TEXT">IDirectDrawFactory</A> interface. A DirectDraw object created with the <B>IDirectDrawFactory</B> interface will support the <A HREF="dssd0379.htm" TARGET="TEXT">IDirectDraw3</A> interface, aggregation of DirectDraw surfaces, data exchange, and palette mapping, in addition to the features of DirectDraw objects described in the DirectX SDK. 


<A NAME="ddrawex_0001090101020000"></A><P><B>Advantages of Using DirectDrawEx</B>
<P>The primary advantage of creating a <A HREF="dssd0389.htm#external_00010a0109000021" TARGET="TEXT">DirectDraw</A> object through the <A HREF="dssd0378.htm" TARGET="TEXT">IDirectDrawFactory</A> interface is that it exposes the <A HREF="dssd0379.htm" TARGET="TEXT">IDirectDraw3</A> interface. The <B>IDirectDraw3</B> interface inherits all the functionality of the <A HREF="dssd0389.htm#external_00010a0109000041" TARGET="TEXT">IDirectDraw</A> and the <A HREF="dssd0389.htm#external_00010a0109000056" TARGET="TEXT">IDirectDraw2</A> interfaces and provides a new method that can retrieve a pointer to an <A HREF="dssd0389.htm#external_00010a0109000059" TARGET="TEXT">IDirectDrawSurface</A> interface, given a handle to a device context.

<P>To obtain the <A HREF="dssd0379.htm" TARGET="TEXT">IDirectDraw3</A> interface, you must call the <A HREF="dssd0378.htm#ddrawex_0001090102030100" TARGET="TEXT">IDirectDrawFactory::CreateDirectDraw</A> method



 to create the DirectDraw object and expose the <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> and <A HREF="dssd0389.htm#external_00010a0109000041" TARGET="TEXT">IDirectDraw</A> interfaces. Applications can then call <A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> to obtain a pointer to the <B>IDirectDraw3</B> interface. To view sample code that demonstrates this, see <A HREF="dssd0377.htm#ddrawex_0001090101030000" TARGET="TEXT">Creating DirectDraw Objects and Surfaces with DirectDrawEx</A>.

<P>Another advantage of using DirectDrawEx over using <A HREF="dssd0389.htm#external_00010a0109000021" TARGET="TEXT">DirectDraw</A> is that you can now aggregate inner objects with outer objects by using the <A HREF="dssd0379.htm#ddrawex_0001090103030100" TARGET="TEXT">IDirectDraw3::CreateSurface</A> method. Formerly, <A HREF="dssd0389.htm#external_00010a0109000045" TARGET="TEXT">IDirectDraw::CreateSurface</A> and <A HREF="dssd0389.htm#external_00010a0109000057" TARGET="TEXT">IDirectDraw2::CreateSurface</A> did not provide COM aggregation features. For a thorough description of how <A HREF="dssd0379.htm" TARGET="TEXT">IDirectDraw3</A> implements aggregation see, <B>IDirectDraw3::CreateSurface</B>.

<P>Finally, DirectDrawEx now also provides the DDSCAPS_DATAEXCHANGE flag for the <A HREF="dssd0389.htm#external_00010a010900001c" TARGET="TEXT">DDSCAPS</A> structure's <B>dwcaps</B> member. 




Setting this flag in conjunction with the DDSCAPS_OWNDC flag enables applications to call the <A HREF="dssd0389.htm#external_00010a0109000068" TARGET="TEXT">IDirectDrawSurface::GetDC</A> method to lock the device context for as long they require, without holding a lock on the surface.






<A NAME="ddrawex_0001090101030000"></A><P><B>Creating DirectDraw Objects and Surfaces with DirectDrawEx</B>
<P>The following sample code demonstrates how to create a DirectDraw object by using DirectDrawEx, and get a pointer to the <A HREF="dssd0379.htm" TARGET="TEXT">IDirectDraw3</A> interface. The code shows how to create and call DirectDraw objects.



<PRE><FONT FACE="Courier" SIZE="2">
#include ddrawex.h

void CreateDDEx()
{
&#009;//Declarations
&#009;HRESULT &#009;hr;
&#009;IDirectDraw &#009;*pDD;    
&#009;IDirectDraw3 &#009;*pDD3; 
&#009;IDirectDrawFactory *pDDF;

&#009;//Initialize COM library&#009;
&#009;CoInitialize(NULL);


&#009;//Create a DirectDrawFactory object and get  
&#009;//an IDirectDrawFactory interface pointer
&#009;CoCreateInstance(CLSID_DirectDrawFactory, NULL, CLSCTX_INPROC_SERVER, 
&#009;&#009;&#009;&#009;&#009;&#009;&#009;IID_IDirectDrawFactory, (void **)&amp;pDDF);

&#009;//Call the IDirectDrawFactory::CreateDirectDraw method to create the 
&#009;//DirectDraw surface, set the cooperative level, and get the address 
&#009;//of an IDirectDraw interface pointer
&#009;hr = (pDDF-&gt;CreateDirectDraw(NULL, GetDesktopWindow(), DDSCL_NORMAL, 
&#009;&#009;&#009;&#009;NULL, NULL, &amp;pDD));

&#009;if (hr !=DD_OK) {//error checking
&#009;}
&#009;
&#009;//Now query for the new IDirectDraw3 interface, and release the old one.
&#009;hr =(pDD-&gt;QueryInterface(IID_IDirectDraw3, (LPVOID*)&amp;pDD3));
&#009;
&#009;if (hr !=S_OK) {//error checking
&#009;}
&#009;
&#009;//Release IDirectDraw
&#009;pDD-&gt;Release();
&#009;pDD= NULL;&#009;

&#009;//Initialize the DDSURFACEDESC structure for the primary surface
&#009;ZeroMemory(&amp;ddsd, sizeof(ddsd));
      ddsd.dwSize = sizeof(ddsd);    
&#009;ddsd.dwFlags = DDSD_CAPS;
      ddsd.ddsCaps.dwCaps = DDSCAPS_PRIMARYSURFACE; 
      hr = pDD3-&gt;CreateSurface(&amp;ddsd, &amp;pPrimarySurface, NULL);
&#009;

&#009;//Do whatever you need to do in your application here with your 
&#009;//DirectDraw surface

&#009;//Release IDirectDraw3, IDirectDrawFactory, and the DirectDraw surface
&#009;pDD3-&gt;Release();
&#009;pDDF-&gt;Release();
&#009;pPrimarySurface-&gt;Release();    

&#009;//Close the COM library
&#009;CoUninitialize();
}
</FONT></PRE>
<A NAME="ddrawex_0001090101040000"></A><P><B>Distinctions Between DirectDraw and DirectDrawEx</B>
<P>One important distinction to note between DirectDrawEx and DirectDraw is that applications that have created multiple <A HREF="dssd0389.htm#external_00010a0109000024" TARGET="TEXT">DirectDrawSurface</A>s


 through a DirectDrawEx surface must release every DirectDraw surface.



<P>Also, calling the <A HREF="dssd0389.htm#external_00010a0109000032" TARGET="TEXT">GetDDInterface</A> method from any surface created under DirectDrawEx will return a pointer to the <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface instead of a pointer to an <A HREF="dssd0389.htm#external_00010a0109000041" TARGET="TEXT">IDirectDraw</A> interface. Applications must use the <A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">IUnknown::QueryInterface</A> method to retrieve the <B>IDirectDraw</B>, <A HREF="dssd0389.htm#external_00010a0109000056" TARGET="TEXT">IDirectDraw2</A>, or <A HREF="dssd0379.htm" TARGET="TEXT">IDirectDraw3</A> interfaces.

<P>Finally, DirectDrawEx does not currently support blitting between surfaces created by DirectDrawEx and surfaces created by DirectDraw. Applications should blit only between similar surfaces.



<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
