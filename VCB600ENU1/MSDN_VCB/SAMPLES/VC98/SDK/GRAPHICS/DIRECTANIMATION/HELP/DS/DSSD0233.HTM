<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>COARefTime Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0232.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0234.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060235000000">COARefTime Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/cutil05.gif" WIDTH="205" HEIGHT="56" ALT="COARefTime class hierarchy" >

<P>This class converts between the Automation-compatible REFTIME type and the
REFERENCE_TIME type used within and between filters.

<P>Time parameters within the control interfaces are represented as <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A>
values, containing a fractional number of seconds. Interfaces supported
between and within filters use a 64-bit <A HREF="dssd0389.htm#external_00010a01090000ab" TARGET="TEXT">LONGLONG</A> type containing the time
in 100-nanosecond units. Filters use this class to convert between the two
formats. It is derived from <A HREF="dssd0239.htm" TARGET="TEXT">CRefTime</A> and thus is a <B>LONGLONG</B>, but it can be
constructed from and assigned <B>double</B> values.

<A NAME="Lib_0001060235010000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020100" TARGET="TEXT">COARefTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060235020000"></A><P><B>Operators</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020200" TARGET="TEXT">double</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the reference time as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020300" TARGET="TEXT">Operator =</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Copy constructor for the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> class.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020400" TARGET="TEXT">Operator ==</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests for equality between <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020500" TARGET="TEXT">Operator !=</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests for inequality between <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020600" TARGET="TEXT">Operator &lt;</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is less than another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020700" TARGET="TEXT">Operator &gt;</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is greater than another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020900" TARGET="TEXT">Operator &lt;=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is less than or equal to another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020800" TARGET="TEXT">Operator &gt;=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is greater than or equal to another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020a00" TARGET="TEXT">Operator +</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds two <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020b00" TARGET="TEXT">Operator &#150;</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Subtracts one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object from another <B>COARefTime</B> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020c00" TARGET="TEXT">Operator +=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds two <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects and makes this object equal to the result.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020d00" TARGET="TEXT">Operator &#150;=</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Subtracts one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object from another <B>COARefTime</B> object
and makes this object equal to the result.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020e00" TARGET="TEXT">Operator *</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Multiplies two <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0233.htm#Lib_0001060235020f00" TARGET="TEXT">Operator /</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Divides one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object by another <B>COARefTime</B> object.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020100">COARefTime::COARefTime</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Constructs a <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object.

<P><B>COARefTime</B><B>(</B><BR>&nbsp;&nbsp;<B>CRefTime</B> <I>t</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><B>COARefTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>t</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><B>COARefTime</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>d</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>t</I>
 </DT><DD><A HREF="dssd0239.htm" TARGET="TEXT">CRefTime</A> value or REFERENCE_TIME value passed through to the class.
Units are 100 nanoseconds.
</DD><DT><I>d</I>
 </DT><DD>A <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value that constructs the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> class.
Units in this case are (fractional) seconds.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020200">COARefTime::double</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Retrieves the reference time as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value, converted
from 100-nanosecond units to seconds.


<PRE><FONT FACE="Courier" SIZE="2">operator double();
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020300">COARefTime::Operator =</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Copy constructor for a <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object.


<P><B>COARefTime&amp;</B> <B>operator=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>double&amp;</B> <I>rd</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rd</I>
 </DT><DD>A <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value that constructs a <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020400">COARefTime::Operator ==</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Tests for equality between <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.

<P><B>BOOL</B> <B>operator==</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object tested is equal to
this object and FALSE otherwise.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020500">COARefTime::Operator !=</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Tests for inequality between <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.

<P><B>BOOL</B> <B>operator!=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object tested is not equal to
this object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020600">COARefTime::Operator &lt;</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is less than another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&lt;</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object tested is less than
this object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020700">COARefTime::Operator &gt;</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is greater than another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&gt;</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object tested is greater than this
object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020800">COARefTime::Operator &gt;=</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is greater than or equal to another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&gt;=</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object tested is greater than or equal to this
object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020900">COARefTime::Operator &lt;=</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Tests if one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object is less than or equal to another <B>COARefTime</B> object.

<P><B>BOOL</B> <B>operator</B> <B>&lt;=</B> <B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object corresponding to the right side of the operator.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object tested is less than or equal to
this object; otherwise, returns FALSE.


<H5>Remarks</H5>
<P>This object is on the left side of the operator.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020a00">COARefTime::Operator +</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Adds two <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects.

<P><B>COARefTime</B> <B>operator+</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object to be added.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result of the addition.


<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020b00">COARefTime::Operator &#150;</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Subtracts one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object from another <B>COARefTime</B> object.

<P><B>COARefTime</B> <B>operator-</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object to be subtracted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result of the subtraction.


<H5>Remarks</H5>
<P>This object is the object subtracted from.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020c00">COARefTime::Operator +=</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Adds two <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> objects and makes this object
equal to the result.

<P><B>COARefTime&amp;</B> <B>operator+=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object to be added.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020d00">COARefTime::Operator &#150;=</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Subtracts one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object from another <B>COARefTime</B> object 
and makes this object equal to the result.

<P><B>COARefTime&amp;</B> <B>operator-=</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>COARefTime&amp;</B> <I>rt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rt</I>
 </DT><DD><A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object to be subtracted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<H5>Remarks</H5>
<P>This object is the object subtracted from.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020e00">COARefTime::Operator *</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Multiplies the <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object by a value.

<P><B>COARefTime</B> <B>operator*</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>l</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>l</I>
 </DT><DD>Value to multiply by.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<H3><HR COLOR=#0000FF><A NAME="Lib_0001060235020f00">COARefTime::Operator /</A></H3>
<A HREF="dssd0233.htm" TARGET="TEXT">COARefTime Class</A>
<P>Divides one <A HREF="dssd0233.htm" TARGET="TEXT">COARefTime</A> object by a value.

<P><B>COARefTime</B> <B>operator/</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>l</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>l</I>
 </DT><DD>Value to divide by.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the result.


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
