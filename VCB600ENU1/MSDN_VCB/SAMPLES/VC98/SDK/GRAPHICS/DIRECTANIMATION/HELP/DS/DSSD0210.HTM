<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CCritSec Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0209.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0211.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_000106021e000000">CCritSec Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/util01.gif" WIDTH="179" HEIGHT="24" ALT="CCritSec class hierarchy" >

<P>The critical section object provides intraprocess synchronization.
The current implementation uses the Microsoft&#174; Win32&#174; application
programming interfaces (APIs) that use the <A HREF="dssd0389.htm#external_00010a0109000018" TARGET="TEXT">CRITICAL_SECTION</A> type.

<P>The safest way to use <B>CCritSec</B> objects is to lock them with a
<A HREF="dssd0188.htm" TARGET="TEXT">CAutoLock</A> object that guarantees to unlock the object when
it goes out of scope and compiles to efficient inline code.

<A NAME="Lib_000106021e010000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0210.htm#Lib_000106021e010100" TARGET="TEXT">CCritSec</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0210.htm" TARGET="TEXT">CCritSec</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0210.htm#Lib_000106021e010200" TARGET="TEXT">Lock</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Locks the critical section object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0210.htm#Lib_000106021e010300" TARGET="TEXT">Unlock</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unlocks the critical section object.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_000106021e010100">CCritSec::CCritSec</A></H3>
<A HREF="dssd0210.htm" TARGET="TEXT">CCritSec Class</A>
<P>Constructs a <A HREF="dssd0210.htm" TARGET="TEXT">CCritSec</A> object.

<P><B>CCritSec</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>Calls the Microsoft&#174; Win32&#174; <A HREF="dssd0389.htm#external_00010a0109000088" TARGET="TEXT">InitializeCriticalSection</A> function to set the private critical section member variable. The destructor calls the Win32 <A HREF="dssd0389.htm#external_00010a010900001f" TARGET="TEXT">DeleteCriticalSection</A> function.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106021e010200">CCritSec::Lock</A></H3>
<A HREF="dssd0210.htm" TARGET="TEXT">CCritSec Class</A>
<P>Locks the critical section object.

<P><B>void</B> <B>Lock</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>This member function locks the critical section object. You can make multiple lock calls on the same thread, but the <A HREF="dssd0210.htm#Lib_000106021e010300" TARGET="TEXT">CCritSec::Unlock</A> member function must be called a corresponding number of times before the object is unlocked. If the object is locked by another thread, the <B>CCritSec::Lock</B> member function blocks until either the object is released or a "possible deadlock" exception occurs.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106021e010300">CCritSec::Unlock</A></H3>
<A HREF="dssd0210.htm" TARGET="TEXT">CCritSec Class</A>
<P>Releases the lock on the object acquired by calling the <A HREF="dssd0210.htm#Lib_000106021e010200" TARGET="TEXT">CCritSec::Lock</A> member function.

<P><B>void</B> <B>Unlock</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>You must call the <B>CCritSec::Unlock</B> member function once for each call to <A HREF="dssd0210.htm#Lib_000106021e010200" TARGET="TEXT">Lock</A>.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
