<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CRendererInputPin Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0240.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0242.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_000106023d000000">CRendererInputPin Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/rbase01.gif" WIDTH="339" HEIGHT="261" ALT="CRendererInputPin class hierarchy" >

<P>This input pin class channels calls to the rendering filter.

<A NAME="Lib_000106023d010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106023d010001">m_pRenderer</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to the <A HREF="dssd0203.htm" TARGET="TEXT">CBaseRenderer</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106023d020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040200" TARGET="TEXT">Allocator</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a pointer to the default memory allocator.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040700" TARGET="TEXT">CRendererInputPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin</A> object.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106023d030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040100" TARGET="TEXT">Active</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Switches the pin to the active (paused or running) mode.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040300" TARGET="TEXT">BeginFlush</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the pin to begin a flush operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040400" TARGET="TEXT">BreakConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds customized code upon breaking a connection.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040500" TARGET="TEXT">CheckMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the pin can support a specific media type.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040600" TARGET="TEXT">CompleteConnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Completes the connection.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040800" TARGET="TEXT">EndFlush</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the pin to end a flush operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040900" TARGET="TEXT">EndOfStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the pin that no additional data is expected until a new run command is issued.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040a00" TARGET="TEXT">Inactive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Switches the pin to an inactive state and releases the memory of the allocator.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040c00" TARGET="TEXT">Receive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the next block of data from the stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040d00" TARGET="TEXT">SetMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the media type of the pin.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106023d040000"></A><P><B>Implemented IPin Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0241.htm#Lib_000106023d040b00" TARGET="TEXT">QueryId</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves an identifier for the pin.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040100">CRendererInputPin::Active</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Switches the pin to the active (paused or running) mode.

<P><B>HRESULT</B> <B>Active</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function overrides <A HREF="dssd0200.htm#Lib_0001060214060100" TARGET="TEXT">CBasePin::Active</A>
and calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217060100" TARGET="TEXT">CBaseRenderer::Active</A>
member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040200">CRendererInputPin::Allocator</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Retrieves a pointer to the default memory allocator inherited from <A HREF="dssd0195.htm" TARGET="TEXT">CBaseInputPin</A>.

<P><B>IMemAllocator*</B> <B>Allocator</B><B>(</B> <B>)</B> <B>const;</B><BR><H5>Return Values</H5>
<P>Returns a pointer to an <A HREF="dssd0160.htm" TARGET="TEXT">IMemAllocator</A> interface.


<H5>Remarks</H5>
<P>The returned pointer is <A HREF="dssd0195.htm#Lib_000106020f010001" TARGET="TEXT">CBaseInputPin::m_pAllocator</A>.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040300">CRendererInputPin::BeginFlush</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Informs the pin to begin a flush operation.

<P><B>HRESULT</B> <B>BeginFlush</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030100" TARGET="TEXT">IPin::BeginFlush</A> method.
It overrides <A HREF="dssd0195.htm#Lib_000106020f070100" TARGET="TEXT">CBaseInputPin::BeginFlush</A>
and calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217060200" TARGET="TEXT">BeginFlush</A>
member function before calling the base class implementation.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040400">CRendererInputPin::BreakConnect</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Override this member function to add customized code upon breaking a connection.

<P><B>HRESULT</B> <B>BreakConnect</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function overrides <A HREF="dssd0200.htm#Lib_0001060214060400" TARGET="TEXT">CBasePin::BreakConnect</A>
and calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217060300" TARGET="TEXT">BreakConnect</A>
member function before calling the base class implementation.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040500">CRendererInputPin::CheckMediaType</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Override this member function to determine if the pin can support this specific media type.

<P><B>HRESULT</B> <B>CheckMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType</B> <I>*pmt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pmt</I>
</DT><DD>Pointer to a media type object that contains the proposed media type.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is typically called before calling the
<A HREF="dssd0241.htm#Lib_000106023d040d00" TARGET="TEXT">CRendererInputPin::SetMediaType</A> member function.

<P>This member function overrides <A HREF="dssd0200.htm#Lib_0001060214060700" TARGET="TEXT">CBasePin::CheckMediaType</A>
and calls the pure virtual <A HREF="dssd0203.htm#Lib_0001060217060600" TARGET="TEXT">CBaseRenderer::CheckMediaType</A>
member function, which must be overridden.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040600">CRendererInputPin::CompleteConnect</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Override this member function to inform the derived class when the connection process
has completed.

<P><B>HRESULT</B> <B>CompleteConnect</B><B>(</B><BR>&nbsp;&nbsp;<B>IPin</B> <I>*pReceivePin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pReceivePin</I>
 </DT><DD>Pointer to the connected (receiving) pin.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function overrides <A HREF="dssd0200.htm#Lib_0001060214060800" TARGET="TEXT">CBasePin::CompleteConnect</A>
and calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217060900" TARGET="TEXT">CompleteConnect</A>
member function before calling the base class implementation.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040700">CRendererInputPin::CRendererInputPin</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Constructs a <A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin</A> object.

<P><B>CRendererInputPin</B><B>(</B><BR>&nbsp;&nbsp;<B>CBaseRenderer</B> <I>*pRenderer</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <I>*phr</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>Name</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pRenderer</I>
</DT><DD>Pointer to the rendering filter in the base class.
</DD><DT><I>phr</I>
</DT><DD>Pointer to an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.
</DD><DT><I>Name</I>
</DT><DD>Pin name.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040800">CRendererInputPin::EndFlush</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Informs the pin to end a flush operation.

<P><B>HRESULT</B> <B>EndFlush</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function overrides <A HREF="dssd0195.htm#Lib_000106020f070500" TARGET="TEXT">CBaseInputPin::EndFlush</A>
and calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217060d00" TARGET="TEXT">EndFlush</A>
member function before calling the base class implementation.

<P>Note that because this is a renderer, it does not pass the flush on downstream.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040900">CRendererInputPin::EndOfStream</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Informs the pin that no additional data is expected until a new run command is issued.

<P><B>HRESULT</B> <B>EndOfStream</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030700" TARGET="TEXT">IPin::EndOfStream</A> method.
It calls <A HREF="dssd0195.htm#Lib_000106020f070300" TARGET="TEXT">CheckStreaming</A> to see that the filter is in a streaming state
and then calls the <A HREF="dssd0203.htm#Lib_0001060217060e00" TARGET="TEXT">CBaseRenderer::EndOfStream</A> member function.

<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040a00">CRendererInputPin::Inactive</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Informs the pin that it is going into the inactive state.

<P><B>HRESULT</B> <B>Inactive</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function overrides <A HREF="dssd0195.htm#Lib_000106020f070800" TARGET="TEXT">CBaseInputPin::Inactive</A>.
It calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217061900" TARGET="TEXT">CBaseRenderer::Inactive</A> member function,
which returns NOERROR by default.

<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040b00">CRendererInputPin::QueryId</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Retrieves an identifier for the pin.

<P><B>HRESULT</B> <B>QueryId</B><B>(</B><BR>&nbsp;&nbsp;<B>LPWSTR</B> <I>*Id</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Id</I>
</DT><DD>Pin identifier.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0165.htm#If_000106014d030c00" TARGET="TEXT">IPin::QueryId</A> method. It
overrides the <A HREF="dssd0200.htm#Lib_0001060214062300" TARGET="TEXT">CBasePin::QueryId</A> member function and assigns
the string "In" to <I>Id</I>. Note that it uses the Microsoft&#174; Win32&#174;
<A HREF="dssd0389.htm#external_00010a0109000010" TARGET="TEXT">CoTaskMemAlloc</A> function to initialize <I>Id</I>, so the user is responsible for
freeing the format block by using <A HREF="dssd0389.htm#external_00010a0109000011" TARGET="TEXT">CoTaskMemFree</A>.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040c00">CRendererInputPin::Receive</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Returns the next block of data from the stream.

<P><B>HRESULT</B> <B>Receive</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <I>*pMediaSample</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pMediaSample</I>
</DT><DD>Media sample.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0161.htm#If_0001060149030400" TARGET="TEXT">IMemInputPin::Receive</A> method, and it
overrides the <A HREF="dssd0195.htm#Lib_000106020f070e00" TARGET="TEXT">CBaseInputPin::Receive</A> member function, which it calls to
verify formats.

<P>This is a blocking synchronous member function. It blocks and waits
until it is time for the sample to be rendered. (It calls <A HREF="dssd0203.htm#Lib_0001060217062b00" TARGET="TEXT">CBaseRenderer::Receive</A>,
which actually does the blocking.) Because only one sample is ever
outstanding, this member function checks the media type and calls <A HREF="dssd0241.htm#Lib_000106023d040d00" TARGET="TEXT">CRendererInputPin::SetMediaType</A>
to change the pin's media type if the sample's type has changed.

<P>Call the <A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">IUnknown::AddRef</A> method if you must hold the returned data block
beyond the completion of the <B>CRendererInputPin::Receive</B> member function. If you call
<A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>, be sure to call the <A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">IUnknown::Release</A> method upon completion of
<B>AddRef</B>.

<H3><HR COLOR=#0000FF><A NAME="Lib_000106023d040d00">CRendererInputPin::SetMediaType</A></H3>
<A HREF="dssd0241.htm" TARGET="TEXT">CRendererInputPin Class</A>
<P>Override this member function to set the media type of the pin.

<P><B>HRESULT</B> <B>SetMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CMediaType</B> <I>*pmt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pmt</I>
</DT><DD>Pointer to a media type object that was previously agreed upon.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function overrides <A HREF="dssd0200.htm#Lib_0001060214062800" TARGET="TEXT">CBasePin::SetMediaType</A> and calls the renderer filter's <A HREF="dssd0203.htm#Lib_0001060217063500" TARGET="TEXT">SetMediaType</A> member function, which returns NOERROR by default, after calling the base class implementation.



<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
