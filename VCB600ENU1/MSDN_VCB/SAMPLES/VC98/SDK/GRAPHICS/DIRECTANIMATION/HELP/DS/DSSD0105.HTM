<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IAMStreamConfig Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0104.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0106.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060111000000">IAMStreamConfig Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IAMStreamConfig</B> interface enables you to find out what types of formats an output pin can be connected with. Additionally it can be used to set stream formats, to tell a pin to connect with a certain format the next time it's connected, or to make it reconnect with a new format if it's already connected. Audio/video capture and audio/video compression filters implement this interface on their output pins, but potentially any filter dealing with audio or video can implement this interface on its output pins.
 
<P>Use this interface to set a pin's output format, rather than connecting the pin by using a specific media type. After setting an output format, the pin will try to use that format the next time it connects. This enables you to call the <A HREF="dssd0146.htm#If_000106013a030300" TARGET="TEXT">IGraphBuilder::Render</A> method on that pin and get a desired format without connecting the pins and providing a <A HREF="dssd0229.htm#Lib_0001060231000000" TARGET="TEXT">CMediaType</A> class object. 
Your pin should offer only the media type set in the <A HREF="dssd0229.htm#Lib_0001060231020f00" TARGET="TEXT">CMediaType::SetFormat</A> function in its enumeration of media types after <A HREF="dssd0105.htm#If_0001060111030400" TARGET="TEXT">SetFormat</A> is called. Before then, offer media types as usual. This will ensure that the pin uses that format for connection. An application that needs to enumerate accepted media types using <A HREF="dssd0200.htm#Lib_0001060214061500" TARGET="TEXT">CBasePin::GetMediaType</A> must do so before calling <B>SetFormat</B>.

<P>The <A HREF="dssd0105.htm#If_0001060111030300" TARGET="TEXT">IAMStreamConfig::GetStreamCaps</A> method can get more information about accepted media types than the traditional way of enumerating a pin's media types, so you typically should use it instead of pin enumeration. <A HREF="dssd0105.htm#If_0001060111030300" TARGET="TEXT">GetStreamCaps</A> retrieves information about the kinds of audio and video formats allowed.

<P><A HREF="dssd0105.htm#If_0001060111030300" TARGET="TEXT">GetStreamCaps</A> provides detailed information about the media types and capabilities supported by this pin. This method returns a set of structures that includes pairs of <A HREF="dssd0287.htm#structs_0001060501000300" TARGET="TEXT">AM_MEDIA_TYPE</A> and either a <A HREF="dssd0287.htm#structs_0001060501001c00" TARGET="TEXT">VIDEO_STREAM_CONFIG_CAPS</A> or an <A HREF="dssd0287.htm#structs_0001060501000d00" TARGET="TEXT">AUDIO_STREAM_CONFIG_CAPS</A> structures describing an accepted media type and how that media type can be altered to create other acceptable media types. 

<P><B>Note</B>  The cropping rectangle described throughout the <B>IAMStreamConfig</B> documentation is the same as the <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure's <A HREF="dssd0287.htm#structs_0001060501001e01" TARGET="TEXT">rcSource</A> rectangle for the output pin.

<P>The output rectangle described throughout the <B>IAMStreamConfig</B> documentation is the same as the width and height members of the output pin's <A HREF="dssd0075.htm#avispec_0001050502020800" TARGET="TEXT">BITMAPINFOHEADER</A> structure.
<P>For more information on <A HREF="dssd0105.htm#If_0001060111030300" TARGET="TEXT">GetStreamCaps</A> see <A HREF="dssd0086.htm" TARGET="TEXT">Exposing Capture and Compression Formats through IAMStreamConfig</A>.


<A NAME="If_0001060111010000"></A><P><B>When to Implement</B>
<P>Implement this interface on the video output pin when you are writing a video capture or video compression filter. 

<A NAME="If_0001060111020000"></A><P><B>When to Use</B>
<P>Use this interface when your application or filter must get or set audio or video stream information. 

<A NAME="If_0001060111030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IAMStreamConfig methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0105.htm#If_0001060111030400" TARGET="TEXT">SetFormat</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the audio or video stream's format.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0105.htm#If_0001060111030100" TARGET="TEXT">GetFormat</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the audio or video stream's format.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0105.htm#If_0001060111030200" TARGET="TEXT">GetNumberOfCapabilities</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the number of stream capabilities structures for the compressor.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0105.htm#If_0001060111030300" TARGET="TEXT">GetStreamCaps</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Obtains audio or video capabilities of a stream depending on which type of structure is pointed to in the <I>pSCC</I> parameter. 
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060111030100">IAMStreamConfig::GetFormat</A></H3>
<A HREF="dssd0105.htm" TARGET="TEXT">IAMStreamConfig Interface</A>
<P>Retrieves the audio or video stream's format.

<P><B>HRESULT</B> <B>GetFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_MEDIA_TYPE</B> <I>**pmt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pmt</I>
</DT><DD>[out] Address of a pointer to an <A HREF="dssd0287.htm#structs_0001060501000300" TARGET="TEXT">AM_MEDIA_TYPE</A> structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. 


<H5>Remarks</H5>
<P>Be sure to initialize the media type structure before using it. For example, the following code fragment calls the Win32&#174; <A HREF="dssd0389.htm#external_00010a01090000dd" TARGET="TEXT">ZeroMemory</A> function to initialize the structure.
<PRE><FONT FACE="Courier" SIZE="2">
AM_MEDIA_TYPE mt;
ZeroMemory(&amp;mt, sizeof(mt))
GetFormat(&amp;mt);
</FONT></PRE>
<P>Call the <A HREF="dssd0267.htm#fmutil_000106030b000500" TARGET="TEXT">FreeMediaType</A> function to free the structure.
 cmt&gt;

<H3><HR COLOR=#0000FF><A NAME="If_0001060111030200">IAMStreamConfig::GetNumberOfCapabilities</A></H3>
<A HREF="dssd0105.htm" TARGET="TEXT">IAMStreamConfig Interface</A>
<P>Retrieves the number of stream capabilities structures for the compressor.
 
<P><B>HRESULT</B> <B>GetNumberOfCapabilities</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>*piCount</I><B>,</B><BR>&nbsp;&nbsp;<B>int</B> <I>*piSize</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>piCount</I>
</DT><DD>[out] Pointer to the number of <A HREF="dssd0287.htm#structs_0001060501001c00" TARGET="TEXT">VIDEO_STREAM_CONFIG_CAPS</A> and/or <A HREF="dssd0287.htm#structs_0001060501000d00" TARGET="TEXT">AUDIO_STREAM_CONFIG_CAPS</A> structures supported.
</DD><DT><I>piSize</I>
</DT><DD>[out] Pointer to the size of the configuration structure (either <A HREF="dssd0287.htm#structs_0001060501000d00" TARGET="TEXT">AUDIO_STREAM_CONFIG_CAPS</A> or <A HREF="dssd0287.htm#structs_0001060501001c00" TARGET="TEXT">VIDEO_STREAM_CONFIG_CAPS</A>).
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. 
<H3><HR COLOR=#0000FF><A NAME="If_0001060111030300">IAMStreamConfig::GetStreamCaps</A></H3>
<A HREF="dssd0105.htm" TARGET="TEXT">IAMStreamConfig Interface</A>
<P>Obtains audio, video, or other capabilities of a stream depending on which type of structure is pointed to in the <I>pSCC</I> parameter. 

<P><B>HRESULT</B> <B>GetStreamCaps</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>iIndex</I><B>,</B><BR>&nbsp;&nbsp;<B>AM_MEDIA_TYPE</B> <I>**pmt</I><B>,</B><BR>&nbsp;&nbsp;<B>BYTE</B> <I>*pSCC</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>iIndex</I>
</DT><DD>[in] Index to the desired media type and capability pair.
Use the <A HREF="dssd0105.htm#If_0001060111030200" TARGET="TEXT">GetNumberOfCapabilities</A> method to retrieve the total number of these pairs. Possible index values range from zero to one less than the total number of pairs.
</DD><DT><I>pmt</I>
</DT><DD>[out] Address of a pointer to an <A HREF="dssd0287.htm#structs_0001060501000300" TARGET="TEXT">AM_MEDIA_TYPE</A> structure.
</DD><DT><I>pSCC</I>
</DT><DD>[out] Pointer to either a stream configuration structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface.
<H5>Remarks</H5>
<P>This method enables you to get more information about accepted media types rather than the traditional way of enumerating a pin's media types, so you typically should use it instead of pin enumeration. Information such as possible video capture rates, media types, and sizes is returned by the <A HREF="dssd0287.htm#structs_0001060501001c00" TARGET="TEXT">VIDEO_STREAM_CONFIG_CAPS</A> structure. Audio capabilities of the filter's output pin, including the number of inputs, sampling rate, and bit rate granularity will be returned by an <A HREF="dssd0287.htm#structs_0001060501000d00" TARGET="TEXT">AUDIO_STREAM_CONFIG_CAPS</A> structure.

<P>Call <A HREF="dssd0267.htm#fmutil_000106030b000400" TARGET="TEXT">DeleteMediaType</A> to free the <I>pmt</I> media type.

<P>For more information on <B>GetStreamCaps</B>, see <A HREF="dssd0086.htm" TARGET="TEXT">Exposing Capture and Compression Formats through IAMStreamConfig</A>.

<H3><HR COLOR=#0000FF><A NAME="If_0001060111030400">IAMStreamConfig::SetFormat</A></H3>
<A HREF="dssd0105.htm" TARGET="TEXT">IAMStreamConfig Interface</A>
<P>Sets the audio or video stream's format.

<P><B>HRESULT</B> <B>SetFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_MEDIA_TYPE</B> <I>*pmt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>pmt</I>
</DT><DD>[in] Pointer to an <A HREF="dssd0287.htm#structs_0001060501000300" TARGET="TEXT">AM_MEDIA_TYPE</A> structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface.
<H5>Remarks</H5>
<P>A call to this method will fail if the pin is streaming. 

<P>If your output pin isn't connected and you can connect it with this media type, return S_OK from this method and start enumerating the specified media type as follows: Specify this format as format number zero in the <A HREF="dssd0249.htm#Lib_0001060245070800" TARGET="TEXT">CTransformOutputPin::GetMediaType</A> function's <I>iPosition</I> parameter. You can offer and accept only this type to ensure that the pins will use this format for the connection when it occurs.
 
<P>If your output pin is already connected and you can provide this type, then reconnect your pin. If the other pin can't accept the media type, fail this call and leave your connection alone.
 

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
