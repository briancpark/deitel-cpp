<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Sprite Control</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0019.htm','/DA_E0000.htm','/DA_E0017.htm','/index.htm','/DA_E0021.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dasprite_0001040104000000">Sprite Control</A></H2>
<BR CLEAR=ALL>
<P>The Sprite control lets you create and control image source-based, flip book-style animation for a Web page, and enables you to have frame-by-frame control over your animation. You can set markers to trigger events at desired points in <A HREF="DA_E0272.htm#glossary_000108010a000003" TARGET="TEXT">sprite</A> playback, or create individual mouse events for each frame of the animation.


<P><B>Property Syntax</B>
<PRE><FONT FACE="Courier" SIZE="2">
PARAM Tag Syntax

&lt;OBJECT ID=object 
CLASSID="clsid: FD179533-D86E-11d0-89D6-00A0C90833E6 "&gt;
[&lt;PARAM NAME="Property | Method" VALUE="Value"&gt;]
&lt;/OBJECT&gt;
</FONT></PRE>
<PRE><FONT FACE="Courier" SIZE="2">
Script Syntax

object.Property | Method [= Value]

</FONT></PRE>
<P><B>Parameters</B>

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><I>object</I>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">String identifying the object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Property | Method
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of the Sprite control properties or methods in the following lists.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">PropertyValue
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Valid value for that property or method.


</FONT></TD></TR></TABLE>
<P>Some properties and methods are scriptable only. See the desired topic for syntax details.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Property
 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000100" TARGET="TEXT">AutoStart</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether the sprite starts playback upon loading.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000200" TARGET="TEXT">ColorKey</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the transparency color for a source image.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000300" TARGET="TEXT">FinalFrame</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the sprite to display a designated frame when playback is stopped.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000400" TARGET="TEXT">Frame</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the sprite image frame currently displayed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000500" TARGET="TEXT">FrameMap</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the order in which sprite frames play back, and the length of time each frame is displayed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000600" TARGET="TEXT">Image</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves a Microsoft&#174; DirectAnimation&#153; image from the Sprite control (script only). 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000700" TARGET="TEXT">InitialFrame</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the frame number that the sprite displays when it becomes visible.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000800" TARGET="TEXT">Library</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the DirectAnimation Library reference (script only).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000900" TARGET="TEXT">MaximumRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the sprite's maximum rendering rate (number of times the control will render per second).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0022.htm#damouse_0001040106000100" TARGET="TEXT">MouseEventsEnabled</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves whether the sprite responds to mouse events.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000a00" TARGET="TEXT">NumFrames</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the number of frames in the Sprite source.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000b00" TARGET="TEXT">NumFramesAcross</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the width (in frames) of the Sprite source.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000c00" TARGET="TEXT">NumFramesDown</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the length (in frames) of the Sprite source.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104000d00" TARGET="TEXT">PlayRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the sprite's playback speed. You can use this to speed up or slow down sprite playback or even play the sprite backwards.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000e00" TARGET="TEXT">PlayState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the sprite's playback state, whether stopped, playing, or paused.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000f00" TARGET="TEXT">Repeat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the number of times the sprite is to


 loop during playback
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001000" TARGET="TEXT">SourceURL</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves the URL that points to the sprite source image.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001100" TARGET="TEXT">Time</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the elapsed playback time for the sprite, including looping.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001200" TARGET="TEXT">TimerInterval</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of time between frames, (in milliseconds) for the sprite's rendering.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001300" TARGET="TEXT">UseColorKey</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets or retrieves whether to use the sprite's transparency information.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method
 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001400" TARGET="TEXT">AddFrameMarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets a marker to fire an event when playback reaches the designated frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001500" TARGET="TEXT">AddTimeMarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets a marker to fire an event when playback reaches the designated time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001600" TARGET="TEXT">FrameSeek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the sprite playback to a specific frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001700" TARGET="TEXT">Pause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stops playback at the current frame and maintains current frame position.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001800" TARGET="TEXT">Play</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Begins playback from the current frame.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001900" TARGET="TEXT">Seek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the sprite playback to a specific elapsed time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001a00" TARGET="TEXT">Stop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Ends playback at the current frame.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event
 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000200" TARGET="TEXT">onclick</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user clicks the sprite once.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000300" TARGET="TEXT">ondblclick</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user double-clicks the sprite.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001b00" TARGET="TEXT">onframeseek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs after the <A HREF="DA_E0020.htm#dasprite_0001040104001600" TARGET="TEXT">FrameSeek</A> method has been called.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001c00" TARGET="TEXT">onmarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when a time marker has been reached, either during sprite playback or when stopped.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001d00" TARGET="TEXT">onmedialoaded</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when a piece of sprite media is completely downloaded.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000400" TARGET="TEXT">onmousedown</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user presses the mouse button down while the mouse pointer is over a sprite.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000500" TARGET="TEXT">onmousemove</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user moves the mouse pointer across the sprite's nontransparent area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000600" TARGET="TEXT">onmouseout</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the cursor leaves the sprite's nontransparent area.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000700" TARGET="TEXT">onmouseover</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the cursor enters a nontransparent area of the sprite.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0022.htm#damouse_0001040106000800" TARGET="TEXT">onmouseup</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the user releases the mouse button while the mouse pointer is over a sprite.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001e00" TARGET="TEXT">onpause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when sprite playback is paused.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104001f00" TARGET="TEXT">onplay</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the sprite begins playback.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104002000" TARGET="TEXT">onplaymarker</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when a time marker is reached during sprite playback.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104002100" TARGET="TEXT">onseek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs after the <A HREF="DA_E0020.htm#dasprite_0001040104001900" TARGET="TEXT">Seek</A> method is called.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="DA_E0020.htm#dasprite_0001040104002200" TARGET="TEXT">onstop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Occurs when the sprite stops playback.


</FONT></TD></TR></TABLE>
<P>A Sprite control renders its visual display based on a source file that contains a series of <I>frames</I>. Each frame contains one of the images used to create the animation. This image can be a separate image file or part of a file that provides images for multiple frames in a sequential strip. The file providing the images for a sprite is known as the <I>sprite source</I>.

<P>The images used for a Sprite control can be in different formats. For example, you can use images in .png, .gif, .jpg, and .wmf.


 You can't mix image formats within the same sprite source, but you can change the sprite source image dynamically. 

<P>A Sprite control can use a <I>frame map</I> to define a specific order in which to display frames. The frame map also defines how long each frame is displayed. If the sprite does not include a frame map, frames are displayed in their order of appearance within the image source file, and each frame appears for the same length of time, as specified by the <A HREF="DA_E0020.htm#dasprite_0001040104001200" TARGET="TEXT">TimerInterval</A> property.

<P>A Sprite control will not begin its animation sequence until all of its media is downloaded.


<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000100">AutoStart Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Determines whether the sprite starts playback immediately after loading.<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B> <BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;AutoStart&quot;</B> <B>VALUE=&quot;fStart&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.AutoStart</B> <B>[=fStart]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>String identifying the Sprite object.
</DD><DT><I>fStart</I>
 </DT><DD>Starts playback as soon as the sprite is loaded if TRUE (&#150;1 or nonzero), or if FALSE (0) simply loads and does not play until explicitly started with a <A HREF="DA_E0020.htm#dasprite_0001040104001800" TARGET="TEXT">Play</A> method.


 The default value is False.


 Read-write at run time; write access is available at run time only when the sprite is stopped.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000200">ColorKey Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets the transparency color to be used


 with this specific sprite. Read-write at run time; write access is available at run time only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;ColorKey</B> <B>&quot;</B> <B>VALUE=</B> <I>&quot;r</I><B>,</B><BR>&nbsp;&nbsp;<I>g</I><B>,</B><BR>&nbsp;&nbsp;<B>b</B> <B>&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.ColorKey</B> <B>=</B> <B>lib.IDAColor</B><BR><H5>Parameters</H5>
<DL><DT><I>r</I>
 </DT><DD>Sets the red value (0-255).
</DD><DT><I>g</I>
 </DT><DD>Sets the green value (0-255).
</DD><DT><I>b</I>
 </DT><DD>Sets the blue value (0-255).


</DD><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>IDAColor</I>
 </DT><DD>IDAColor constructor. For more information, see the DirectAnimation documentation. 


</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000300">FinalFrame Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets the sprite to display the designated frame when playback is stopped. Read-write at run time, write accessible only when sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>Name=&quot;FinalFrame&quot;</B> <B>Value=&quot;fframeflag&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.FinalFrame</B> <B>[=fframeflag]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>fframeflag</I>
 </DT><DD>Integer expression identifying the desired frame to be displayed when sprite playback stops. Values can be &#150;1 (display current frame), 0 (return to InitialFrame), or any valid frame number, from 1 to <I>n</I> where <I>n</I> represents the last frame in the sprite source. The default value is <B>0</B>, return to InitialFrame.


</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000400">Frame Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The sprite image frame currently displayed on the page. Read-only at run time.


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>nFrame</B> <B>=</B> <B>object.Frame</B><BR><H5>Parameters</H5>
<DL><DT><I>nFrame</I>
 </DT><DD>Integer expression identifying the current frame, from 0 to <I>n</I>, where <I>n</I> represents the last frame in the sprite source. The default value is 1.
</DD></DL>
<H5>Remarks</H5>
<P>If the sprite has a frame map, the value of the <B>Frame</B> property is a one-based index into the frame map. For example, if the frame map defines 10 frames, the <B>Frame</B> property value is 10 when the last frame in the frame map appears on the page.
<P>VBScript note: To use the value returned by the <B>Frame</B> property, you will have to use the cInt function


 to convert the value from an unsigned integer into a variant that VBScript will accept. An example would be FrameNum = cInt(sprite.Frame).

<P>The following example sets the indicator for a form to the value of the current frame for the sprite named SpriteHorse:
<PRE><FONT FACE="Courier" SIZE="2">
document.MyForm.txtFrame.value = SpriteHorse.Frame
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000500">FrameMap Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The order in which sprite frames play back and the length of time each frame is displayed.


 Read/write at run time; write access is available at run time only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;FrameMap&quot;</B> <I>VALUE=&quot;nImage1</I><B>,</B><BR>&nbsp;&nbsp;<B>t1</B> <B>[;</B> <I>nImage2</I><B>,</B><BR>&nbsp;&nbsp;<B>t2</B> <B>...]</B> <B>&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><I>object.FrameMap=&quot;nImage1</I><B>,</B><BR>&nbsp;&nbsp;<B>t1</B> <B>[;</B> <I>nImage2</I><B>,</B><BR>&nbsp;&nbsp;<B>t2</B> <B>...]</B> <B>&quot;</B><BR><H5>Parameters</H5>
<DL><DT><I>nImage1</I>, <I>nImage2</I>,<I>...</I>


 </DT><DD>Integer expression denoting the image to draw from the frame source over the duration. The first frame in the sprite is numbered 1. The default value is the order in the source file.
</DD><DT><I>t1, t2, ...</I>
 </DT><DD>Expression indicating the frame's duration (seconds.milliseconds, 0.000). The default value is the <A HREF="DA_E0020.htm#dasprite_0001040104001200" TARGET="TEXT">TimerInterval</A> duration.
</DD></DL>
<H5>Remarks</H5>
<P>Sprites that use frame maps can display source images in an order other than the images' consecutive order of appearance within the source file. They can also display each frame in the sprite for a different length of time.

<P>If the sprite has not been authored with a <B>FrameMap</B> property setting, frames appear in their order of appearance within the frame source file. The frames are in order from left to right, from top to bottom, within the file. Each frame appears for the number of seconds.milliseconds given by the <A HREF="DA_E0020.htm#dasprite_0001040104001200" TARGET="TEXT">TimerInterval</A> property.

<P>The following examples create a frame map with six frames.
<UL><LI>Frame 1 displays image 6 for 100 milliseconds.
<LI>Frame 2 displays image 5 for 200 milliseconds.
<LI>Frame 3 displays image 4 for 300 milliseconds.
<LI>Frame 4 displays image 3 for 400 milliseconds.
<LI>Frame 5 displays image 2 for 100 milliseconds.
<LI>Frame 6 displays image 1 for 100 milliseconds.
</UL>
<PRE><FONT FACE="Courier" SIZE="2">
&lt;PARAM NAME="FrameMap"
VALUE="6,0.100;5,0.200;4,0.300;3,0.400;2,0.100;1,0.100"&gt;
</FONT></PRE>
<P>
<PRE><FONT FACE="Courier" SIZE="2">
object.FrameMap="6,0.100;5,0.200;4,0.300;3,0.400;2,0.100;1,0.100"
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000600">Image Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets or retrieves an IDAImage


 from the Sprite control. For more information, see the DirectAnimation documentation.
<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Image</B> <B>=</B> <B>IDAImage</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the Sprite control.


</DD><DT><I>IDAImage</I>
 </DT><DD>The IDAImage. 


</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000700">InitialFrame Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The frame the sprite displays when it becomes visible. Read/write at run time; write access is available at run time only when the sprite is stopped.


<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;InitialFrame&quot;</B> <B>VALUE=&quot;nFrame&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.InitialFrame</B> <B>[=</B> <B>nFrame]</B> <BR><H5>Parameters</H5>
<DL><DT><I>nFrame</I>
 </DT><DD>An integer expression specifying the frame that the sprite should seek to before starting playback. The value of the <A HREF="DA_E0020.htm#dasprite_0001040104000400" TARGET="TEXT">Frame</A> property is a one-based index into the frame map. For example, if the frame map defines 10 frames, the <B>Frame</B> property value is 10 when the last frame in the frame map appears on the page. If the 
<B>InitialFrame</B> property is set to 0, the sprite will load the media but will display a blank frame until the 
<A HREF="DA_E0020.htm#dasprite_0001040104001800" TARGET="TEXT">Play</A> method is invoked. If the <B>InitialFrame</B> property is set to &#150;1 (or any number less than zero), the sprite will not load the media and will display a blank frame until the <B>Play</B> method is invoked, at which point it will begin media download and start playback after the media has been completely downloaded. The default value is 1.
</DD></DL>
<H5>Remarks</H5>
<P>This property is scriptable, but if it is set from a script, only the <B>InitialFrame</B> value


 of the sprite as it is set in the HTML-persistence is changed. The current frame of the sprite is not changed.
<P>The following example sets an initial frame indicator on the page to the value of the <B>InitialFrame</B> property for the sprite named SpriteHorse:
<PRE><FONT FACE="Courier" SIZE="2">
document.MyForm.txtInitialFrame.value = SpriteHorse.InitialFrame
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000800">Library Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Retrieves the reference to the DirectAnimation Library functions. 


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>IDALibrary=object.Library</B><BR><H5>Parameters</H5>
<DL><DT><I>IDALibrary</I>
 </DT><DD>DirectAnimation Library pointer.


</DD><DT><I>object</I>
 </DT><DD>String identifying the Sprite object.


</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000900">MaximumRate Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets or retrieves the sprite's maximum rendering speed (number of times the control will render per second). Read-write at run time; write access is available at run time only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;MaximumRate&quot;</B> <B>VALUE=&quot;fps&quot;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.MaximumRate</B> <B>[=</B> <B>fps]</B> <BR><H5>Parameters</H5>
<DL><DT><I>fps</I>
 </DT><DD>Number of frames per second. Default is 30. 
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000a00">NumFrames Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The number of frames in the Sprite source. Read/write at run time; write access is available only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;NumFrames&quot;</B> <B>VALUE=&quot;nframes&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.NumFrames</B> <B>[</B> <B>=</B> <B>nframes]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the Sprite object.
</DD><DT><I>nframes</I>
 </DT><DD>Integer indicating the total number of frames in the image for this frame source.
</DD></DL>
<H5>Remarks</H5>
<P>If the sprite includes a frame map, the <B>NumFrames</B> property gives the number of frames defined in the map. If you change the <B>NumFrames</B>, <A HREF="DA_E0020.htm#dasprite_0001040104000b00" TARGET="TEXT">NumFramesAcross</A>, or <A HREF="DA_E0020.htm#dasprite_0001040104000c00" TARGET="TEXT">NumFramesDown</A> properties, the sprite does not refresh until you set the <A HREF="DA_E0020.htm#dasprite_0001040104001000" TARGET="TEXT">SourceURL</A> property again.
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000b00">NumFramesAcross Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The width (in frames) of the Sprite Frame Source image.


 Read/write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;NumFramesAcross&quot;</B> <B>VALUE=&quot;nAcross&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.NumFramesAcross</B> <B>[=</B> <B>nAcross]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of sprite.

</DD><DT><I>nAcross</I>
 </DT><DD>Integer indicating the number of frames across in the sprite source image.
</DD></DL>
<H5>Remarks</H5>
<P>If you change the <A HREF="DA_E0020.htm#dasprite_0001040104000a00" TARGET="TEXT">NumFrames</A>, <B>NumFramesAcross</B>, or <A HREF="DA_E0020.htm#dasprite_0001040104000c00" TARGET="TEXT">NumFramesDown</A> properties, the sprite does not refresh until you set the <A HREF="DA_E0020.htm#dasprite_0001040104001000" TARGET="TEXT">SourceURL</A> property again.
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000c00">NumFramesDown Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The length (in frames) of the Sprite Frame Source. Read/write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;NumFramesDown&quot;</B> <B>VALUE=&quot;nDown&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.NumFramesDown</B> <B>[=</B> <B>nDown]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of sprite.

</DD><DT><I>nDown</I>
 </DT><DD>Integer indicating the number of frames down in the sprite source image.


</DD></DL>
<H5>Remarks</H5>
<P>If you change the <A HREF="DA_E0020.htm#dasprite_0001040104000a00" TARGET="TEXT">NumFrames</A>, <A HREF="DA_E0020.htm#dasprite_0001040104000b00" TARGET="TEXT">NumFramesAcross</A>, or <B>NumFramesDown</B> properties, the sprite does not refresh until you set the <A HREF="DA_E0020.htm#dasprite_0001040104001000" TARGET="TEXT">SourceURL</A> property again.
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000d00">PlayRate Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets or retrieves the sprite's playback speed. Can be used to speed up or slow down sprite playback, or even play the sprite backward. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;PlayRate&quot;</B> <B>VALUE=&quot;rSpeed&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.PlayRate</B> <B>=</B> <B>rSpeed</B><BR><H5>Parameters</H5>
<DL><DT><I>rSpeed</I>
 </DT><DD>Real expression


 indicating the number used to multiply the duration for each frame. The default value is 1.0. Possible values are:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Argument


 </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning 
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Positive (&gt;0.0)
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sprite plays forward.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0.0
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Disables the <B>PlayRate</B> property.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Negative (&lt;0.0)
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sprite plays backward.
</FONT></TD></TR></TABLE>
</DD></DL>
<H5>Remarks</H5>
<P>If the sprite does not have a frame map, the timer interval is divided by the value of <B>PlayRate</B> to determine the duration for all frames. <B>PlayRate</B> values greater than 1.0 speed up playback; values smaller than 1.0 slow down playback.

<P>The following example sets the play rate for the sprite named SpriteHorse to the value the user enters on the page:
<PRE><FONT FACE="Courier" SIZE="2">
SUB PlayRate_onclick
SpriteHorse.PlayRate = document.MyForm.txtPlayRate.value
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000e00">PlayState Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Retrieves the playback state of the sprite: stopped, playing, or paused.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>state</B> <B>=</B> <B>object.PlayState</B> <BR><H5>Parameters</H5>
<DL><DT><I>state</I>
 </DT><DD>Integer value. Zero if the control is stopped, 1 if the control is being played,


 2 if the media is paused. 
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104000f00">Repeat Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets or retrieves the number of times the sprite is to


 loop during playback. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;Repeat&quot;</B> <B>VALUE=&quot;nRepeat&quot;</B> <B>&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Repeat</B> <B>=</B> <B>nRepeat</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>nRepeat</I>
 </DT><DD>Integer expression indicating the number of times the sprite repeats playback. The default is 1. To loop infinitely, use &#150;1. The value 0 disables the <B>Repeat</B> property. Negative values are treated as unsigned. 
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001000">SourceURL Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets or retrieves the URL that points to the sprite source image. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;SourceURL&quot;</B> <B>VALUE=</B> <B>&quot;URL&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.SourceURL</B> <B>=</B> <B>URL</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>URL</I>
 </DT><DD>String pointing to the image file. 
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001100">Time Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Retrieves the sprite's elapsed playback time (in milliseconds). Playback repetitions are included in the time calculations. Read-only at run time.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Time</B> <B>=</B> <B>eTime</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>eTime</I>
 </DT><DD>Number of milliseconds into the animation. The default value is zero.
</DD></DL>
<H5>Remarks</H5>
<P>The <A HREF="DA_E0020.htm#dasprite_0001040104002100" TARGET="TEXT">OnSeek</A> event is fired upon completion of the Time change.


<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001200">TimerInterval Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>The length of time, in seconds.milliseconds, between the sprite's frame updates. Read/write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;TimerInterval&quot;</B> <B>VALUE=&quot;nInterval&quot;&gt;</B><BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.TimerInterval</B> <B>[=nInterval]</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>nInterval</I>
 </DT><DD>Expression defining the number of seconds.milliseconds between sprite frame updates. The default interval is 0.100 seconds (0.100) or 10 frames per second.
</DD></DL>
<H5>Remarks</H5>
<P>This value


 specifies the minimum length of time between sprite frame updates. For example, if the timer interval is set to 0.100 seconds and an image is scheduled to display at 0.150 seconds, the image will not be displayed until 0.200 seconds because the timer interval resolution is set to 0.100 milliseconds. If the image is scheduled to appear for 0.050 seconds or less (because of a frame map) it might not even appear.

<P>The following example sets the value of the timer interval indicator on the page to the value of the <B>TimerInterval</B> property for the sprite named SpriteHorse:
<PRE><FONT FACE="Courier" SIZE="2">
document.MyForm.txtTimerInterval.value = SpriteHorse.TimerInterval
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001300">UseColorKey Property</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets or retrieves whether to use the sprite's transparency information. Read-write at run time; write access is available at run time only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;UseColorKey&quot;</B> <B>VALUE=&quot;0</B> <B>|</B> <B>1&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.UseColorKey</B> <B>=</B> <B>fFalse</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>fFalse</I>
 </DT><DD>Boolean value, True (1) or False (0). Sets whether to use the transparency information in the image, as determined by the <A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104000200" TARGET="TEXT">ColorKey</A> property. The default is False. 


</DD></DL>
<H5>Remarks</H5>
<P> If the <B>ColorKey</B> value


 is set in a PARAM tag, then you should also set the <B>UseColorKey</B> value in a PARAM tag
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001400">AddFrameMarker Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets a marker to fire an event when playback reaches the designated frame. This method can be used or modified only when the sprite is stopped.

<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;AddFrameMarkerx&quot;</B> <B>VALUE=&quot;</B> <I>frame</I> <B>,</B><BR>&nbsp;&nbsp;<B>marker</B> <I>name</I> <B>,</B><BR>&nbsp;&nbsp;<B>[fRelative]&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.AddFrameMarker</B><B>(</B><BR>&nbsp;&nbsp;<I>frame</I> <B>,</B><BR>&nbsp;&nbsp;<B>&quot;</B> <B>marker</B> <B>name</B> <I>&quot;</I> <B>,</B><BR>&nbsp;&nbsp;<B>[</B> <B>fRelative</B> <I>]</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>
 </DT><DD>If you are adding more than one Frame Marker through PARAM Tag syntax, you must make each <B>AddFrameMarker</B> method call distinct by adding a sequential integer to the end of the <B>AddFrameMarker</B> Param


 name, starting at 1 (PARAM Tag syntax only)
</DD><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>Frame</I>
 </DT><DD>Number or key name of the frame for the <B>onmarker</B>, or <B>OnPlayMarker</B> event fires on.


</DD><DT><I>marker name</I>
 </DT><DD>Name of the marker.
</DD><DT><I>fRelative</I>
 </DT><DD> Optional parameter, default is True. Sets the Relative flag


 as either True (relative &#151; fires every time, includes looping) or False (absolute &#151; fires at specified time once and ignores looping). For PARAM Tag syntax, use zero (false) or nonzero (true); for script use predefined constants True and False.


 For the Preview Release, you should set 


 <I>fRelative</I> to True (nonzero).
</DD></DL>
<H5>Remarks</H5>
<P><A HREF="DA_E0020.htm#dasprite_0001040104001c00" TARGET="TEXT">onmarker</A> events are fired whether or not the sprite is playing. <B>OnPlayMarker</B> events are only fired when the sprite is playing. 

<P>The following sprite has three markers defined.
<PRE><FONT FACE="Courier" SIZE="2">
&lt;PARAM name="AddFrameMarker1" value="0,FrameEight,0"&gt;
&lt;PARAM name="AddFrameMarker2" value="4,FrameFour,0"&gt;
&lt;PARAM name="AddFrameMarker3" value="8,FrameZero,0"&gt;
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001500">AddTimeMarker Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets a marker to fire an event when playback reaches the designated time. This method can be used or modified only when the sprite is stopped.
<P><BR><B>PARAM</B> <B>Tag</B> <B>Syntax</B><BR><BR>&lt;<B>PARAM</B> <B>NAME=&quot;AddTimeMarker</B> <B>x</B> <B>&quot;</B> <B>VALUE=&quot;</B> <I>time</I> <B>,</B><BR>&nbsp;&nbsp;<B>marker</B> <I>name</I><B>,</B><BR>&nbsp;&nbsp;<B>[</B> <B>fAbsolute</B> <B>]&quot;&gt;</B> <BR><P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.AddTimeMarker</B><B>(</B><BR>&nbsp;&nbsp;<I>time</I> <B>,</B><BR>&nbsp;&nbsp;<B>&quot;</B> <B>marker</B> <I>name&quot;</I><B>,</B><BR>&nbsp;&nbsp;<B>[</B> <B>fAbsolute</B> <I>]</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>x</I>
 </DT><DD>If you are adding more than one Time Marker


 through PARAM Tag syntax, you must make each <B>AddTimeMarker</B> method call distinct by adding a sequential integer at the end of the <B>AddTimeMarker</B> Param


 name, starting at 1 (PARAM Tag syntax only)
</DD><DT><I>time</I>
 </DT><DD>Time for the <A HREF="DA_E0020.htm#dasprite_0001040104001c00" TARGET="TEXT">onmarker</A> or <A HREF="DA_E0020.htm#dasprite_0001040104002000" TARGET="TEXT">onplaymarker</A> event to fire. 
</DD><DT><I>marker name</I>
 </DT><DD>Name of the marker. 
</DD><DT><I>fAbsolute</I>
 </DT><DD> Optional parameter, default is True. Sets the Absolute flag


 as either True (absolute &#151; fires at specified time once and ignores looping) or False (relative &#151; fires every time, includes looping). For PARAM Tag syntax, use zero (false) or nonzero (true); for script use predefined constants True and False. For the Preview Release, <I>fAbsolute</I> must be set to True (nonzero).
</DD></DL>
<H5>Remarks</H5>
<P>For details on the events fired for markers. <B>onmarker</B> events are fired whether or not the sprite is playing. <B>onplaymarker</B> events are fired only when the sprite is playing. 

<P><B>Example</B>


<PRE><FONT FACE="Courier" SIZE="2">
&lt;PARAM name="AddTimeMarker1" value="0.0,Foo,1"&gt;
&lt;PARAM name=" AddTimeMarker2" value="4.7,FrameFour,1"&gt;
&lt;PARAM name=" AddTimeMarker3" value="8.0,FrameZero,1"&gt;
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001600">FrameSeek Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets the sprite playback to a specific frame.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.FrameSeek</B><B>(</B><BR>&nbsp;&nbsp;<I>frame</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>frame</I>
 </DT><DD>New playback frame for the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>The following example seeks the sprite named SpriteHorse in response to an <A HREF="DA_E0022.htm#damouse_0001040106000200" TARGET="TEXT">onclick</A> event: 


<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.FrameSeek(5)
END SUB
</FONT></PRE>
<P><B>mouseover example</B>
Right click inside the frame and View Source to get source code.

<center><iframe name="exampleframe" src="../Docsamps/spr-3State.htm"
height=200 width=400 align=center FRAMEBORDER=10 FRAMESPACING=5
scrolling="no">
</iframe></center>
<BR CLEAR=ALL><H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001700">Pause Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Stops playback at the current frame and maintains current frame position.

<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Pause</B> <BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>Does not rewind the media. 


<P>The following example stops playing


 the sprite named SpriteHorse in response to an <A HREF="DA_E0022.htm#damouse_0001040106000200" TARGET="TEXT">onclick</A> event: 
<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.Pause
END SUB
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001800">Play Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Begins playback from the current frame. This method is scriptable only.
<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Play</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>The following example starts playing the sprite named SpriteHorse in response to an <A HREF="DA_E0022.htm#damouse_0001040106000200" TARGET="TEXT">onclick</A> event:

<PRE><FONT FACE="Courier" SIZE="2">
SUB Play_onclick
&#009;SpriteHorse.Play
END SUB
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001900">Seek Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Sets the sprite playback to a specific elapsed time.


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Seek</B> <B>(</B><BR>&nbsp;&nbsp;<I>time</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>time</I>
 </DT><DD>New elapsed time for the sprite.


</DD></DL>
<H5>Remarks</H5>
<P>The following example seeks the sprite named SpriteHorse in response to an <A HREF="DA_E0022.htm#damouse_0001040106000200" TARGET="TEXT">onclick</A> event: 

<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.seek(0.0)
END SUB
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001a00">Stop Method</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Ends playback at the current frame and resets its playback position to the beginning.


 This method is scriptable only.
<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>object.Stop</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD></DL>
<H5>Remarks</H5>
<P>The following example stops playing the sprite named SpriteHorse in response to an <A HREF="DA_E0022.htm#damouse_0001040106000200" TARGET="TEXT">onclick</A> event:

<PRE><FONT FACE="Courier" SIZE="2">
SUB SpriteHorse_onclick
&#009;SpriteHorse.Stop
END SUB
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001b00">onframeseek Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs after the <A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104001600" TARGET="TEXT">FrameSeek</A> method has been invoked and the current playback frame has been changed.

<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onframeseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newframe</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onframeseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newframe</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be executed.


</DD><DT><I>newframe</I>
 </DT><DD>New frame to which the current playback position has been set.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001c00">onmarker Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs when a frame or time marker has been reached.

<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onmarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onmarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>String identifying the Sprite object.
</DD><DT><I>markername</I>
 </DT><DD>String containing the marker name established in the <A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104001500" TARGET="TEXT">AddTimeMarker</A> or <A HREF="DA_E0020.htm#dasprite_0001040104001400" TARGET="TEXT">AddFrameMarker</A> methods. 
</DD><DT><I>script</I>
 </DT><DD>Script to be executed.
</DD></DL>
<H5>Remarks</H5>
<P>This event occurs when the sprite playback position reaches the marker point, either when the sprite is playing or stopped. For example, if you seek to the marker position while the sprite is paused or stopped, the <B>onmarker</B> event will occur.


<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001d00">onmedialoaded Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs when a piece of sprite media is fully downloaded. 

<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_</B> <B>onmedialoaded</B><B>(</B><BR>&nbsp;&nbsp;<I>URL</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onmedialoaded</B><B>(</B><BR>&nbsp;&nbsp;<I>URL</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be executed.
</DD><DT><I>URL</I>
 </DT><DD>URL used to load the media.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001e00">onpause Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs when sprite playback is paused.
<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onpause</B><B>(</B> <B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onpause</B><B>(</B> <B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be executed when the event occurs.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104001f00">onplay Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs when the sprite starts. The sprite will not start until all media is downloaded. 
<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onplay</B><B>(</B> <B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onplay</B><B>(</B> <B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>script</I>
 </DT><DD>Script to be executed when the event occurs.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104002000">onplaymarker Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs when a marker is reached during sprite playback.
<P><BR><B>VBScript</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onplaymarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=</B> <B>object</B> <B>EVENT=</B> <B>onplaymarker</B><B>(</B><BR>&nbsp;&nbsp;<I>markername</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>String identifying the Sprite object.
</DD><DT><I>markername</I>
 </DT><DD>String containing the marker name established in the <A CLASS=tctop HREF="DA_E0020.htm#dasprite_0001040104001500" TARGET="TEXT">AddTimeMarker</A> or <A HREF="DA_E0020.htm#dasprite_0001040104001400" TARGET="TEXT">AddFrameMarker</A> methods. 
</DD><DT><I>script</I>
 </DT><DD>Script to be executed.
</DD></DL>
<H5>Remarks</H5>
<P>This event occurs when the sprite playback position reaches the marker point while the sprite is playing.


<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104002100">OnSeek Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs after a <A HREF="DA_E0020.htm#dasprite_0001040104001900" TARGET="TEXT">Seek</A> method has been invoked and the playback position has changed. 
<P><BR><B>Sub</B> <B>object_onseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newtime</I><BR>&nbsp;&nbsp;<B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onseek</B><B>(</B><BR>&nbsp;&nbsp;<I>newtime</I><BR>&nbsp;&nbsp;<B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.
</DD><DT><I>newtime</I>
 </DT><DD>Variable that contains the time value of the new playback position, in seconds.milliseconds (0.000).
</DD><DT><I>script</I>
 </DT><DD>Script to be run.
</DD></DL>
<H5>Remarks</H5>
<P>You can use <B>OnSeek</B> to set up conditional behavior.


<P><PRE><FONT FACE="Courier" SIZE="2">
&#009;Sub sprite1_onseek(newtime)
&#009;&#009;If newtime = 2.000 then
&#009;&#009;&#009;sprite1.stop
&#009;&#009;Else
&#009;&#009;&#009;sprite1.play
&#009;&#009;End If
&#009;End Sub
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dasprite_0001040104002200">onstop Event</A></H3>
<A HREF="DA_E0020.htm" TARGET="TEXT">Sprite Control</A>
<P>Occurs when the sprite stops playback.


<P><BR><B>Script</B> <B>Syntax</B><BR><BR><B>Sub</B> <B>object_onstop</B><B>(</B> <B>)</B><BR><B>script</B><BR><B>End</B> <B>Sub</B><BR><P><BR><B>JScript</B> <B>Syntax</B><BR><BR>&lt;<B>SCRIPT</B> <B>LANGUAGE=&quot;JavaScript&quot;</B> <B>FOR=object</B> <B>EVENT=onstop</B><B>(</B> <B>)</B> <B>&gt;</B><BR><B>script</B><BR>&lt;<B>SCRIPT&gt;</B><BR><H5>Parameters</H5>
<DL><DT><I>object</I>
 </DT><DD>Name of the sprite.


</DD></DL>
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
