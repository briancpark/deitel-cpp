<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CPosPassThru Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0235.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0237.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060238000000">CPosPassThru Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/cutil06.gif" WIDTH="299" HEIGHT="229" ALT="CPosPassThru class hierarchy" >

<P>The <B>CPosPassThru</B> class is a utility class that handles the
<A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> and <A HREF="dssd0158.htm" TARGET="TEXT">IMediaSeeking</A> interfaces for 
single-input pin renderers and transform filters. 

<P><A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> is the interface originally used for seeking in 
time-based media streams. <A HREF="dssd0158.htm" TARGET="TEXT">IMediaSeeking</A> is an interface intended to 
replace <B>IMediaPosition</B> in filter graphs that require seeking to units
other than time, such as samples or fields, or that require 
more precise time-based seeking. 

<P>Renderers will use this class to implement <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> and <A HREF="dssd0158.htm" TARGET="TEXT">IMediaSeeking</A>
from the filter; transform filters will use it to implement these two interfaces 
from the output pin. In both cases, the methods
will be implemented by calls to the <B>IMediaPosition</B> or <B>IMediaSeeking</B> 
interface provided by the output pin of the connected upstream filter, effectively
passing the position information through to the next filter.

<P>Create a class derived from <B>CPosPassThru</B>, 
giving it the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> pointer to your input pin, and delegate
all <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> and <A HREF="dssd0158.htm" TARGET="TEXT">IMediaSeeking</A> methods to it. The class
will find the output pin connected to the input pin, query this output pin for the
<B>IMediaPosition</B> or <B>IMediaSeeking</B> interface, and respond appropriately.


<A NAME="Lib_0001060238010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060238010001">m_Pin</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to the input pin of the filter.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060238020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060500" TARGET="TEXT">CPosPassThru</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060600" TARGET="TEXT">ForceRefresh</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Releases any cached interfaces held on the upstream pin.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060238030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061000" TARGET="TEXT">GetMediaTime</A> 
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the starting and ending media times.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060238040000"></A><P><B>Implemented IMediaPosition Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description

</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060100" TARGET="TEXT">CanSeekBackward</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the current position can be moved backward in the media stream.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060200" TARGET="TEXT">CanSeekForward</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the current position can be moved forward in the media stream.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060700" TARGET="TEXT">get_CurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current position in terms of the total length of the media stream.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060800" TARGET="TEXT">get_Duration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the total duration of the media stream.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060900" TARGET="TEXT">get_PrerollTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the time before the start position that the 
filter graph will start any nonrandom access device rolling.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060a00" TARGET="TEXT">get_Rate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the playback rate, relative to normal playback of the media.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060b00" TARGET="TEXT">get_StopTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the position within the media at which playback should stop.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061900" TARGET="TEXT">put_CurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the position within the media at which playback should start.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061a00" TARGET="TEXT">put_PrerollTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the time before the start position that the 
 filter graph will start any nonrandom access device rolling.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061b00" TARGET="TEXT">put_Rate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the playback rate, relative to normal playback of the media.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061c00" TARGET="TEXT">put_StopTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the position within the media at which playback should stop.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060238050000"></A><P><B>Implemented IMediaSeeking Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description

</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060300" TARGET="TEXT">CheckCapabilities</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines which capabilities exist on a media stream by
 applying seeking capability flags and checking the returned value.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060400" TARGET="TEXT">ConvertTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Converts a time from one time format to another.
 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060c00" TARGET="TEXT">GetAvailable</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the range of times in which seeking is efficient.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060d00" TARGET="TEXT">GetCapabilities</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the seeking capabilities of the media stream.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060e00" TARGET="TEXT">GetCurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current position within the media stream.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238060f00" TARGET="TEXT">GetDuration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the length of time that the media stream will play.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061100" TARGET="TEXT">GetPositions</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current and stop position settings.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061200" TARGET="TEXT">GetPreroll</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the preroll settings.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061300" TARGET="TEXT">GetRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current rate.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061400" TARGET="TEXT">GetStopPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> Retrieves the position at which the media stream stops.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061500" TARGET="TEXT">GetTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current media time format.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061600" TARGET="TEXT">IsFormatSupported</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if a specified time format is supported.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061700" TARGET="TEXT">IsUsingTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the time format being used in the call is the same as the 
 one the interface currently uses.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061d00" TARGET="TEXT">QueryPreferredFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the preferred time format the interface will use.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061e00" TARGET="TEXT">SetPositions</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets current and stop positions and applies flags to both.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061f00" TARGET="TEXT">SetRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets a new playback rate.

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238062000" TARGET="TEXT">SetTimeFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the time format, which determines the format of units used during seeking.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060238060000"></A><P><B>Implemented INonDelegatingUnknown Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0236.htm#Lib_0001060238061800" TARGET="TEXT">NonDelegatingQueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a specified reference-counted interface.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060100">CPosPassThru::CanSeekBackward</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Determines if the current position can be moved backward in the media stream.

<P><B>HRESULT</B> <B>CanSeekBackward</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>*pCanSeekBackward</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCanSeekBackward</I>
 </DT><DD>Set to OATRUE if able to seek backward; otherwise set to OAFALSE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value returned from calling <A HREF="dssd0154.htm#If_0001060142030100" TARGET="TEXT">IMediaPosition::CanSeekBackward</A>
on the connected pin. 
<H5>Remarks</H5>
<P>This member function calls <A HREF="dssd0154.htm#If_0001060142030100" TARGET="TEXT">IMediaPosition::CanSeekBackward</A> on
the connected pin and returns the result. 

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060200">CPosPassThru::CanSeekForward</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Determines if the current position can be moved forward in the media stream.

<P><B>HRESULT</B> <B>CanSeekForward</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>*pCanSeekForward</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCanSeekForward</I>
 </DT><DD>Set to OATRUE if able to seek forward; otherwise set to OAFALSE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value returned from calling <A HREF="dssd0154.htm#If_0001060142030200" TARGET="TEXT">IMediaPosition::CanSeekForward</A>
on the connected pin. 
<H5>Remarks</H5>
<P>This member function calls <A HREF="dssd0154.htm#If_0001060142030200" TARGET="TEXT">IMediaPosition::CanSeekForward</A> on
the upstream output pin connected to the peer input pin and returns the result. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060300">CPosPassThru::CheckCapabilities</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Determines which capabilities exist on a media stream by
applying seeking capability flags and checking the returned value.

<P><B>HRESULT</B> <B>CheckCapabilities</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <B>*</B> <I>pCapabilities</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCapabilities</I>
 </DT><DD>Pointer to an AM_SEEKING_SEEKING_CAPABILITIES enumerator 
 containing the seeking capabilities flags to apply. These flags can be 
 any combination of the following:
 <TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetCurrentPos
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetDuration
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetStopPos
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanPlayBackwards
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekAbsolute 
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekBackwards
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekForwards 
 </FONT></TD></TABLE>
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if all capabilities in <I>pCapabilities</I> are present,
S_FALSE if some are present, or E_FAIL if none are present.


<H5>Remarks</H5>
<P>This member function implements <A HREF="dssd0158.htm#If_0001060146030100" TARGET="TEXT">IMediaSeeking::CheckCapabilities</A>,
by calling the <B>IMediaSeeking::CheckCapabilities</B> method on the 
upstream output pin connected to the peer input pin. 
The pin that performs the seek operation will return whether the flags 
presented in the <I>pCapabilities</I> parameter are present. This returned value will then, 
in turn, propagate to calls made from <B>CPosPassThru::CheckCapabilities</B>
member functions in intervening filters.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060400">CPosPassThru::ConvertTimeFormat</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Converts a time from one format to another.

<P><B>HRESULT</B> <B>ConvertTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pTarget</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pTargetFormat</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <I>Source</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pSourceFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTarget</I>
 </DT><DD>Time in converted format. 
</DD><DT><I>pTargetFormat</I>
 </DT><DD><A HREF="dssd0397.htm#gloss_00010b0108000001" TARGET="TEXT">GUID</A> of the format to convert to, or the currently selected format if NULL. 
</DD><DT><I>Source</I>
 </DT><DD>Time in original format. 
</DD><DT><I>pSourceFormat</I>
 </DT><DD><A HREF="dssd0397.htm#gloss_00010b0108000001" TARGET="TEXT">GUID</A> of the format to be converted from, or the currently selected format if NULL.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030200" TARGET="TEXT">IMediaSeeking::ConvertTimeFormat</A>
method by calling this same method on the upstream filter's output pin.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060500">CPosPassThru::CPosPassThru</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Constructs a <A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru</A> object.

<P><B>CPosPassThru</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>TCHAR</B> <I>*pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <B>*</B> <I>phr</I><B>,</B><BR>&nbsp;&nbsp;<B>IPin</B> <B>*</B> <I>pPin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
 </DT><DD>Name of the object used in the <A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru</A> constructor for debugging purposes.
</DD><DT><I>pUnk</I>
 </DT><DD>Pointer to the owner of this object.
</DD><DT><I>phr</I>
 </DT><DD>Pointer to an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value for resulting information.
</DD><DT><I>pPin</I>
 </DT><DD>Pointer to the input pin for the filter.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>Allocate the <I>pName</I> parameter in static memory. This name
appears on the debugging terminal upon creation and deletion of the object.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060600">CPosPassThru::ForceRefresh</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Releases any cached interfaces on the upstream pin.

<P><B>HRESULT</B> <B>ForceRefresh</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns S_OK.


<H5>Remarks</H5>
<P>For efficiency, the <A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru</A> class can 
cache the <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> 
interface of the connected upstream output pin. This method releases any
cached interface pointers and forces them to be obtained again via <A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> 
if needed. 

<P>Presently, this class does not cache the upstream <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A>
so this member function is not necessary. It is left in for future flexibility.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060700">CPosPassThru::get_CurrentPosition</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the current position in terms of the total length of the media stream.

<P><B>HRESULT</B> <B>get_CurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>Returned start time as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The start position is applied before the rate and therefore is the 
position at typical playback speed.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060800">CPosPassThru::get_Duration</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the total duration of the media stream.

<P><B>HRESULT</B> <B>get_Duration</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <B>*</B> <I>plength</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>plength</I>
 </DT><DD>Returned length of the media stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The duration assumes normal playback speed, and it is therefore unaffected by the rate.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060900">CPosPassThru::get_PrerollTime</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the time prior to the start position that devices should start rolling.

<P><B>HRESULT</B> <B>get_PrerollTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>Returned preroll time as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Preroll time is the time prior to the start position at which nonrandom access
devices, such as tape players, should start rolling.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060a00">CPosPassThru::get_Rate</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the rate of playback relative to normal playback speed.

<P><B>HRESULT</B> <B>get_Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <B>*</B> <I>pdRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdRate</I>
</DT><DD>Returned rate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>A rate of 1.0 indicates normal playback speed. A rate of 0.5 indicates half
speed. A rate of &#150;1.0 indicates normal speed in reverse.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060b00">CPosPassThru::get_StopTime</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the time at which the media stream stops.

<P><B>HRESULT</B> <B>get_StopTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>Returned stop time as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The stop time is a position between zero and the duration of the media
at which playback should stop.

<P>The stop position is applied before the rate and therefore is the position at typical playback
speed.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060c00">CPosPassThru::GetAvailable</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Returns the range of times in which seeking is efficient.

<P><B>HRESULT</B> <B>GetAvailable</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pEarliest</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pLatest</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pEarliest</I>
 </DT><DD>Earliest time that can be efficiently seeked to.
</DD><DT><I>pLatest</I>
 </DT><DD>Latest time that can be efficiently seeked to.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030300" TARGET="TEXT">IMediaSeeking::GetAvailable</A>
method by calling this same method on the upstream filter's output pin.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060d00">CPosPassThru::GetCapabilities</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Returns the seeking capabilities of the media stream.

<P><B>HRESULT</B> <B>GetCapabilities</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <B>*</B> <I>pCapabilities</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCapabilities</I>
 </DT><DD>Seeking capability flags, which can be 
 any combination of the following.
 <TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetCurrentPos
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetDuration
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanGetStopPos
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanPlayBackwards
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekAbsolute 
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekBackwards
 </FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">AM_SEEKING_CanSeekForwards 
 </FONT></TD></TABLE>
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements <A HREF="dssd0158.htm#If_0001060146030400" TARGET="TEXT">IMediaSeeking::GetCapabilities</A>
by calling the <B>IMediaSeeking::GetCapabilities</B> method on the 
upstream output pin connected to the peer input pin. 
The pin that performs the seek operation will return the capabilities 
present in the <I>pCapabilities</I> parameter. These returned capabilities 
will then, in turn, propagate to calls made from <B>CPosPassThru::GetCapabilities</B>
member functions in intervening filters.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060e00">CPosPassThru::GetCurrentPosition</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the current position in terms of the media stream's total length.

<P><B>HRESULT</B> <B>GetCurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pCurrent</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrent</I>
 </DT><DD>Current position in current time format units.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030500" TARGET="TEXT">IMediaSeeking::GetCurrentPosition</A> 
interface. It calls the <A HREF="dssd0236.htm#Lib_0001060238061000" TARGET="TEXT">CPosPassThru::GetMediaTime</A> virtual member function,
which you should override and implement in your derived class to return the
current position. If this fails (which it does by default), the 
<B>IMediaSeeking::GetCurrentPosition</B> on the upstream filter's output
pin is called. 


<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238060f00">CPosPassThru::GetDuration</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the length of time that the media stream will play.

<P><B>HRESULT</B> <B>GetDuration</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pDuration</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pDuration</I>
 </DT><DD>Returned length of the media stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030600" TARGET="TEXT">IMediaSeeking::GetDuration</A>
method by calling this same method on the upstream filter's output pin.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061000">CPosPassThru::GetMediaTime</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the starting and ending media times.

<P><B>virtual</B> <B>HRESULT</B> <B>GetMediaTime</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pStartTime</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pEndTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pStartTime</I>
 </DT><DD>Returned starting media time.
</DD><DT><I>pEndTime</I>
 </DT><DD>Returned ending media time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value (E_FAIL by default).


<H5>Remarks</H5>
<P>Override this virtual member function to return the current samples' media time. 
 This represents the current position in terms of media time 
(for example, frame 20 of a total 130 frames).
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061100">CPosPassThru::GetPositions</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Returns the current and stop position settings.

<P><B>HRESULT</B> <B>GetPositions</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pCurrent</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pStop</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrent</I>
 </DT><DD>Start time in the current time format.
</DD><DT><I>pStop</I>
 </DT><DD>Stop time in the current time format.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030700" TARGET="TEXT">IMediaSeeking::GetPositions</A>
method by calling this same method on the upstream filter's output pin.
It allows the retrieval of several values with only one call.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061200">CPosPassThru::GetPreroll</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the preroll settings.

<P><B>HRESULT</B> <B>GetPreroll</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pllPreroll</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllPreroll</I>
 </DT><DD>Returned preroll time. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030800" TARGET="TEXT">IMediaSeeking::GetPreroll</A>
method by calling this same method on the upstream filter's output pin.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061300">CPosPassThru::GetRate</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the current rate.

<P><B>HRESULT</B> <B>GetRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <B>*</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dRate</I>
 </DT><DD> Current rate, where 1 is the normal rate. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030900" TARGET="TEXT">IMediaSeeking::GetRate</A>
method by calling this same method on the upstream filter's output pin.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061400">CPosPassThru::GetStopPosition</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the position at which the media stream stops.

<P><B>HRESULT</B> <B>GetStopPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG*</B> <I>pStop</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pStop</I>
 </DT><DD>Returned stop time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030a00" TARGET="TEXT">IMediaSeeking::GetStopPosition</A>
method by calling this same method on the upstream filter's output pin.

The stop position is a time between zero and the duration of the media
at which playback should stop.


<P>The stop position is applied before the rate and therefore is the position at 
typical playback speed.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061500">CPosPassThru::GetTimeFormat</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the current time format, which determines the format of units used during seeking.

<P><B>HRESULT</B> <B>GetTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Media time format currently supported by this interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030b00" TARGET="TEXT">IMediaSeeking::GetTimeFormat</A>
method by calling this same method on the upstream filter's output pin. 

<P>See the <A HREF="dssd0158.htm#If_0001060146030c00" TARGET="TEXT">IMediaSeeking::IsFormatSupported</A> method for a list of time formats.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061600">CPosPassThru::IsFormatSupported</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Determines if a specified time format is supported.

<P><B>HRESULT</B> <B>IsFormatSupported</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030c00" TARGET="TEXT">IMediaSeeking::IsFormatSupported</A>
method. See that method for a list of valid time formats.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061700">CPosPassThru::IsUsingTimeFormat</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Determines if the time format being used in the call is the same as the 
 one currently in use by the interface.
<P><B>HRESULT</B> <B>IsUsingTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format to check.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if <I>pFormat</I> is the current time format; otherwise returns S_FALSE.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030d00" TARGET="TEXT">IMediaSeeking::IsUsingTimeFormat</A>
method by calling this same method on the upstream filter's output pin. 
This can be used in place of <A HREF="dssd0158.htm#If_0001060146030b00" TARGET="TEXT">IMediaSeeking::GetTimeFormat</A> to save copying
the <A HREF="dssd0397.htm#gloss_00010b0108000001" TARGET="TEXT">GUID</A>.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061800">CPosPassThru::NonDelegatingQueryInterface</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Returns a specified reference-counted interface.

<P><B>HRESULT</B> <B>NonDelegatingQueryInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <I>**ppv</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>riid</I>
 </DT><DD>Reference identifier.
</DD><DT><I>ppv</I>
 </DT><DD>Pointer to the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns pointers to the <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A>, <A HREF="dssd0158.htm" TARGET="TEXT">IMediaSeeking</A>, and
<A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interfaces by default.

<H5>Remarks</H5>
<P>Override this method to publish any additional interfaces implemented by the derived class.

<P>This member function implements the 
<A HREF="dssd0265.htm#fmutil_0001060309000001" TARGET="TEXT">INonDelegatingUnknown::NonDelegatingQueryInterface</A> method.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061900">CPosPassThru::put_CurrentPosition</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets the time that the media stream begins.

<P><B>HRESULT</B> <B>put_CurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
 </DT><DD>Start time expressed as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The start time is a position between zero and the duration of the media
at which playback should begin when the next run command is issued. Do not call
this method when the filter graph is running, only when it is paused or stopped.

<P>Setting the start position when paused causes playback to resume from the
new start position when the run command is issued.

<P>The start position is applied before the rate and therefore is the position at typical playback speed.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061a00">CPosPassThru::put_PrerollTime</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets the time prior to the start position that devices should start rolling.

<P><B>HRESULT</B> <B>put_PrerollTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
</DT><DD>Preroll time to be set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>Preroll time is the time prior to the start position at which nonrandom
access devices, such as tape players, should start rolling.

<P>Note that while this member function passes the call upstream, the 
<A HREF="dssd0154.htm#If_0001060142030900" TARGET="TEXT">IMediaPosition::put_PrerollTime</A> method is not implemented on 
any Microsoft source filter. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061b00">CPosPassThru::put_Rate</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets the rate of playback relative to normal speed.

<P><B>HRESULT</B> <B>put_Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dRate</I>
</DT><DD>Rate to set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This property allows an application to speed up or slow down playback
relative to the normal default playback speed. A rate of 1.0 indicates normal
playback speed. Specifying 2.0 causes playback at twice the normal rate: a video
created for 10 frames per second (fps) will be played back at 20 fps, if resources
permit. Audio streams played back at above-normal speed increase the pitch
rather than drop frames.

<P>Negative rates indicate reverse play. Not all media will support reverse play.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061c00">CPosPassThru::put_StopTime</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets the time at which the media stream will stop.

<P><B>HRESULT</B> <B>put_StopTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
 </DT><DD>Stop time as a <A HREF="dssd0389.htm#external_00010a010900002a" TARGET="TEXT">double</A> value in seconds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The stop time is a position between zero and the duration of the media
at which playback should stop.

<P>The stop position is applied before the rate and therefore is the position at typical playback speed.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061d00">CPosPassThru::QueryPreferredFormat</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Retrieves the preferred time format to be used by the interface.

<P><B>HRESULT</B> <B>QueryPreferredFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>GUID</B> <I>*pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format preferred by the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030e00" TARGET="TEXT">IMediaSeeking::QueryPreferredFormat</A>
method by calling this same method on the upstream filter's output pin.

<P>See the description for <A HREF="dssd0158.htm#If_0001060146030c00" TARGET="TEXT">IMediaSeeking::IsFormatSupported</A> for a list of available
time formats. If the time format returned is not satisfactory, use the 
<B>IMediaSeeking::IsFormatSupported</B> method to query for supported time formats 
that you can use.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061e00">CPosPassThru::SetPositions</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets current and stop positions and applies flags to both.

<P><B>HRESULT</B> <B>SetPositions</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pCurrent</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwCurrentFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <B>*</B> <I>pStop</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwStopFlags</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pCurrent</I>
 </DT><DD>Start position if stopped, or position to continue from if paused.
</DD><DT><I>dwCurrentFlags</I>
 </DT><DD>When seeking, one of these flags must be set to indicate the type of seek.
 See the <A HREF="dssd0158.htm#If_0001060146030f00" TARGET="TEXT">IMediaSeeking::SetPositions</A> method for a description of these flags.
 
</DD><DT><I>pStop</I>
 </DT><DD>Position in the stream at which to quit.
</DD><DT><I>dwStopFlags</I>
 </DT><DD>Stop position seeking options to be applied. These are the same as listed for
 <I>dwCurrentFlags</I>.
 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146030f00" TARGET="TEXT">IMediaSeeking::SetPositions</A>
method by calling this same method on the upstream filter's output pin.
It allows the retrieval of several values with only one call.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238061f00">CPosPassThru::SetRate</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets a new playback rate.

<P><B>HRESULT</B> <B>SetRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dRate</I>
 </DT><DD>New rate, where 1 is the normal rate, 2 is twice as fast, and so on. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146031000" TARGET="TEXT">IMediaSeeking::SetRate</A>
method by calling this same method on the upstream filter's output pin.
It is an error to set the rate to 0.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060238062000">CPosPassThru::SetTimeFormat</A></H3>
<A HREF="dssd0236.htm" TARGET="TEXT">CPosPassThru Class</A>
<P>Sets the time format, which determines the format of units used during seeking.

<P><B>HRESULT</B> <B>SetTimeFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <B>*</B> <I>pFormat</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pFormat</I>
 </DT><DD>Time format to be supported by this interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0158.htm#If_0001060146031100" TARGET="TEXT">IMediaSeeking::SetTimeFormat</A>
method by calling this same method on the upstream filter's output pin. 
See the <A HREF="dssd0158.htm#If_0001060146030c00" TARGET="TEXT">IMediaSeeking::IsFormatSupported</A> method for a list of time formats.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
