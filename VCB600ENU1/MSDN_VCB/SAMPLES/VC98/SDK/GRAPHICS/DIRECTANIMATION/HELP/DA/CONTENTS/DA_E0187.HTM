<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Static Methods Relevant to Point2Bvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0186.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0188.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_0001070147000000">Static Methods Relevant to Point2Bvr Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000100">add</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional point behavior. The location of the point is calculated by adding the corresponding coordinates of the given point and vector behaviors.

<P><B>public</B> <B>static</B> <B>Point2Bvr</B> <B>add</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>pt</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pt</I>
 </DT><DD>A <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object.
</DD><DT><I>vec</I>
 </DT><DD>A <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0187.htm#dxmref_0001070147000800" TARGET="TEXT">sub</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000200">bSpline</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> behavior based on a B-spline function. The function depends on the control elements, the knot vector, the mathematical degree, and the weights of the control elements (these are optional).

<P>A B-spline function without weights is piecewise polynomial and with weights is piecewise rational (the quotient of two polynomials). It requires that:
 
<P>numberOfControlElements = numberOfKnots - <I>degree</I> + 1

<P>The control elements define the approximate direction and shape of the function. The knots represent junction values, in parameter space, between the connected polynomial parts. 

<P>Given a degree <I>d</I> and a number of knots <I>k</I>, the function is valid in the range knot<I>d</I> to knot<I>k-d</I>+1, and is otherwise undefined. For example, for a degree 2 curve, the valid range is from the second knot to the next to the last knot, inclusive.

<P>The returned <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> is the traversal of the spline function according to the <I>evaluation</I> parameter. The evaluation parameter is a <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> that must be in the valid range of the spline, which is [knot<I>d</I>, knot<I>k</I>-<I>d</I>+1]. Any values outside this range are automatically clamped to the end values.

<P><B>public</B> <B>static</B> <B>Point2Bvr</B> <B>bSpline</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>degree</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>knots</I><B>,</B><BR>&nbsp;&nbsp;<B>Point2Bvr[]</B> <I>control_elements</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>weights</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>evaluation</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>degree</I>
 </DT><DD>A number representing the mathematical degree of the B-spline to evaluate. Must be 1, 2, or 3. 
</DD><DT><I>knots</I>
 </DT><DD>An array of <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the knots used to calculate the B-spline. 
</DD><DT><I>control_elements</I>
 </DT><DD>An array of <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> objects representing the control elements used to calculate the B-spline.
</DD><DT><I>weights</I>
 </DT><DD>An array of <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the weights used to calculate the rational B-spline. There must be the same number of weights as control elements. For non-rational B-splines, the value of <I>weights</I> is null.
</DD><DT><I>evaluation</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object that controls the spline evaluation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000300">derivative</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior of the instantaneous derivative (rate of change) of the given point behavior. For example, a constant yields a constant derivative of [0 0], and point2(time, 0) (without additional time substitutions) yields a constant derivative of [1 0]. 

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>derivative</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>pt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pt</I>
 </DT><DD>A <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000400">distance</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a number behavior representing the distance between two point behaviors. 

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>distance</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0187.htm#dxmref_0001070147000500" TARGET="TEXT">distanceSquared</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000500">distanceSquared</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a number behavior representing the square of the distance between two point behaviors. This is the same as the <A HREF="DA_E0187.htm#dxmref_0001070147000400" TARGET="TEXT">distance</A> method except that the distance is squared.

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>distanceSquared</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0187.htm#dxmref_0001070147000400" TARGET="TEXT">distance</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000600">point2</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional point behavior. The location of the point is given in Cartesian coordinates.

<P><B>public</B> <B>static</B> <B>Point2Bvr</B> <B>point2</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>y</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I> and <I>y</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects, specifying the coordinate values. The <I>x</I> specifies the distance along the x-axis from the origin to the point, and <I>y</I> specifies the distance along the y-axis. These parameters can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0187.htm#dxmref_0001070147000700" TARGET="TEXT">point2Polar</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000700">point2Polar</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional point behavior. The location of the point is given in polar coordinates.

<P><B>public</B> <B>static</B> <B>Point2Bvr</B> <B>point2Polar</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>length</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>XYangle</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying the angle, in radians, between the positive x-axis and the ray that goes from the origin to the point. This parameter can also be of type double. 
</DD><DT><I>length</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying the distance from the origin to the point. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0187.htm#dxmref_0001070147000600" TARGET="TEXT">point2</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000800">sub</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior. The coordinate values of the vector are calculated by subtracting the coordinates of <I>p2</I> from the corresponding coordinates of <I>p1</I>.

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>sub</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p1</I><B>,</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>p2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>p1</I> and <I>p2</I>
 </DT><DD>The <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070147000900">sub</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional point behavior. The location of the point is calculated by subtracting the coordinates of the given vector behavior from the corresponding coordinates of the given point behavior.

<P><B>public</B> <B>static</B> <B>Point2Bvr</B> <B>sub</B><B>(</B><BR>&nbsp;&nbsp;<B>Point2Bvr</B> <I>pt</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pt</I>
 </DT><DD>A <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object.
</DD><DT><I>vec</I>
 </DT><DD>A <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0152.htm" TARGET="TEXT">Point2Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0187.htm#dxmref_0001070147000100" TARGET="TEXT">add</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
