<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IStandardCutList Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0173.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0175.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060156000000">IStandardCutList Interface</A></H2>
<BR CLEAR=ALL>
<P><B>IStandardCutList</B> provides a simple way for an application to feed a cutlist into a cutlist provider (filter). 

<P><A HREF="dssd0174.htm#If_0001060156030100" TARGET="TEXT">IStandardCutList::AddElement</A> provides the primary functionality of this interface by taking a pointer to a cutlist element and adding it to the list. 

<P>The DirectShow cutlist interfaces define two types of objects: cutlist elements and cutlists. Cutlist elements contain information related to the media from which they are extracted, while cutlists describe the relative time and duration of each element. A cutlist as a collection of cutlist elements. Each cutlist element can in turn expose multiple interfaces - one for each type of attribute. 

<P>Applications use the following interfaces to create and manipulate cutlists and their playback.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IStandardCutList</B>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0135.htm" TARGET="TEXT">IFileClip</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0124.htm" TARGET="TEXT">ICutListGraphBuilder</A>
</FONT></TD></TABLE>
<P>These interfaces generalize cutlist functionality, allowing application writers to construct filter graphs without having to worry about the specifics of each cutlist or effects filter. In addition, a single cutlist filter calls these interfaces -- the application must be aware of the different cutlist filters that are installed and generate the proper filter graph.

<P>If you need functionality not provided by the interfaces above, see the following interfaces:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0123.htm" TARGET="TEXT">ICutListElement</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0136.htm" TARGET="TEXT">IFileCutListElement</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0176.htm" TARGET="TEXT">IVideoCutListElement</A>
</FONT></TD><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0115.htm" TARGET="TEXT">IAudioCutListElement</A>
</FONT></TD></TABLE>
<A NAME="If_0001060156010000"></A><P><B>When to Implement
</B>
<P>Do not implement this interface. DirectShow implements it for you.

<A NAME="If_0001060156020000"></A><P><B>When to Use
</B>
<P>Use this interface in your application to create a whole cutlist out of individual cuts (elements).

<A NAME="If_0001060156030000"></A><P><B>Methods in Vtable Order

</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IStandardCutList methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0174.htm#If_0001060156030100" TARGET="TEXT">AddElement</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Accepts a cutlist element from the application and adds it to the cutlist to be played.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0174.htm#If_0001060156030200" TARGET="TEXT">RemoveElement</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Removes an element from a cutlist. (Not currently implemented.)
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0174.htm#If_0001060156030300" TARGET="TEXT">GetNextElement</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the cutlist element that follows the one passed in.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0174.htm#If_0001060156030400" TARGET="TEXT">GetMediaType</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the clip's media type structure.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060156030100">IStandardCutList::AddElement</A></H3>
<A HREF="dssd0174.htm" TARGET="TEXT">IStandardCutList Interface</A>
<P>Accepts a cutlist element from the application and adds it to the cutlist to be played.

<P><B>HRESULT</B> <B>AddElement</B><B>(</B><BR>&nbsp;&nbsp;<B>ICutListElement</B> <I>*pElement</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>mtStart</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>mtDuration</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>pElement</I>
 </DT><DD>[in] Pointer to the cutlist element to be added to the cutlist.
</DD><DT><I>mtStart</I>
 </DT><DD>[in] Relative position of the cut in the cutlist. Must be CL_DEFAULT_TIME (indicating the relative position is the end of the current cutlist).
</DD><DT><I>mtDuration</I>
 </DT><DD>[in] Length of the cut. Must be CL_DEFAULT_TIME (indicating the duration is defined by the element).
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Argument is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method is not supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Could not allocate the element descriptor.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method adds a clip to the end of the clip list. The cutlist will play in the order you add the clips. 

<P><B>Note:</B>  Removing clips from the cutlist is not supported.<H3><HR COLOR=#0000FF><A NAME="If_0001060156030200">IStandardCutList::RemoveElement</A></H3>
<A HREF="dssd0174.htm" TARGET="TEXT">IStandardCutList Interface</A>
<P>Removes an element from a cutlist. (Not currently implemented.)

<P><B>HRESULT</B> <B>RemoveElement</B><B>(</B><BR>&nbsp;&nbsp;<B>ICutListElement</B> <I>*pElement</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>pElement</I>
 </DT><DD>[in] Pointer to the element to be removed.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="If_0001060156030300">IStandardCutList::GetNextElement</A></H3>
<A HREF="dssd0174.htm" TARGET="TEXT">IStandardCutList Interface</A>
<P>Retrieves the cutlist element that follows the one passed in.
<P><B>HRESULT</B> <B>GetNextElement</B><B>(</B><BR>&nbsp;&nbsp;<B>ICutListElement</B> <I>**ppElement</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>ppElement</I>
 </DT><DD>[in, out] Address of a pointer to a cutlist element. Specify a NULL ICutListElement pointer to retrieve the first element of the cutlist.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Argument is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method is not supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Could not allocate required memory.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H3><HR COLOR=#0000FF><A NAME="If_0001060156030400">IStandardCutList::GetMediaType</A></H3>
<A HREF="dssd0174.htm" TARGET="TEXT">IStandardCutList Interface</A>
<P>Retrieves the clip's media type structure.
<P><B>HRESULT</B> <B>GetMediaType</B><B>(</B><BR>&nbsp;&nbsp;<B>AM_MEDIA_TYPE</B> <I>*pmt</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><BR><H5>Parameters</H5>
<DL><DT><I>pmt</I>
 </DT><DD>[in] Pointer to the <A HREF="dssd0287.htm#structs_0001060501000300" TARGET="TEXT">AM_MEDIA_TYPE</A> structure describing the clip.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. <B>HRESULT</B> can include one of the following standard constants, or other values not listed. 

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_INVALIDARG </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Argument is invalid.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_NOTIMPL </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Method is not supported.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_OUTOFMEMORY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Could not allocate required memory.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>This method retrieves the media type of all cuts in the cutlist. 

<P><B>Note:</B>  The first cut added to a cutlist determines the media type. All other cuts must be of the same media type.<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
