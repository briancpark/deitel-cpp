<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>TupleBvr Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0206.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0208.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_000107015b000000">TupleBvr Class</A></H2>
<BR CLEAR=ALL>
<PRE><FONT FACE="Courier" SIZE="2">public class TupleBvr extends Behavior
     //Constructor
     public TupleBvr(Behavior[] tuple);

     //Methods
     public Behavior nth(int i);
     public int length();

     public static TupleBvr newUninitBvr(TupleBvr tuple);
}
</FONT></PRE>
<P> A <B>TupleBvr</B> object is similar to an array. It can, however, accept heterogeneous types. The two methods included in this class are convenience utilities. Any number of members can be included in a <B>TupleBvr</B> object. 

<UL><LI><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b010000" TARGET="TEXT">Constructor</A>
<LI><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b020000" TARGET="TEXT">Methods</A>
<LI><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b030000" TARGET="TEXT">Relevant Methods from the Statics Class</A>
</UL>
<H3><A NAME="dxmref_000107015b010000">Constructor</A></H3>
<P><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b010100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">TupleBvr</A><BR>
<H4><HR COLOR=#0000FF><A NAME="dxmref_000107015b010100">TupleBvr</A></H4>
<A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr Class</A>
<P>Constructs the <A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr</A> object.

<P><B>public</B> <B>TupleBvr</B><B>(</B><BR>&nbsp;&nbsp;<B>Behavior</B> <I>behaviors[]</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>behaviors</I>
 </DT><DD>The behaviors to be included in the <A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr</A>.
</DD></DL>
<H3><A NAME="dxmref_000107015b020000">Methods</A></H3>
<P><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b020100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">length</A><BR>
<P><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b020200" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">nth</A><BR>
<P><A CLASS=tctop HREF="DA_E0207.htm#dxmref_000107015b020300" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">newUninit</A><BR>
<H4><HR COLOR=#0000FF><A NAME="dxmref_000107015b020100">length</A></H4>
<A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr Class</A>
<P>Determines the length of a tuple behavior.

<P><B>public</B> <B>int</B> <B>length</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an integer. For more information about integers, consult a Java reference.


<H4><HR COLOR=#0000FF><A NAME="dxmref_000107015b020200">nth</A></H4>
<A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr Class</A>
<P>Selects a <A HREF="DA_E0122.htm" TARGET="TEXT">Behavior</A> object based on the value of <I>i</I>.

<P><B>public</B> <B>Behavior</B> <B>nth</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>i</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>i</I>
 </DT><DD>The index into the <A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr</A> object. Note that this is <B>not</B> a time-varying index.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="dxmref_000107015b020300">newUninit</A></H4>
<A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr Class</A>
<P>Allows you to refer to an <A HREF="DA_E0207.htm" TARGET="TEXT">Transform3Bvr</A> behavior before that behavior has been defined. With this method you can create the behavior and use it in the definition of other behaviors, but not actually define its contents until some later point. (This is accomplished with the <A HREF="DA_E0122.htm#dxmref_0001070106010800" TARGET="TEXT">init</A> method, which is available on all behaviors.) The system generates a run-time error if you initialize a non-uninitialized behavior, initialize an uninitialized behavior that has already been initialized, or run an initialized behavior that has not yet been initialized.

<P><B>public</B> <B>static</B> <B>TupleBvr</B> <B>newUninitBvr</B><B>(</B><BR>&nbsp;&nbsp;<B>TupleBvr</B> <I>tuple</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tuple</I>
 </DT><DD>Used to establish the type the tuple holds.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr</A> object.


<H3><A NAME="dxmref_000107015b030000">Relevant Methods from the Statics Class</A></H3>
<P>The following methods are defined in the <A HREF="DA_E0157.htm" TARGET="TEXT">Statics</A> and are most relevant to objects of type <A HREF="DA_E0207.htm" TARGET="TEXT">TupleBvr</A>.

<P><A HREF="DA_E0198.htm#dxmref_0001070152000100" TARGET="TEXT">public static TupleBvr pairBvr(Behavior first, Behavior second);</A>
<P><A HREF="DA_E0198.htm#dxmref_0001070152000200" TARGET="TEXT">public static TupleBvr tripleBvr(Behavior first, Behavior second, Behavior third);</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
