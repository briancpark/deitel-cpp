<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Static Methods Relevant to Vector3Bvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0200.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0202.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_0001070155000000">Static Methods Relevant to Vector3Bvr Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000100">add</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional vector behavior. The direction and length of the vector are calculated by adding the corresponding coordinates of the given vectors. 

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>add</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0201.htm#dxmref_0001070155000800" TARGET="TEXT">sub</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000200">bSpline</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> behavior based on a B-spline function. The function depends on the control elements, the knot vector, the mathematical degree, and the weights of the control elements (these are optional).

<P>A B-spline function without weights is piecewise polynomial and with weights is piecewise rational (the quotient of two polynomials). It requires that:
 
<P>numberOfControlElements = numberOfKnots - <I>degree</I> + 1

<P>The control elements define the approximate direction and shape of the function. The knots represent junction values, in parameter space, between the connected polynomial parts. 

<P>Given a degree <I>d</I> and a number of knots <I>k</I>, the function is valid in the range knot<I>d</I> to knot<I>k-d</I>+1, and is otherwise undefined. For example, for a degree 2 curve, the valid range is from the second knot to the next to the last knot, inclusive.

<P>The returned <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> is the traversal of the spline function according to the <I>evaluation</I> parameter. The evaluation parameter is a <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> that must be in the valid range of the spline, which is [knot<I>d</I>, knot<I>k</I>-<I>d</I>+1]. Any values outside this range are automatically clamped to the end values.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>bSpline</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>degree</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>knots</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr[]</B> <I>control_elements</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>weights</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>evaluation</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>degree</I>
 </DT><DD>A number representing the mathematical degree of the B-spline to evaluate. Must be 1, 2, or 3. 
</DD><DT><I>knots</I>
 </DT><DD>An array of <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the knots used to calculate the B-spline. 
</DD><DT><I>control_elements</I>
 </DT><DD>An array of <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> objects representing the control elements used to calculate the B-spline.
</DD><DT><I>weights</I>
 </DT><DD>An array of <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the weights used to calculate the rational B-spline. There must be the same number of weights as control elements. For non-rational B-splines, the value of <I>weights</I> is null.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000300">cross</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a vector behavior that represents the "cross product" of the given vectors. The new vector has a length that is equal to the product of the lengths of the original vectors and the sine of the angle between them. The new vector has a direction that is perpendicular to the plane formed by the original vectors and that obeys the right-hand rule.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>cross</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000400">derivative</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P><P>Creates a new, three-dimensional vector behavior that is the instantaneous derivative (rate of change) of the given vector behavior. For example, a constant vector behavior yields a constant derivative of [0 0 0], and vector3(time, 0, 0) (without any additional time substitutions) yields a constant derivative vector of [1 0 0]. 

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>derivative</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>vec</I>
 </DT><DD>A <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. 


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000500">dot</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a number behavior that represent the "dot product" of the given vectors. The dot product is the product of the lengths of the vectors and the cosine of the angle between them.

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>dot</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD><A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000600">integral</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates an three-dimensional vector that represents the sum of the all values of <I>vec</I> from the given start time to the present. 

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>integral</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. 


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000700">neg</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a new three-dimensional vector behavior that has the same length as the original vector, but points in the opposite direction.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>neg</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v1</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I>
 </DT><DD>A <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object that is the original vector.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000800">sub</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional vector behavior. The direction and length of the vector are calculated by subtracting the coordinates of <I>v2</I> from the corresponding coordinates of <I>v1</I>. 

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>sub</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD><A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0201.htm#dxmref_0001070155000100" TARGET="TEXT">add</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000900">vector3Spherical</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional vector behavior, having a direction and length as specified by the given spherical coordinates.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>vector3Spherical</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>YZangle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>length</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>XYangle</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object of the counter-clockwise XY angle, in radians, of the point about the positive y-axis. The angle begins at the positive z-ray, so that [0 0 1] has a <I>XYangle</I> of 0, and [1 0 0] has a <I>XYangle</I> of pi/2. This parameter can also be of type double.
</DD><DT><I>YZangle</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object of the counter-clockwise elevation angle, in radians, of the point above the XZ-plane. A <I>YZangle</I> of pi/2 means the point is straight up (on the positive y-ray), and a <I>YZangle</I> of -pi/2 is straight down (on the negative y-ray). This parameter can also be of type double. 
</DD><DT><I>length</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying the length of the vector. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. 


<H5>Remarks</H5>
<P>The following table correlates Cartesian coordinates with polar coordinates:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Cartesian</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>XYangle</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>YZangle</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Length
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Coordinates
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[d 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[-d 0 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">-pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> X = Don't Care
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 d 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 -d 0]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">X</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">-pi/2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 d]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">[0 0 -d]</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pi</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">d
</FONT></TD>
</TR>
</TABLE>
<H5>See Also</H5>
<P><A HREF="DA_E0201.htm#dxmref_0001070155000a00" TARGET="TEXT">vector3</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070155000a00">vector3</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional vector behavior, having a direction and length as specified by the given Cartesian coordinates.

<P><B>public</B> <B>static</B> <B>Vector3Bvr</B> <B>vector3</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>y</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>z</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>, <I>y</I>, and <I>z</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects specifying the coordinate values. The <I>x</I> specifies a distance along the x-axis from the origin to a point, <I>y</I> specifies a distance along the y-axis, and <I>z</I> a distance along the z-axis. These parameters can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0201.htm#dxmref_0001070155000900" TARGET="TEXT">vector3Spherical</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
