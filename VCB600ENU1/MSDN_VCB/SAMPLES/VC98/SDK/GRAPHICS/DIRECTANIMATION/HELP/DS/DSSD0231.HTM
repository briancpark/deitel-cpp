<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CMsg Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0230.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0232.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060233000000">CMsg Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/mthrd01.gif" WIDTH="179" HEIGHT="24" ALT="CMsg class hierarchy" >

<P>The <A HREF="dssd0232.htm" TARGET="TEXT">CMsgThread</A> class provides support for a worker thread to which
requests can be posted asynchronously instead of sent directly. The <A HREF="dssd0187.htm" TARGET="TEXT">CAMThread</A> class
provides a worker thread to which single requests can be sent. Only one client can make
a request at a time, and the client blocks until the worker thread has completed
the request. By contrast, the <B>CMsgThread</B> class provides a worker thread to which
any number of requests can be posted. The requests (in the form of a <B>CMsg</B> 
object) are queued and executed in order, asynchronously. No reply or return
value is received.

<A NAME="Lib_0001060233010000"></A><P><B>Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060233010001">dwFlags</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Flag parameter to the request code.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060233010002">lpParam</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Data required by the worker thread as parameter
or return values. This data should not be stack-based, as it will be referenced some
time after completing the queuing operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060233010003">pEvent</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Event object that a worker thread can signal
to indicate the completion of the operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060233010004">uMsg</A></B> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Request code that is defined by the client of the
thread class and understood by the overridden worker thread function.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060233020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0231.htm#Lib_0001060233020100" TARGET="TEXT">CMsg</A> 
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0231.htm" TARGET="TEXT">CMsg</A> object.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060233020100">CMsg::CMsg</A></H3>
<A HREF="dssd0231.htm" TARGET="TEXT">CMsg Class</A>
<P>Constructs a <A HREF="dssd0231.htm" TARGET="TEXT">CMsg</A> object.

<P><B>CMsg</B><B>(</B><BR>&nbsp;&nbsp;<B>UINT</B> <I>u</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dw</I><B>,</B><BR>&nbsp;&nbsp;<B>LPVOID</B> <I>lp</I><B>,</B><BR>&nbsp;&nbsp;<B>CAMEvent</B> <I>*pEvent</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>u</I>
 </DT><DD>Request code, defined by the client of the thread class and understood
by the overridden worker thread function.
</DD><DT><I>dw</I>
 </DT><DD>Flag parameter to the request code.
</DD><DT><I>lp</I>
 </DT><DD>Data required by the worker thread as parameter or return values. This data should
not be stack-based, as it will be referenced some time after completing
the queuing operation.
</DD><DT><I>pEvent</I>
 </DT><DD>Event object that a worker thread can signal to indicate the completion of the operation.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>This member function contains a request for a 
<A HREF="dssd0232.htm" TARGET="TEXT">CMsgThread</A> worker thread to act on. All the parameters are passed to the
worker thread function as parameters when this message gets processed. The
meanings of the parameters are defined by the client function that calls
the worker thread and the derived class that supplies the worker thread's
execution function.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
