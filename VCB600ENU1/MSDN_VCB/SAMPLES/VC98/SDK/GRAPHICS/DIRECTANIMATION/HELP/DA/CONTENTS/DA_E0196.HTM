<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Static Methods Relevant to Transform3Bvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0195.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0197.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_0001070150000000">Static Methods Relevant to Transform3Bvr Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000100">compose</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that is a composition of the given transformation behaviors.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>compose</B><B>(</B><BR>&nbsp;&nbsp;<B>Transform3Bvr</B> <I>xf1</I><B>,</B><BR>&nbsp;&nbsp;<B>Transform3Bvr</B> <I>xf2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>xf1</I> and <I>xf2</I>
 </DT><DD>The <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>Composing a transform is equivalent to first applying xf2 and then applying xf1. In other words:
<PRE><FONT FACE="Courier" SIZE="2">
geo.transform(compose(xf1, xf2) == geo.transform(xf2).transform(xf1)
</FONT></PRE>
<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000200">compose3Array</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that is a composition of the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> objects in the array.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>compose3Array</B><B>(</B><BR>&nbsp;&nbsp;<B>Transform3Bvr[]</B> <I>xforms</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>xf1</I> and <I>xf2</I>
 </DT><DD>The <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>Composing a transform is equivalent to first applying xfn, then applying xfn-1, and so on.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000300">lookAtFrom</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that transforms an object from a standard position and orientation to the "from" point, and aimed at the "to" point, with "up" mapping to the object's up direction. Prior to this transform, objects must be located at the origin, with the up side aligned with positive y, and aimed in the negative z-direction.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>lookAtFrom</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>from</I><B>,</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>to</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>up</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>from</I>
 </DT><DD>The <A HREF="DA_E0153.htm" TARGET="TEXT">Point3Bvr</A> object specifying the point from which to view.
</DD><DT><I>to</I>
 </DT><DD>The <A HREF="DA_E0153.htm" TARGET="TEXT">Point3Bvr</A> object specifying the point toward which to view.
</DD><DT><I>up</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Point3Bvr</A> object specifying the point determining the upright position.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>This transform is useful for positioning and orienting cameras, lights, microphones, and other three-dimensional objects.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000400">rotate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point or vector behavior, rotates the point or vector by the given angle (expressed in radians) around the given axis.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>rotate</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>axis</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>radians</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>axis</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object representing the axis around which to rotate. The plane of rotation is perpendicular to the ray defined by this vector.
</DD><DT><I>radians</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the angle of rotation. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P> Rotations obey the right-hand rule. This means that, when looking down the axis vector, they are counter-clockwise.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000500">rotateDegrees</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point or vector behavior, rotates the point or vector by the given angle (expressed in degrees) around the given axis.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>rotateDegrees</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>axis</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>degrees</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>axis</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object representing the axis around which to rotate. The plane of rotation is perpendicular to the ray defined by this vector.
</DD><DT><I>degrees</I>
 </DT><DD>The double representing the angle of rotation (expressed in degrees).
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P> Rotations obey the right-hand rule. This means that, when looking down the axis vector, they are counter-clockwise.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000600">rotateRate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point or vector behavior, rotates the point or vector by the given angle (expressed in radians) around the given axis. The rotation rate is determined by multiplying the angle by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>rotateRate</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>axis</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>radians</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>axis</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object representing the axis around which to rotate. The plane of rotation is perpendicular to the ray defined by this vector.
</DD><DT><I>radians</I>
 </DT><DD>The double representing the angle of rotation, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is radians/second.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P> Rotations obey the right-hand rule. This means that, when looking down the axis vector, they are counter-clockwise.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000700">rotateRateDegrees</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point or vector behavior, rotates the point or vector by the given angle (expressed in degrees) around the given axis. The rotation rate is determined by multiplying the angle by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>rotateRateDegrees</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>axis</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>degrees</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>axis</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object representing the axis around which to rotate. The plane of rotation is perpendicular to the ray defined by this vector.
</DD><DT><I>degrees</I>
 </DT><DD>The double representing the angle of rotation (expressed in degrees) multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is degrees/second.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P> Rotations obey the right-hand rule. This means that, when looking down the axis vector, they are counter-clockwise.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000800">scale</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a three-dimensional object, scales it. For example, the transformation modifies the length of a vector by multiplying the vector's coordinates by the values of the corresponding number behaviors. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>scale</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>sx</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>sy</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>sz</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>sx</I>, <I>sy</I>, and <I>sz</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the amounts to scale. The value of <I>sx</I> applies to the <I>x</I> coordinate, <I>sy</I> to the <I>y</I> coordinate, and <I>sz</I> to the <I>z</I> coordinate. These parameters can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000900">scale</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a three-dimensional object, scales it. For example, the transformation modifies the location of a point by multiplying the point's coordinates by the values of the corresponding vector coordinates.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>scale</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. The <I>x</I>, <I>y</I>, and <I>z</I> coordinates of the vector behavior specify the amounts to scale the <I>x</I>, <I>y</I>, and <I>z</I> coordinates, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000a00">scaleRate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a three-dimensional object, scales it. The scaling rates are determined by multiplying the arguments by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. 

<P><B>public</B> <B>Transform3Bvr</B> <B>scaleRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>y</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>z</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>, <I>y</I>, and <I>z</I>
 </DT><DD>The doubles representing the amounts to scale. The value of <I>x</I> applies to the <I>x</I> coordinate, <I>y</I> to the <I>y</I> coordinate, and <I>z</I> to the <I>z</I> coordinate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000b00">scale3</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a three-dimensional object, scales it uniformly.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>scale3</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>uniformFactor</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>uniformFactor</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the value to apply to the <I>x</I>, <I>y</I>, and <I>z</I> coordinates, respectively. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150000800" TARGET="TEXT">scale</A>, <A HREF="DA_E0196.htm#dxmref_0001070150000900" TARGET="TEXT">scale</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000c00">scale3Rate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a three-dimensional object, scales it uniformly. The scaling rate is determined by multiplying the argument by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>.

<P><B>public</B> <B>Transform3Bvr</B> <B>scale3Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>rate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rate</I>
 </DT><DD>The double representing the value to apply to the <I>x</I>, <I>y</I>, and <I>z</I> coordinates, respectively, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is degrees/second.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000d00">transform4x4</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that consists of the 4 by 4 matrix having the values specified by the given number behaviors. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>transform4x4</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>matrix</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>matrix</I>
 </DT><DD>The 4 by 4 matrix. The first row of the matrix can be represented by the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects <I>a00</I>, <I>a01</I>, <I>a02</I>, <I>a03</I>. Use <I>a00</I> to scale the <I>x</I> coordinate and <I>a03</I> to translate <I>x</I>. 
 </DD><DD>The second row of the matrix can be represented by the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects <I>a10</I>, <I>a11</I>, <I>a12</I>, <I>a13</I>. Use <I>a11</I> to scale the <I>y</I> coordinate and <I>a13</I> to translate <I>y</I>. 
 </DD><DD>The third row of the matrix can be represented by the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects <I>a20</I>, <I>a21</I>, <I>a22</I>, <I>a23</I>. Use <I>a22</I> to scale the <I>z</I> coordinate and <I>a23</I> to translate <I>z</I>.
 </DD><DD>The fourth row of the matrix can be represented by the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects <I>a30</I>, <I>a31</I>, <I>a32</I>, <I>a33</I>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>The translation components for the matrix are in the last column. The last row of the matrix must be [0 0 0 1].

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000e00">translate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point behavior, translates (moves) the point by the amounts given by the number behaviors. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>translate</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>tx</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>ty</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>tz</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tx</I>, <I>ty</I>, and <I>tz</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the amounts to translate the point along the <I>x</I>, <I>y</I>, and <I>z</I> axes, respectively. These parameters can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>Vectors are unchanged by translations.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150000f00">translate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional transformation that, when applied to a point, translates (moves) the point to the new location <I>loc</I>.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>translate</B><B>(</B><BR>&nbsp;&nbsp;<B>Point3Bvr</B> <I>loc</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>loc</I>
 </DT><DD>The <A HREF="DA_E0153.htm" TARGET="TEXT">Point3Bvr</A> object specifying the new location.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001000">translate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point behavior, translates (moves) the point by the amounts given by the vector behavior. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>translate</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector3Bvr</B> <I>v</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v</I>
 </DT><DD>The <A HREF="DA_E0210.htm" TARGET="TEXT">Vector3Bvr</A> object. The <I>x</I>, <I>y</I>, and <I>z</I> coordinates of the vector behavior specify the amounts to translate along the <I>x</I>, <I>y</I>, and <I>z</I> axes, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>Vectors are unchanged by translations.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001100">translateRate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a three-dimensional transformation behavior that, when applied to a point behavior, translates (moves) the point by the amounts given by the doubles. The translation rate is determined by multiplying the arguments by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. 

<P><B>public</B> <B>Transform3Bvr</B> <B>translateRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>y</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>z</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I>, <I>y</I>, and <I>z</I>
 </DT><DD>The doubles representing the amounts to translate the point along the <I>x</I>, <I>y</I>, and <I>z</I> axes, respectively.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>Remarks</H5>
<P>Vectors are unchanged by translations.

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001200">xShear</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Shears the x-axis in the positive y-direction by <I>a</I> and in the positive z-direction by <I>b</I>. The X-coordinate remains unchanged, and the Y and Z coordinates increase by the product of the X-coordinate and the shear factors. In other words, X2 = X1, Y2 = Y1 + aX1, and Z2 = Z1 + bX1, where <I>a</I> and <I>b</I> are the shear factors. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>xShear</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the amount of shear in the Y direction. This parameter can also be of type double.
</DD><DT><I>b</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the amount of shear in the Z direction. This parameter can also be of type double. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150001400" TARGET="TEXT">yShear</A>, <A HREF="DA_E0196.htm#dxmref_0001070150001600" TARGET="TEXT">zShear</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001300">xShearRate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Shears the x-axis in the positive y-direction by <I>a</I> and in the positive z-direction by <I>b</I>. The shear rates are determined by multiplying the arguments by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>xShearRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>a</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>b</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The double representing the amount of shear in the Y direction, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is meters/second.
</DD><DT><I>b</I>
 </DT><DD>The double representing the amount of shear in the Z direction, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is meters/second. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150001500" TARGET="TEXT">yShear</A>, <A HREF="DA_E0196.htm#dxmref_0001070150001700" TARGET="TEXT">zShear</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001400">yShear</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Shears the y-axis in the positive x-direction by <I>c</I> and in the positive z-direction by <I>d</I>. The Y-coordinate remains unchanged, and the X and Z coordinates increase by the product of the Y-coordinate and the shear factors. In other words, Y2 = Y1, X2 = X1 + cY1, and Z2 = Z1 + dY1, where <I>c</I> and <I>d</I> are the shear factors. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>yShear</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>c</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>d</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>c</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the amount of shear in the X direction. This parameter can also be of type double.
</DD><DT><I>d</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the amount of shear in the Z direction. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150001200" TARGET="TEXT">xShear</A>, <A HREF="DA_E0196.htm#dxmref_0001070150001600" TARGET="TEXT">zShear</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001500">yShearRate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Shears the y-axis in the positive x-direction by <I>c</I> and in the positive z-direction by <I>d</I>. The shear rates are determined by multiplying the arguments by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>yShearRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>c</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>d</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>c</I>
 </DT><DD>The double representing the amount of shear in the X direction, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is meters/second.
</DD><DT><I>d</I>
 </DT><DD>The double representing the amount of shear in the Z direction, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is meters/second.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150001300" TARGET="TEXT">xShear</A>, <A HREF="DA_E0196.htm#dxmref_0001070150001700" TARGET="TEXT">zShear</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001600">zShear</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Shears the z-axis in the postive x-direction by <I>e</I> and in the positive y-direction by <I>f</I>. The Z-coordinate remains unchanged, and the X and Y coordinates increase by the product of the Z-coordinate and the shear factors. In other words, Z2 = Z1, X2 = X1 + eZ1, and Y2 = Y1 + fZ1, where <I>e</I> and <I>f</I> are the shear factors. 

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>zShear</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>e</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>f</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>e</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the amount of shear in the X direction. This parameter can also be of type double.
</DD><DT><I>f</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object representing the amount of shear in the Y direction. This parameter can also be of type double.

</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150001200" TARGET="TEXT">xShear</A>, <A HREF="DA_E0196.htm#dxmref_0001070150001200" TARGET="TEXT">yShear</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070150001700">zShearRate</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Shears the z-axis in the positive x-direction by <I>e</I> and in the positive y-direction by <I>f</I>. The shear rates are determined by multiplying the arguments by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>.

<P><B>public</B> <B>static</B> <B>Transform3Bvr</B> <B>zShearRate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>e</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>f</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>e</I>
 </DT><DD>The double representing the amount of shear in the X direction, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is meters/second.
</DD><DT><I>f</I>
 </DT><DD>The double representing the amount of shear in the Y direction, multiplied by <A HREF="DA_E0185.htm#dxmref_0001070145000002" TARGET="TEXT">localTime</A>. The unit is meters/second.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0206.htm" TARGET="TEXT">Transform3Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0196.htm#dxmref_0001070150001300" TARGET="TEXT">xShear</A>, <A HREF="DA_E0196.htm#dxmref_0001070150001500" TARGET="TEXT">yShear</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
