<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CBaseFilter Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0193.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0195.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_000106020e000000">CBaseFilter Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/filter01.gif" WIDTH="275" HEIGHT="197" ALT="CBaseFilter class hierarchy" >

<P><B>CBaseFilter</B> is an abstract base class from which all filters are derived. It supports
the Component Object Model (COM) <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface and is derived from the <A HREF="dssd0253.htm" TARGET="TEXT">CUnknown</A> class. This class supports the enumeration of pins by calling the pure virtual member functions <A HREF="dssd0194.htm#Lib_000106020e080600" TARGET="TEXT">CBaseFilter::GetPin</A> and <A HREF="dssd0194.htm#Lib_000106020e080700" TARGET="TEXT">GetPinCount</A>. These member functions must be overridden by any derived class.

<P>The <B>CBaseFilter</B> class assumes that all the filter's pins are derived from the <A HREF="dssd0200.htm" TARGET="TEXT">CBasePin</A>
class. <A HREF="dssd0194.htm#Lib_000106020e080600" TARGET="TEXT">CBaseFilter::GetPin</A> must return a pointer to <B>CBasePin</B>.

<P>All member functions in this class that return <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> and accept a pointer as a 
parameter return E_POINTER when passed a null pointer. 

<A NAME="Lib_000106020e010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010001">m_pName</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Filter name.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010002">m_PinVersion</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Current version of the pins used on the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010003">m_tStart</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Offset from the stream time to the reference time.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010004">m_State</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Current state: running or paused.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010005">m_pClock</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Filter graph's reference clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010006">m_pGraph</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to a graph to which this filter belongs.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010007">m_pLock</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to the critical section used for locking.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010008">m_pSink</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to the <A HREF="dssd0152.htm" TARGET="TEXT">IMediaEventSink</A> interface on the filter graph manager.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_000106020e010009">m_clsid</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Class identifier (CLSID) used for serialization using <A HREF="dssd0389.htm#external_00010a0109000089" TARGET="TEXT">IPersist</A>.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080100" TARGET="TEXT">CBaseFilter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080500" TARGET="TEXT">GetFilterGraph</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the filter graph associated with the filter.
This is used in the implementation of <A HREF="dssd0216.htm" TARGET="TEXT">CEnumPins</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080c00" TARGET="TEXT">IncrementPinVersion</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds 1 to the pin version stored in <A HREF="dssd0194.htm#Lib_000106020e010002" TARGET="TEXT">m_PinVersion</A>.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080d00" TARGET="TEXT">IsActive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines if the filter is currently active (running or paused) or stopped.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081000" TARGET="TEXT">NotifyEvent</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sends an event notification to the filter graph.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080600" TARGET="TEXT">GetPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns a pointer to the requested pin.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080700" TARGET="TEXT">GetPinCount</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the number of pins currently available on this object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080800" TARGET="TEXT">GetPinVersion</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the current version of the base filter for comparison with the version with 
which the pin was initialized. This member function can be overridden if pins 
are being created dynamically. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080900" TARGET="TEXT">GetSetupData</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the registration data associated with the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081800" TARGET="TEXT">StreamTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the current stream time.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e040000"></A><P><B>Implemented IPersist Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080400" TARGET="TEXT">GetClassID</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns the class identifier of this filter.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e050000"></A><P><B>Implemented IMediaFilter Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080a00" TARGET="TEXT">GetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current state of the filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080b00" TARGET="TEXT">GetSyncSource</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current reference clock in use by this filter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081100" TARGET="TEXT">Pause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the filter to transition to State_Paused state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081500" TARGET="TEXT">Run</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the filter to transition to State_Running state.
Passes a time value to synchronize independent streams.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081600" TARGET="TEXT">SetSyncSource</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the filter of the reference clock with which it should synchronize activity.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081700" TARGET="TEXT">Stop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the filter to transition to the State_Stopped state.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e060000"></A><P><B>Implemented IBaseFilter Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080200" TARGET="TEXT">EnumPins</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides an enumerator for this pin's preferred media types (implemented by this class).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080300" TARGET="TEXT">FindPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the pin with the specified identifier.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080e00" TARGET="TEXT">JoinFilterGraph</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Notifies a filter that it has joined a filter graph (implemented by this class).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081200" TARGET="TEXT">QueryFilterInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Gets information about the specified filter (implemented by this class).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081300" TARGET="TEXT">QueryVendorInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves optional information supplied by a vendor for the specified filter. 
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e070000"></A><P><B>Implemented IAMovieSetup Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081400" TARGET="TEXT">Register</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds the filter to the registry.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e081900" TARGET="TEXT">Unregister</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Removes the filter from the registry.
</FONT></TD></TR></TABLE>
<A NAME="Lib_000106020e080000"></A><P><B>Implemented INonDelegatingUnknown Methods</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0194.htm#Lib_000106020e080f00" TARGET="TEXT">NonDelegatingQueryInterface</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Passes out pointers to any interfaces added to the derived filter class.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080100">CBaseFilter::CBaseFilter</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Constructs a <A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> object.

<P><B>CBaseFilter</B><B>(</B><BR>&nbsp;&nbsp;<B>TCHAR</B> <I>*pName</I><B>,</B><BR>&nbsp;&nbsp;<B>LPUNKNOWN</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>CCritSec</B> <I>*pLock</I><B>,</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>clsid</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pName</I>
</DT><DD>Pointer to an object description.
</DD><DT><I>pUnk</I>
</DT><DD><A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface of the delegating object.
</DD><DT><I>pLock</I>
</DT><DD>Pointer to an object that maintains the lock.
</DD><DT><I>clsid</I>
</DT><DD>Class identifier to be used to serialize this filter.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080200">CBaseFilter::EnumPins</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves an <A HREF="dssd0133.htm" TARGET="TEXT">IEnumPins</A> pointer that can be used to enumerate 
all the pins available on this filter.

<P><B>HRESULT</B> <B>EnumPins</B><B>(</B><BR>&nbsp;&nbsp;<B>IEnumPins</B> <B>**</B> <I>ppEnum</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppEnum</I>
</DT><DD>Pointer to the <A HREF="dssd0133.htm" TARGET="TEXT">IEnumPins</A> interface to retrieve.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0116.htm#If_000106011c030100" TARGET="TEXT">IBaseFilter::EnumPins</A> method.
It uses the <A HREF="dssd0216.htm" TARGET="TEXT">CEnumPins</A> object to construct an enumerator and retrieves
the <A HREF="dssd0133.htm" TARGET="TEXT">IEnumPins</A> interface from the <B>CEnumPins</B> object. The
implementation of <A HREF="dssd0216.htm#Lib_0001060224030400" TARGET="TEXT">CEnumPins::Next</A> calls the <A HREF="dssd0194.htm#Lib_000106020e080600" TARGET="TEXT">CBaseFilter::GetPin</A>
member function, which the derived class must provide. The <B>IEnumPins</B>
interface is used by the filter graph manager when adding the filter to the filter graph.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080300">CBaseFilter::FindPin</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the pin with the specified identifier.

<P><B>HRESULT</B> <B>FindPin</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>Id</I><B>,</B><BR>&nbsp;&nbsp;<B>IPin</B> <I>**ppPin</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Id</I>
</DT><DD>Identifier of the pin.
</DD><DT><I>ppPin</I>
</DT><DD>Pointer to the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> interface for this pin after the filter has been restored.
</DD></DL>
<H5>Return Values</H5>
<P>The default implementation by this member function returns S_OK if the pin name
was found or <A HREF="dssd0293.htm#errcodes_0001060a0100003e" TARGET="TEXT">VFW_E_NOT_FOUND</A> otherwise. 

<H5>Remarks</H5>
<P>This member function provides a base class definition of the <A HREF="dssd0116.htm#If_000106011c030200" TARGET="TEXT">IBaseFilter::FindPin</A>
method that, along with the <A HREF="dssd0165.htm#If_000106014d030c00" TARGET="TEXT">IPin::QueryId</A> method, is used to implement
persistent filter graphs. A filter must be able to translate the <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A>
interface pointers to its pins into identifiers that can be saved along
with the configuration of the filter graph. It does this by using the <B>IPin::QueryId</B>
method. It must then be able to convert those identifiers back into <B>IPin</B> interface
pointers when the filter and its connections are restored as part of a persistent
filter graph. This is accomplished using the <B>IBaseFilter::FindPin</B> method.

<P>By default, the base classes use the
pin name in the <A HREF="dssd0200.htm#Lib_0001060214010001" TARGET="TEXT">CBasePin::m_pName</A> data member, so implementing this member
function in your derived filter class is not normally required.

<P>The <I>ppPin</I> parameter is set to NULL if the identifier cannot be matched.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080400">CBaseFilter::GetClassID</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Fills the <I>pClsID</I> parameter with the class identifier of this filter
(from <A HREF="dssd0194.htm#Lib_000106020e010009" TARGET="TEXT">m_clsid</A>).

<P><B>HRESULT</B> <B>GetClassID</B><B>(</B><BR>&nbsp;&nbsp;<B>CLSID</B> <I>*pClsID</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClsID</I>
</DT><DD>Pointer to the class identifier to be filled out.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080500">CBaseFilter::GetFilterGraph</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the filter graph associated with the filter.

<P><B>IFilterGraph</B> <B>*GetFilterGraph</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the value of <A HREF="dssd0194.htm#Lib_000106020e010006" TARGET="TEXT">m_pGraph</A>.

<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080600">CBaseFilter::GetPin</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves a <A HREF="dssd0200.htm" TARGET="TEXT">CBasePin</A> object on the filter.

<P><B>virtual</B> <B>CBasePin</B> <B>*GetPin</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>n</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>n</I>
</DT><DD>Number of the specified pin.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a pointer to the pin specified by the <I>n</I> parameter.


<H5>Remarks</H5>
<P>Override this member function to return a pointer to the <I>n</I>th pin on this filter.
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter</A> adds a reference to it, when necessary, before passing it to
any other object. This member function is called by the base class <A HREF="dssd0216.htm#Lib_0001060224030400" TARGET="TEXT">CEnumPins::Next</A>
member function to retrieve pins for the <A HREF="dssd0133.htm" TARGET="TEXT">IEnumPins</A> interface, which is used by the filter
graph manager.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080700">CBaseFilter::GetPinCount</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the number of supported pins.

<P><B>virtual</B> <B>int</B> <B>GetPinCount</B><B>(</B> <B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns the pin count.


<H5>Remarks</H5>
<P>Override this member function to return the count of pins currently available on this object.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080800">CBaseFilter::GetPinVersion</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the version number of the pin.

<P><B>virtual</B> <B>long</B> <B>GetPinVersion</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>By default, returns the value of <A HREF="dssd0194.htm#Lib_000106020e010002" TARGET="TEXT">m_PinVersion</A>. If overridden, this member function 
should return the pin version number.


<H5>Remarks</H5>
<P>Returns the current version of the filter that matches the version used to 
initialize the pin. The enumerator calling this member function performs the matching.

<P>A filter provides an enumerator to gain access to the input and output pins it keeps. 
Each time a pin enumerator's method is called, the pin enumerator
calls the <B>CBaseFilter::GetPinVersion</B> member function to ensure that the base filter's 
version matches the version with which the pin enumerator was initialized.

<P>A filter class can override <B>CBaseFilter::GetPinVersion</B>
if there is a need to increment the version by changing the available pins
dynamically. Or, it can more easily call 
<A HREF="dssd0194.htm#Lib_000106020e080c00" TARGET="TEXT">IncrementPinVersion</A>.

<P><B>GetPinVersion</B> does not lock the filter because the enumerators
are designed to be separate objects. The derived class's
<B>GetPinVersion</B> will likely have to do some specialized locking with the
part of the object responsible for creating and deleting pins.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080900">CBaseFilter::GetSetupData</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the registration data associated with the filter.

<P><B>virtual</B> <B>LPAMOVIESETUP_FILTER</B> <B>GetSetupData</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns a pointer to an <A HREF="dssd0287.htm#structs_0001060501000500" TARGET="TEXT">AMOVIESETUP_FILTER</A> structure containing registration information for the filter.


<H5>Remarks</H5>
<P>You must override this member function and implement it to return an <A HREF="dssd0287.htm#structs_0001060501000500" TARGET="TEXT">AMOVIESETUP_FILTER</A> structure containing its associated 
<A HREF="dssd0287.htm#structs_0001060501000700" TARGET="TEXT">AMOVIESETUP_PIN</A> and <A HREF="dssd0287.htm#structs_0001060501000600" TARGET="TEXT">AMOVIESETUP_MEDIATYPE</A> structures for pin and media type information. This member function is called from
the <A HREF="dssd0194.htm#Lib_000106020e081400" TARGET="TEXT">CBaseFilter::Register</A> member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080a00">CBaseFilter::GetState</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the current state of the filter.

<P><B>HRESULT</B> <B>GetState</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwMilliSecsTimeout</I><B>,</B><BR>&nbsp;&nbsp;<B>FILTER_STATE</B> <B>*</B> <I>State</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwMilliSecsTimeout</I>
</DT><DD>Duration of the time-out, in milliseconds. 
</DD><DT><I>State</I>
</DT><DD>Holds the returned state of the filter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK. 


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030100" TARGET="TEXT">IMediaFilter::GetState</A> method. 
It returns the value of the <A HREF="dssd0194.htm#Lib_000106020e010004" TARGET="TEXT">m_State</A> data member. Override this member function if the 
state changes in your filter are not synchronous. 
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080b00">CBaseFilter::GetSyncSource</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the current reference clock in use by this filter.

<P><B>HRESULT</B> <B>GetSyncSource</B><B>(</B><BR>&nbsp;&nbsp;<B>IReferenceClock</B> <B>**</B> <I>pClock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClock</I>
</DT><DD>Pointer to a reference clock; will be set to the <A HREF="dssd0170.htm" TARGET="TEXT">IReferenceClock</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030200" TARGET="TEXT">IMediaFilter::GetSyncSource</A> method. 
It returns the value of <A HREF="dssd0194.htm#Lib_000106020e010005" TARGET="TEXT">m_pClock</A> after adding a reference to it. 
Be sure to release the interface by calling the <A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">IUnknown::Release</A> method 
when finished with the pointer.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080c00">CBaseFilter::IncrementPinVersion</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Adds 1 to the version number of the pin.

<P><B>void</B> <B>IncrementPinVersion</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>By default, increments the value of <A HREF="dssd0194.htm#Lib_000106020e010002" TARGET="TEXT">m_PinVersion</A>. 

<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080d00">CBaseFilter::IsActive</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Determines if the filter is currently active (running or paused) or stopped.

<P><B>BOOL</B> <B>IsActive</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns TRUE if the filter is paused or running, or FALSE if the filter is stopped.

<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080e00">CBaseFilter::JoinFilterGraph</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Notifies a filter that it has joined a filter graph.

<P><B>HRESULT</B> <B>JoinFilterGraph</B><B>(</B><BR>&nbsp;&nbsp;<B>IFilterGraph</B> <B>*</B> <I>pGraph</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>pName</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pGraph</I>
</DT><DD>Pointer to the filter graph to join.
</DD><DT><I>pName</I>
</DT><DD>[in, string] Name of the filter being added.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0116.htm#If_000106011c030300" TARGET="TEXT">IBaseFilter::JoinFilterGraph</A> method. It assigns the <I>pGraph</I> filter graph pointer to the <A HREF="dssd0194.htm#Lib_000106020e010006" TARGET="TEXT">m_pGraph</A> data member and obtains the <A HREF="dssd0152.htm" TARGET="TEXT">IMediaEventSink</A> interface from the filter graph manager to allow the filter to post event notifications to the filter graph manager.

<P>The filter should store the <A HREF="dssd0152.htm" TARGET="TEXT">IMediaEventSink</A> interface for later use, because it might need to notify the interface about events, but it should
not increase the reference count on the filter graph manager object. A null pointer indicates that the filter is no longer part of a graph.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e080f00">CBaseFilter::NonDelegatingQueryInterface</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves an interface and increments the reference count.

<P><B>HRESULT</B> <B>NonDelegatingQueryInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <B>**</B> <I>ppv</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>riid</I>
 </DT><DD>Reference identifier.
</DD><DT><I>ppv</I>
 </DT><DD>Pointer to the interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns a pointer to the interface.


<H5>Remarks</H5>
<P>This member function implements the 
<A HREF="dssd0265.htm#fmutil_0001060309000001" TARGET="TEXT">INonDelegatingUnknown::NonDelegatingQueryInterface</A> method and passes out 
references to the <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A>, <A HREF="dssd0153.htm" TARGET="TEXT">IMediaFilter</A>, <A HREF="dssd0389.htm#external_00010a0109000089" TARGET="TEXT">IPersist</A>, 
<A HREF="dssd0104.htm" TARGET="TEXT">IAMovieSetup</A>, and <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interfaces. 
Override this class to return other interfaces on the object in the derived class.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081000">CBaseFilter::NotifyEvent</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Sends an event notification to the filter graph.

<P><B>HRESULT</B> <B>NotifyEvent</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>EventCode</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>EventParam1</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>EventParam2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>EventCode</I>
 </DT><DD>Identifier of the event.
</DD><DT><I>EventParam1</I>
 </DT><DD>First parameter of the event.
</DD><DT><I>EventParam2</I>
 </DT><DD>Second parameter of the event.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if delivered, S_FALSE if the filter graph does not sink
events, or an error otherwise.


<H5>Remarks</H5>
<P>For a list of notification codes and event parameter values, see 
<A HREF="dssd0291.htm#events_0001060801000000" TARGET="TEXT">Event Notification Codes</A>.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081100">CBaseFilter::Pause</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Transitions the filter to State_Paused state if it is not in this state already. 

<P><B>HRESULT</B> <B>Pause</B> <B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value. 


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030300" TARGET="TEXT">IMediaFilter::Pause</A> method. If the filter is in 
State_Stopped state, the <A HREF="dssd0200.htm#Lib_0001060214060100" TARGET="TEXT">CBasePin::Active</A> member function is called for each of the 
filter's pins to which 
it is connected. If this member function succeeds, the filter's <A HREF="dssd0194.htm#Lib_000106020e010004" TARGET="TEXT">m_State</A> member variable
is set to State_Paused. If any pin returns a failure return value from its <A HREF="dssd0200.htm#Lib_0001060214060100" TARGET="TEXT">Active</A> method, 
the function fails and the state is not changed. 

<P>This member function holds the filter's lock.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081200">CBaseFilter::QueryFilterInfo</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves information about the filter.

<P><B>HRESULT</B> <B>QueryFilterInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>FILTER_INFO</B> <B>*</B> <I>pInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pInfo</I>
</DT><DD>Pointer to a <A HREF="dssd0287.htm#structs_0001060501001200" TARGET="TEXT">FILTER_INFO</A> structure to fill in.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0116.htm#If_000106011c030400" TARGET="TEXT">IBaseFilter::QueryFilterInfo</A> method.
It copies the filter's name from <A HREF="dssd0194.htm#Lib_000106020e010001" TARGET="TEXT">m_pName</A>, and copies 
the pointer to the filter
graph interface from <A HREF="dssd0194.htm#Lib_000106020e010006" TARGET="TEXT">m_pGraph</A> into the <A HREF="dssd0287.htm#structs_0001060501001200" TARGET="TEXT">FILTER_INFO</A> structure before
returning.

<P>Note that the <A HREF="dssd0140.htm" TARGET="TEXT">IFilterGraph</A> interface passed out by this member function
is reference counted, and so must be released when the caller has finished 
with it. 

<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081300">CBaseFilter::QueryVendorInfo</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves a vendor information string.

<P><B>HRESULT</B> <B>QueryVendorInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>LPWSTR</B> <B>*</B> <I>pVendorInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pVendorInfo</I>
</DT><DD>Pointer to a string containing vendor information.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value (E_NOTIMPL by default).

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0116.htm#If_000106011c030500" TARGET="TEXT">IBaseFilter::QueryVendorInfo</A> method,
but only to return E_NOTIMPL. Filters that want to expose vendor information must 
override this member function. If implemented in a derived class, callers should free memory 
when they are done using it by calling the Microsoft&#174; Win32&#174; <A HREF="dssd0389.htm#external_00010a0109000011" TARGET="TEXT">CoTaskMemFree</A> function.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081400">CBaseFilter::Register</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Adds the filter to the registry.

<P><B>HRESULT</B> <B>Register</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0104.htm#If_0001060110030100" TARGET="TEXT">IAMovieSetup::Register</A> method and registers the filter, its pins, and the media type associated with the pins. 
It does this by first calling <A HREF="dssd0194.htm#Lib_000106020e080900" TARGET="TEXT">GetSetupData</A> to retrieve the setup data, and then calling the <A HREF="dssd0143.htm#If_0001060137030200" TARGET="TEXT">IFilterMapper::RegisterFilter</A>, <A HREF="dssd0143.htm#If_0001060137030400" TARGET="TEXT">IFilterMapper::RegisterPin</A>, and <A HREF="dssd0143.htm#If_0001060137030500" TARGET="TEXT">IFilterMapper::RegisterPinType</A> methods. 
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081500">CBaseFilter::Run</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Transitions the filter from paused to running state if it is not in this state already. 

<P><B>HRESULT</B> <B>Run</B> <B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStart</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tStart</I>
 </DT><DD>Reference time value corresponding to stream time 0.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value. 


<H5>Remarks</H5>
<P>If the filter is in State_Stopped state, the <A HREF="dssd0194.htm#Lib_000106020e081100" TARGET="TEXT">CBaseFilter::Pause</A> method is called first 
to transition the filter to State_Paused state, which has the effect of activating any of the filter's 
connected pins. If any pin returns a failure return code from its <A HREF="dssd0200.htm#Lib_0001060214060100" TARGET="TEXT">Active</A> method, the 
function fails and the state is not changed. 
If this member function succeeds, the filter's <A HREF="dssd0194.htm#Lib_000106020e010004" TARGET="TEXT">m_State</A> member variable
is set to State_Running. 

<P>This member function holds the filter's lock.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081600">CBaseFilter::SetSyncSource</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Identifies the reference clock to which the filter should synchronize activity.

<P><B>HRESULT</B> <B>SetSyncSource</B> <B>(</B><BR>&nbsp;&nbsp;<B>IReferenceClock</B> <B>*</B> <I>pClock</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pClock</I>
</DT><DD>Pointer to the <A HREF="dssd0170.htm" TARGET="TEXT">IReferenceClock</A> interface.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030500" TARGET="TEXT">IMediaFilter::SetSyncSource</A> method.
It sets the <A HREF="dssd0194.htm#Lib_000106020e010005" TARGET="TEXT">m_pClock</A> data member to the <I>pClock</I> parameter and increments the
reference count on the <A HREF="dssd0170.htm" TARGET="TEXT">IReferenceClock</A> interface passed in. 

<P>This member function is most important to rendering filters and might not apply to other filters.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081700">CBaseFilter::Stop</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Transitions the filter to State_Stopped state if it is not in this state already.

<P><B>HRESULT</B> <B>Stop</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0153.htm#If_0001060141030600" TARGET="TEXT">IMediaFilter::Stop</A> method.
It first calls the <A HREF="dssd0200.htm#Lib_0001060214061700" TARGET="TEXT">CBasePin::Inactive</A> member function on all its pins that have a 
connection, and then sets the filter's <A HREF="dssd0194.htm#Lib_000106020e010004" TARGET="TEXT">m_State</A> member variable to State_Stopped.

<P>This member function holds the filter's lock.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081800">CBaseFilter::StreamTime</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Retrieves the current stream time.

<P><B>virtual</B> <B>HRESULT</B> <B>StreamTime</B><B>(</B><BR>&nbsp;&nbsp;<B>CRefTime&amp;</B> <I>rtStream</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>rtStream</I>
</DT><DD>Current stream time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value, which can include the following values.
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">E_FAIL
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Unable to get time from clock.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">S_OK
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Stream time returned in the <I>rtStream</I> parameter.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0293.htm#errcodes_0001060a0100003b" TARGET="TEXT">VFW_E_NO_CLOCK</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No reference clock is available.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Current stream time is the reference clock time minus the stream time offset.
All samples with time stamps less than or equal to this time should have been presented.
<H3><HR COLOR=#0000FF><A NAME="Lib_000106020e081900">CBaseFilter::Unregister</A></H3>
<A HREF="dssd0194.htm" TARGET="TEXT">CBaseFilter Class</A>
<P>Removes the filter from the registry.

<P><B>HRESULT</B> <B>Unregister</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function implements the <A HREF="dssd0104.htm#If_0001060110030200" TARGET="TEXT">IAMovieSetup::Unregister</A> method and 
calls the <A HREF="dssd0143.htm#If_0001060137030600" TARGET="TEXT">IFilterMapper::UnregisterFilter</A> method to remove the filter from the registry.
This effectively removes the pins and media types as well. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
