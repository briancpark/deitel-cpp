<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IUnknown Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0174.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0176.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060157000000">IUnknown Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IUnknown</B> interface lets clients get pointers to other interfaces on a
given object through the <A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">IUnknown::QueryInterface</A> method, and manage the existence of the
object through the <A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">IUnknown::AddRef</A> and <A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">IUnknown::Release</A> methods. All other
Component Object Model (COM) interfaces are inherited, directly or indirectly, from <B>IUnknown</B>.
Therefore, the three methods in <B>IUnknown</B> are the first entries in the
vtable for every interface.

<P>Note that this interface and its methods are fully described in the COM documentation and are only partially documented here for quick reference.

<A NAME="If_0001060157010000"></A><P><B>When to Implement</B>
<P>You must implement <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> as part of every interface. If you are using C++
multiple inheritance to implement multiple interfaces, the various interfaces can
share one implementation of <B>IUnknown</B>. If you are using nested classes to implement
multiple interfaces, you must implement <B>IUnknown</B> once for each interface you implement.

<P>Note that the <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface is implemented by the <A HREF="dssd0253.htm#Lib_0001060249000000" TARGET="TEXT">CUnknown</A> base
class in the DirectShow&#153; class library and so is inherited by most other classes.

<A NAME="If_0001060157020000"></A><P><B>When to Use</B>
<P>Use <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> methods to switch between interfaces on an object, add references,
and release objects.

<A NAME="If_0001060157030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060157030100">IUnknown::AddRef</A></H3>
<A HREF="dssd0175.htm" TARGET="TEXT">IUnknown Interface</A>
<P>Increments the reference count for the calling interface on an object.
It should be called for every new copy of a pointer to an interface on a given object.

<P><B>ULONG</B> <B>AddRef</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an integer from 1 to <I>n</I>, the value of the new reference count.
This information is meant to be used for diagnostic/testing purposes only,
because, in certain situations, the value might be unstable.


<H3><HR COLOR=#0000FF><A NAME="If_0001060157030200">IUnknown::QueryInterface</A></H3>
<A HREF="dssd0175.htm" TARGET="TEXT">IUnknown Interface</A>
<P>Returns a pointer to a specified interface on a component to which a
client currently holds an interface pointer. This method must use
<A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">IUnknown::AddRef</A> on the pointer it returns.

<P><B>HRESULT</B> <B>QueryInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>iid</I><B>,</B><BR>&nbsp;&nbsp;<B>void</B> <B>**</B> <I>ppvObject</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>iid</I>
 </DT><DD>[in] Specifies the IID of the interface being requested.
</DD><DT><I>ppvObject</I>
 </DT><DD>[out] Receives a pointer to an interface pointer to the object on return.
If the interface specified in <I>iid</I> is not supported
by the object, <I>ppvObject</I> is set to NULL.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if the interface is supported, S_FALSE if not.


<H3><HR COLOR=#0000FF><A NAME="If_0001060157030300">IUnknown::Release</A></H3>
<A HREF="dssd0175.htm" TARGET="TEXT">IUnknown Interface</A>
<P>Decrements the reference count for the calling interface on an object.
If the reference count on the object falls to zero, the object is freed from memory.

<P><B>ULONG</B> <B>Release</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns the resulting value of the reference count, which is used for
diagnostic/testing purposes only. If you need to know that resources have been freed,
use an interface with higher-level semantics.


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
