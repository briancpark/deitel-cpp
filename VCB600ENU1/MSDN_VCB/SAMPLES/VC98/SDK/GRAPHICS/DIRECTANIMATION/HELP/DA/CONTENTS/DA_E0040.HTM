<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>DADrawingSurface Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0039.htm','/DA_E0000.htm','/DA_E0030.htm','/index.htm','/DA_E0041.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="vref_000106010a000000">DADrawingSurface Class</A></H2>
<BR CLEAR=ALL>
<P>The <B>DADrawingSurface</B> class uses a style of drawing that depends on a <I>graphics context</I>. This is in contrast to the other DirectAnimation classes that use a <I>constructive</I> approach. The constructive approach combines primitive data types into a more complex model, in a hierarchical fashion.

<P>The graphics context approach is analagous to the way a pen plotter works, where the pen acts as the mechanical extension of a hand and the plotter acts as a piece of paper. To draw something, the pen is directed to a location on the plotter and then draws the shape. Many people find this approach to be more familiar than hierarchical modeling. For example, to draw the sun in the sky, it may seem more obvious to simply draw a yellow circle exactly where you want it, instead of first drawing a circle, then creating a yellow circle, and then, with a transform, creating yet another yellow circle that is now correctly placed. The difference is in the approach rather than in capabilities.

<P>A <B>DADrawingSurface</B> object maintains a <I>graphics state</I> object for two-dimensional graphics. This state includes attributes such as line style, fill style, border style, font style, and two-dimensional transformations. The drawing commands (such as <A HREF="DA_E0040.htm#vref_000106010a012200" TARGET="TEXT">Oval</A> and <A HREF="DA_E0040.htm#vref_000106010a012b00" TARGET="TEXT">RoundRect</A> are always interpreted in terms of the current state.

<UL><LI><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010000" TARGET="TEXT">DADrawingSurface Subroutines</A>
<LI><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020000" TARGET="TEXT">DADrawingSurface Properties</A>
<LI><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a030000" TARGET="TEXT">Relevant Functions from the DAStatics Class</A>
</UL>
<H3><A NAME="vref_000106010a010000">DADrawingSurface Subroutines</A></H3>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">ArcDegrees</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010200" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">ArcRadians</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010300" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">AutoSizeFillScale</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010400" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">BorderColor</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010500" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">BorderDashStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010600" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">BorderJoinStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010700" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">BorderWidth</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010800" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Clear</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010900" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Crop</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010a00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">CropPoints</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010b00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">DrawPath</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010c00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FillColor</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010d00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FillImage</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010e00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FillPath</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a010f00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FillStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011000" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FillTexture</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FixedFillScale</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011200" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Font</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011300" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">GradientExtent</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011400" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">GradientExtentPoints</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011500" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">GradientRolloffPowerAnim</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011600" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">GradientRolloffPower</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011700" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">GradientShape</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011800" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">HorizontalFillScale</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011900" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Line</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011a00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LineColor</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011b00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LineDashStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011c00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LineEndStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011d00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LineJoinStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011e00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LinePoints</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a011f00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LineWidth</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012000" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">OpacityAnim</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Opacity</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012200" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Oval</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012300" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">OverlayImage</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012400" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">PieDegrees</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012500" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">PieRadians</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012600" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Polygon</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012700" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Polyline</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012800" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Rect</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012900" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Reset</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012a00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">RestoreGraphicsState</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012b00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">RoundRect</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012c00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">SaveGraphicsState</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012d00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">SecondaryFillColor</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012e00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Text</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a012f00" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">TextPoint</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a013000" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Transform</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a013100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">VerticalFillScale</A><BR>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010100">ArcDegrees</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws a portion of an oval. (This is, in effect, an arc). 

<P>The following example, in VBScript, draws a series of differently-sized arcs:

<PRE><FONT FACE="Courier" SIZE="2">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Demonstration of ArcDegrees subroutine&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;DIV ID=controlDiv&gt;
&lt;OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:10;width:450;height:450"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D"&gt;
&lt;/OBJECT&gt;
&lt;/DIV&gt;

&lt;/DIV&gt;

&lt;SCRIPT LANGUAGE="VBScript"&gt;

sub window_onLoad 

  Set s = DAViewer.MeterLibrary
  Set ds = s.NewDrawingSurface()

  ds.Text "Degrees 0", -.04, .06
  ds.ArcDegrees 0, .05, 0, 0, .01, .01
  
  ds.Text "Degrees 45", -.04, .04
  ds.ArcDegrees 0, .03, 0, 45, .01, .01

  ds.Text "Degrees 90", -.04, .02
  ds.ArcDegrees 0, .01, 0, 90, .01, .01

  ds.Text "Degrees 180", -.04, 0
  ds.ArcDegrees 0, -.01, 0, 180, .01, .01

  ds.Text "Degrees 270", -.04, -.02
  ds.ArcDegrees 0, -.03, 0, 270, .01, .01

  ds.Text "Degrees 360", -.04, -.04
  ds.ArcDegrees 0, -.05, 0, 360, .01, .01

  DAViewer.Image = ds.Image
  DAViewer.Start

end sub

&lt;/SCRIPT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;

</FONT></PRE>
<P><B>drawingObj.ArcDegrees</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xPos</I>
 </DT><DD>The x-coordinate of the lower-lefthand corner of the oval's bounding box.
</DD><DT><I>yPos</I>
 </DT><DD>The y-coordinate of the lower-lefthand corner of the oval's bounding box.
</DD><DT><I>startAngle</I>
 </DT><DD>The angle, in degrees, where the arc begins.
</DD><DT><I>endAngle</I>
 </DT><DD>The angle, in degrees, where the arc ends.
</DD><DT><I>arcWidth</I>
 </DT><DD>The arc width, in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD><DT><I>arcHeight</I>
 </DT><DD>The arc height, in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010200">ArcRadians</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a010100" TARGET="TEXT">ArcDegrees</A> except that <I>startAngle</I> and <I>endAngle</I> are expessed in radians.

<P><B>drawingObj.ArcRadians</B><B>(</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a010300">AutoSizeFillScale</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Scales the fill pattern horizontally and vertically to fit the drawn object's bounding box.

<P><B>drawingObj.AutoSizeFillScale</B><B>(</B> <B>)</B><BR><H5>Remarks</H5>
<P>There is no guarantee that the entire fill style will appear in drawn object because many fill regions are not rectangular.

<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010400">BorderColor</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies the color of a filled region's outline (border).

<P><B>drawingObj.BorderColor</B><B>(</B><BR>&nbsp;&nbsp;<I>color</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>color</I>
 </DT><DD>The <A HREF="DA_E0038.htm" TARGET="TEXT">DAColor</A> object that is the color of the border.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010500">BorderDashStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the dash style of the border. 

<P><B>drawingObj.BorderDashStyle</B><B>(</B><BR>&nbsp;&nbsp;<I>id</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>id</I>
 </DT><DD>A number (a long) that sets the dash style of the border. For a table listing the available choices, see <A HREF="DA_E0040.htm#vref_000106010a011b00" TARGET="TEXT">LineDashStyle</A>. 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010600">BorderJoinStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies the border's join style. 

<P><B>drawingObj.BorderJoinStyle</B><B>(</B><BR>&nbsp;&nbsp;<I>id</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>id</I>
 </DT><DD>A <A HREF="DA_E0049.htm" TARGET="TEXT">DAJoinStyle</A>. 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010700">BorderWidth</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the width of the border, in points. Border widths are affected by <A HREF="DA_E0040.htm#vref_000106010a013000" TARGET="TEXT">Transform</A>. For example, scaling by 2 will double the border width.

<P>The following example demonstrates different border widths, using JScript:

<PRE><FONT FACE="Courier" SIZE="2">
&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Demonstration of BorderWidth Subroutine&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;DIV ID=controlDiv&gt;
&lt;OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:10;width:450;height:450"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D"&gt;
&lt;/OBJECT&gt;
&lt;/DIV&gt;

&lt;/DIV&gt;

&lt;SCRIPT LANGUAGE="JScript" for="window" event="onload"&gt;
  s  = DAViewer.MeterLibrary;
  ds = s.NewDrawingSurface();

  ds.BorderWidth(1);
  ds.Rect(0, .05, .06, .01);
  
  ds.BorderWidth(2);
  ds.Rect(0, .03, .06, .01);

  ds.BorderWidth(3);
  ds.Rect(0, .01, .06, .01);
  
  ds.BorderWidth(4);
  ds.Rect(0, -.01, .06, .01);

  ds.BorderWidth(5);
  ds.Rect(0, -.03, .06, .01);
  
  DAViewer.Image = ds.Image;
  DAViewer.Start();

&lt;/SCRIPT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;

</FONT></PRE>
<P><B>drawingObj.BorderWidth</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>A number (a double) that is the border width. The units are in points.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010800">Clear</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Resets both the global images (<A HREF="DA_E0040.htm#vref_000106010a020500" TARGET="TEXT">Image</A>) and the local context images (<A HREF="DA_E0040.htm#vref_000106010a020700" TARGET="TEXT">LocalContextImage</A>). All attributes for the local context images are set to their defaults.

<P><B>drawingObj.Clear</B><B>(</B> <B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a010900">Crop</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets a rectangular cropping region outside of which drawing commands have no effect. Note that, unlike the <B>DAImage</B> <A HREF="DA_E0045.htm#vref_000106010f010400" TARGET="TEXT">Crop()</A> function, this subroutine affects what will be drawn, not what has been drawn.

<P><B>drawingObj.Crop</B><B>(</B><BR>&nbsp;&nbsp;<I>minX</I><B>,</B><BR>&nbsp;&nbsp;<I>minY</I><B>,</B><BR>&nbsp;&nbsp;<I>maxX</I><B>,</B><BR>&nbsp;&nbsp;<I>maxY</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>minX</I>
 </DT><DD>The number (a double) specifying the minimum x-coordinate of the rectangular cropping region.
</DD><DT><I>minY</I>
 </DT><DD>The number (a double) specifying the minimum y-coordinate of the rectangular cropping region.
</DD><DT><I>maxX</I>
 </DT><DD>The number (a double) specifying the maximum x-coordinate of the rectangular cropping region.
</DD><DT><I>maxY</I>
 </DT><DD>The number (a double) specifying the maximum y-coordinate of the rectangular cropping region.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010a00">CropPoints</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a010900" TARGET="TEXT">Crop</A> except that the arguments are specified as <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> objects.

<P><B>drawingObj.CropPoints</B><B>(</B><BR>&nbsp;&nbsp;<I>min</I><B>,</B><BR>&nbsp;&nbsp;<I>max</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>min</I>
 </DT><DD>The <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> object specifying the minimum point of the cropping region. 
</DD><DT><I>max</I>
 </DT><DD>The <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> object specifying the maximum point of the cropping region. 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010b00">DrawPath</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a012700" TARGET="TEXT">Polyline</A>, except that it takes a <A HREF="DA_E0056.htm" TARGET="TEXT">DAPath2</A> object instead of points.

<P><B>drawingObj.DrawPath</B><B>(</B><BR>&nbsp;&nbsp;<I>path</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>path</I>
 </DT><DD>The <A HREF="DA_E0056.htm" TARGET="TEXT">DAPath2</A> object defining the line.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010c00">FillColor</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>If used with a gradient fill, specifies the starting color. If used with a hatched fill, specifies its color. It is ignored for solid fills. The default <I>foreground</I> color is black. 

<P><B>drawingObj.FillColor</B><B>(</B><BR>&nbsp;&nbsp;<I>foreground</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>foreground</I>
 </DT><DD>The <A HREF="DA_E0038.htm" TARGET="TEXT">DAColor</A> object that is the foreground color.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010d00">FillImage</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Creates a fill pattern that is an image. This subroutine allows you to create your own fill pattern from any type of two-dimensional animation. The default is to scale the image to fit the window. If the mode is set to <A HREF="DA_E0040.htm#vref_000106010a011100" TARGET="TEXT">FixedFillScale</A> and the image is transformed before being passed in, it will retain its position relative to the shape. 

<P><B>drawingObj.FillImage</B><B>(</B><BR>&nbsp;&nbsp;<I>image</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>img</I>
 </DT><DD>The <A HREF="DA_E0045.htm" TARGET="TEXT">DAImage</A> object to be used as the fill.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010e00">FillPath</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a012600" TARGET="TEXT">Polygon</A> except that it takes a <A HREF="DA_E0056.htm" TARGET="TEXT">DAPath2</A> object rather than points.

<P><B>drawingObj.FillPath</B><B>(</B><BR>&nbsp;&nbsp;<I>path</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>path</I>
 </DT><DD>The <A HREF="DA_E0056.htm" TARGET="TEXT">DAPath2</A> object defining the polygon.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a010f00">FillStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the fill style. The parameter specifying the fill style, <I>id</I>, can be any of the following possible styles:

<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Id</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Style
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Empty (does not support mouse events)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Solid
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Empty Pickable (supports mouse events)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">3</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HatchHorizonal
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">4</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HatchVertical
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">5</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HatchForwardVertical
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">6</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HatchBackwardDiagonal
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">7</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HatchCross
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">8</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HatchDiagonalCross
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">9</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HorizontalGradient
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">10</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">VerticalGradient
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">11</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">RadialGradient
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">12</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">LinearGradient
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">13</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">RectangularGradient
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">14</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">ShapeGradient
</FONT></TD>
</TR>
</TABLE>
<P>Fill styles are used to paint closed regions. The default fill type is the solid fill. Some uses of particular fill styles are:

<UL><LI>Empty fill styles are transparent and are used for making hollow objects and hotspots.
<LI>Solid fill styles give a uniform color throughout the selected area.
<LI>Hatched fill styles give a characteristic line pattern on top of either a transparent or a solid-color background.
<LI>Texture fill styles underlay the fill region with 2-D media such as a movie or still image.
<LI>Gradient fill styles blend between two or more colors in a smooth transition.
</UL>
<P>Fill colors are used in three ways. For gradient fills, the fill color is the first color used for blending. For hatched fills, it is the color used to draw the hatch marks. For solid fills, it is the color used for the entire filled area. It does not apply to empty and texture fill styles. The default color is black.

<P>A secondary (or background) fill color is possible and is also used in several ways. For gradient fills, it specifies the second color used for blending. For hatch fills, it is the color used to fill around the hatch marks. For empty fills, it is always transparent. Solid fills have no secondary color. The default secondary color depends on the fill type. For solid and gradient fills, the default background color is white. For hatched fills, the default background color is transparent.

<P>Gradient and texture fills can either be scaled to fit the shape being filled or can use their own scaling information. This is called a size-to-fit option. It does not apply to empty, solid, or hatched fill styles.

<P>Scale-to-fit uses rectangular bounding regions to scale the fill style into the region to be filled. Thus, scale-to-fit does not guarantee that the entire fill style will appear in the shape, because many fill regions are not rectangular. Gradient fills in which no interpolation coordinates are specified use scale-to-fit by default. Gradient fills with explicit coordinates as well as all texture fills use, by default, their local coordinates and are not scaled to fit the drawing region. For particular scale-to-fit subroutines, see <A HREF="DA_E0040.htm#vref_000106010a010300" TARGET="TEXT">AutoSizeFillScale</A>, <A HREF="DA_E0040.htm#vref_000106010a011100" TARGET="TEXT">FixedFillScale</A>, <A HREF="DA_E0040.htm#vref_000106010a011800" TARGET="TEXT">HorizontalFillScale</A>, and <A HREF="DA_E0040.htm#vref_000106010a013100" TARGET="TEXT">VerticalFillScale</A>. 

<P>For gradient fills, it can be useful to explicitly set the starting and ending positions for the transition between the colors. For example, with a radial gradient, (which is a color transition in a circular shape) it may be useful to set the center point. To set these points, use the <A HREF="DA_E0040.htm#vref_000106010a011300" TARGET="TEXT">GradientExtent</A> subroutine.

<P>The <A HREF="DA_E0040.htm#vref_000106010a011600" TARGET="TEXT">GradientRolloffPower</A> subroutine uses an exponent (the <I>power</I> argument) to control how rapidly one color transitions into another. A value of 1 is a linear transition. For 0 &lt; <I>power</I> &lt; 1 the transition occurs rapidly, while <I>power</I> &gt; 1 means that the transition occurs more slowly. For example, if you are transitioning from red to blue, and <I>power</I> = 2, you will see a great deal of red in the gradient fill. On the other hand, if <I>power</I> = 0.5 (the inverse of 2), you will see very little red. If <I>power</I> = 0, you will see only blue.

<P>More precisely, if x is considered the normalized distance (from 0 to 1), then the gradient is x<SUP>p</SUP>, where p is in the range [0, infinity].

<P>The following table summarizes the default values of the different fill attributes (such as color) for each fill style:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Default</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Empty</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Empty/Pickable</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Solid</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Hatched</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Gradient</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Texture</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Image
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Fill Color</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Black</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Black</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Black</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Secondary</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Transparent</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">White</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Mouse Events?</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Always No</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Always Yes</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Size-to-fit</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Yes, if no start point, No, if start point specified</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Always No</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Gradient End Points</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">No Default</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Rolloff Power</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">N/A
</FONT></TD>
</TR>
</TABLE>
<P><B>drawingObj.FillStyle</B><B>(</B><BR>&nbsp;&nbsp;<I>id</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>id</I>
 </DT><DD>The id (a long) of the fillstyle.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011000">FillTexture</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies a fill image that will be tiled (according to its bounding box) and/or clipped to fit within the extents of the path. It is not scaled. If the image is transformed before being passed in, it will retain its position relative to the shape. 

<P><B>drawingObj.FillTexture</B><B>(</B><BR>&nbsp;&nbsp;<I>image</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>image</I>
 </DT><DD>The <A HREF="DA_E0045.htm" TARGET="TEXT">DAImage</A> used as the fill.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011100">FixedFillScale</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies that the fill pattern will not be be scaled. The fill style attributes are applied directly to the drawn object, regardless of size.

<P><B>drawingObj.FixedFillScale</B><B>(</B> <B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a011200">Font</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the font attributes.

<P><B>drawingObj.Font</B><B>(</B><BR>&nbsp;&nbsp;<I>face</I><B>,</B><BR>&nbsp;&nbsp;<I>size</I><B>,</B><BR>&nbsp;&nbsp;<I>bold</I><B>,</B><BR>&nbsp;&nbsp;<I>italic</I><B>,</B><BR>&nbsp;&nbsp;<I>underline</I><B>,</B><BR>&nbsp;&nbsp;<I>strikethrough</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>face</I>
 </DT><DD> The name of the font family (this is a string).
</DD><DT><I>size</I>
 </DT><DD>The size of the font, in points.
</DD><DT><I>bold</I>
 </DT><DD>A boolean that turns the bold attribute on or off.
</DD><DT><I>italic</I>
 </DT><DD>A boolean that turns the italic attribute on or off.
</DD><DT><I>underline</I>
 </DT><DD>A boolean that turns the underline attribute on or off.
</DD><DT><I>strikethrough</I>
 </DT><DD>A boolean that turns the strikethrough attribute on or off.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011300">GradientExtent</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies a length and a direction for a gradient to transition between colors. The starting color is unblended, as is the ending color. Between the points, the colors are blended according to the gradient type.

<P><B>drawingObj.GradientExtent</B><B>(</B><BR>&nbsp;&nbsp;<I>startX</I><B>,</B><BR>&nbsp;&nbsp;<I>startY</I><B>,</B><BR>&nbsp;&nbsp;<I>endX</I><B>,</B><BR>&nbsp;&nbsp;<I>endY</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startX</I>
 </DT><DD>The starting x-coordinate(a double).
</DD><DT><I>startY</I>
 </DT><DD>The starting y-coordinate (a double).
</DD><DT><I>endX</I>
 </DT><DD>The ending x-coordinate (a double).
</DD><DT><I>endY</I>
 </DT><DD>The ending y-coordinate (a double).
</DD></DL>
<H5>See Also</H5>
<P><A HREF="DA_E0040.htm#vref_000106010a010f00" TARGET="TEXT">FillStyle</A>

<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011400">GradientExtentPoints</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a011300" TARGET="TEXT">GradientExtent</A> except that the arguments are <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> objects.

<P><B>drawingObj.GradientExtentPoints</B><B>(</B><BR>&nbsp;&nbsp;<I>startPoint</I><B>,</B><BR>&nbsp;&nbsp;<I>endPoint</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startPoint</I>
 </DT><DD>The <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> object that specifies the location of the starting color. 
</DD><DT><I>endPoint</I>
 </DT><DD>The <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> object that specifies the location of the ending color. 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011500">GradientRolloffPowerAnim</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Controls the sharpness of the transition between the colors.

<P><B>drawingObj.GradientRolloffPowerAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>power</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>power</I>
 </DT><DD>A number (a double) that is an exponent controlling how rapidly one color transitions into another. A value of 1 is a linear transition. For 0 &lt; <I>power</I> &lt; 1 the transition occurs rapidly, while <I>power</I> &gt; 1 means that the transition occurs more slowly. For example, if you are transitioning from red to blue, and <I>power</I> = 2, you will see a great deal of red in the gradient fill. On the other hand, if <I>power</I> = 0.5 (the inverse of 2), you will see very little red. If <I>power</I> = 0, you will see only blue. More precisely, if x is considered the normalized distance (from 0 to 1), then the gradient is x<SUP>p</SUP>, where p is in the range [0, infinity].
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011600">GradientRolloffPower</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a011500" TARGET="TEXT">GradientRolloffPowerAnim</A> except that <I>power</I> is a non-animated number (a double).

<P><B>drawingObj.GradientRolloffPower</B><B>(</B><BR>&nbsp;&nbsp;<I>power</I><BR>&nbsp;&nbsp;<B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a011700">GradientShape</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies a polygon that is progressively scaled to control the shape of the color transition. This applies only if the <A HREF="DA_E0040.htm#vref_000106010a010f00" TARGET="TEXT">FillStyle</A> subroutine was invoked with an <I>id</I> of 14 (ShapeGradient). 

<P><B>drawingObj.GradientShape</B><B>(</B><BR>&nbsp;&nbsp;<I>pts</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pts</I>
 </DT><DD>The array (variant) of points specifying the polygon.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011800">HorizontalFillScale</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Stretches or compresses the fill pattern horizontally to match the width of the drawn object's bounding box. 

<P><B>drawingObj.HorizontalFillScale</B><B>(</B> <B>)</B><BR><H5>Remarks</H5>
<P>There is no guarantee that the entire fill style will appear in drawn object because many fill regions are not rectangular.

<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011900">Line</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws a line segment from the starting point to the ending point, using the current <A HREF="DA_E0040.htm#vref_000106010a011b00" TARGET="TEXT">LineDashStyle</A>.

<P><B>drawingObj.Line</B><B>(</B><BR>&nbsp;&nbsp;<I>startX</I><B>,</B><BR>&nbsp;&nbsp;<I>startY</I><B>,</B><BR>&nbsp;&nbsp;<I>endX</I><B>,</B><BR>&nbsp;&nbsp;<I>endY</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>startX</I>
 </DT><DD>The starting point's x-coordinate (a double).
</DD><DT><I>startY</I>
 </DT><DD>The starting point's y-coordinate (a double).
</DD><DT><I>endX</I>
 </DT><DD>The ending point's x-coordinate (a double).
</DD><DT><I>endY</I>
 </DT><DD>The ending point's y-coordinate (a double).
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011a00">LineColor</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the color of the line.

<P><B>drawingObj.LineColor</B><B>(</B><BR>&nbsp;&nbsp;<I>col</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>col</I>
 </DT><DD>The <A HREF="DA_E0038.htm" TARGET="TEXT">DAColor</A> object that sets the line color.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011b00">LineDashStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the dash style of the line. The parameter specifying the dash style, <I>id</I>, can be any of the following possible styles:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>ID</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Dash Style
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Null
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Solid
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Dash
</FONT></TD>
</TR>
</TABLE>
<P><B>drawingObj.LineDashStyle</B><B>(</B><BR>&nbsp;&nbsp;<I>id</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>id</I>
 </DT><DD>The id (a long) of the selected dash style.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011c00">LineEndStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the end style of the line. The parameter specifying the end style, <I>id</I>, can be any of the following possible styles:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>ID</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>End Style
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Flat
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Square
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Round
</FONT></TD>
</TR>
</TABLE>
<P><B>drawingObj.LineEndStyle</B><B>(</B><BR>&nbsp;&nbsp;<I>id</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>id</I>
 </DT><DD>The number (a long) specifying which end style to use.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011d00">LineJoinStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the join style of the line. The parameter specifying the join style, <I>id</I>, can be any of the following possible styles:

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>ID</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Join Style
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Bevel
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Round
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">2</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Miter
</FONT></TD>
</TR>
</TABLE>
<P><B>drawingObj.LineJoinStyle</B><B>(</B><BR>&nbsp;&nbsp;<I>id</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>id</I>
 </DT><DD>The id (a long) of the selected join style.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011e00">LinePoints</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a011900" TARGET="TEXT">Line</A> except that the arguments are <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> objects (they can be animated).

<P><B>drawingObj.LinePoints</B><B>(</B><BR>&nbsp;&nbsp;<I>pt1</I><B>,</B><BR>&nbsp;&nbsp;<I>pt2</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>pt1 and pt2</I>
 </DT><DD>The <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> objects specifying the line's starting and ending points. 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a011f00">LineWidth</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the width of the current line, in points. Line widths are affected by <A HREF="DA_E0040.htm#vref_000106010a013000" TARGET="TEXT">Transform</A>. For example, scaling by 2 will double the line width.

<P><B>drawingObj.LineWidth</B><B>(</B><BR>&nbsp;&nbsp;<I>width</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>width</I>
 </DT><DD>The width of the current line, in points.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012000">OpacityAnim</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Sets the opacity used by drawing commands. In contrast to the <B>DAImage</B> <A HREF="DA_E0045.htm#vref_000106010f010700" TARGET="TEXT">Opacity</A> function, this subroutine affects what will be drawn rather than what has been drawn.

<P><B>drawingObj.OpacityAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>opac</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>opac</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that sets the opacity. Values can range from 0.0 (fully transparent) to 1.0 (fully opaque). This must be an animated number.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012100">Opacity</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a012000" TARGET="TEXT">OpacityAnim</A> except that <I>opac</I> is a non-animated number (a double). 

<P><B>drawingObj.Opacity</B><B>(</B><BR>&nbsp;&nbsp;<I>opac</I><BR>&nbsp;&nbsp;<B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a012200">Oval</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws an outline of an oval and fills it, using the current fill and border styles.

<P>The following example uses VBScript to draw an oval with a hatch cross fill style:

<PRE><FONT FACE="Courier" SIZE="2">

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Oval with Hatch Cross Fill Style&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;DIV ID=controlDiv&gt;
&lt;OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:10;width:450;height:450"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D"&gt;
&lt;/OBJECT&gt;
&lt;/DIV&gt;

&lt;/DIV&gt;

&lt;SCRIPT LANGUAGE="VBScript"&gt;

sub window_onLoad 

  Set s = DAViewer.MeterLibrary
  Set ds = s.NewDrawingSurface()

  ds.FillColor          s.ColorRgb255(0,0,200)
  ds.SecondaryFillColor s.ColorRgb255(255,0,0)

  ds.Text "Hatch Cross", -.04, .06
  ds.FillStyle 7
  ds.Oval -.04, -.04, .1, .1
  
  DAViewer.Image = ds.Image
  DAViewer.Start

end sub

&lt;/SCRIPT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;

</FONT></PRE>
<P><B>drawingObj.Oval</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xPos</I>
 </DT><DD>The x-coordinate (a double) of the lower-lefthand corner of the oval's bounding box.
</DD><DT><I>yPos</I>
 </DT><DD>The y-cooordiate (a double) of the lower-lefthand corner of the oval's bounding box.
</DD><DT><I>width</I>
 </DT><DD>The width of the oval, in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD><DT><I>height</I>
 </DT><DD>The height of the oval, in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012300">OverlayImage</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Overlays a <A HREF="DA_E0045.htm" TARGET="TEXT">DAImage</A> object onto the current drawing surface. This means the image can be animated.

<P><B>drawingObj.OverlayImage</B><B>(</B><BR>&nbsp;&nbsp;<I>img</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>img</I>
 </DT><DD>The <A HREF="DA_E0045.htm" TARGET="TEXT">DAImage</A> image.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012400">PieDegrees</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Renders a closed path that traces a segment of an oval and connects it to the origin. (In effect, it is a pie-shaped wedge).

<P>The following example uses VBScript to draw a series of wedges, each with a solid-red fill:

<PRE><FONT FACE="Courier" SIZE="2">

&lt;HTML&gt;
&lt;HEAD&gt;
&lt;TITLE&gt;Demonstration of PieDegrees Subroutine&lt;/TITLE&gt;
&lt;/HEAD&gt;

&lt;BODY&gt;

&lt;DIV ID=controlDiv&gt;
&lt;OBJECT ID="DAViewer"
        STYLE="position:absolute; left:10; top:10;width:450;height:450"
        CLASSID="CLSID:B6FFC24C-7E13-11D0-9B47-00C04FC2F51D"&gt;
&lt;/OBJECT&gt;
&lt;/DIV&gt;

&lt;/DIV&gt;

&lt;SCRIPT LANGUAGE="VBScript"&gt;

sub window_onLoad 

  Set s = DAViewer.MeterLibrary
  Set ds = s.NewDrawingSurface()

  ds.FillStyle          1
  ds.FillColor          s.ColorRgb255(255,0,0)
  
  ds.Text "Degrees 0", -.04, .06
  ds.PieDegrees 0, .05, 0, 0, .01, .01
  
  ds.Text "Degrees 45", -.04, .04
  ds.PieDegrees 0, .03, 0, 45, .01, .01

  ds.Text "Degrees 90", -.04, .02
  ds.PieDegrees 0, .01, 0, 90, .01, .01

  ds.Text "Degrees 180", -.04, 0
  ds.PieDegrees 0, -.01, 0, 180, .01, .01

  ds.Text "Degrees 270", -.04, -.02
  ds.PieDegrees 0, -.03, 0, 270, .01, .01

  ds.Text "Degrees 360", -.04, -.04
  ds.PieDegrees 0, -.05, 0, 360, .01, .01

  DAViewer.Image = ds.Image
  DAViewer.Start

end sub

&lt;/SCRIPT&gt;

&lt;/BODY&gt;
&lt;/HTML&gt;

</FONT></PRE>
<P><B>drawingObj.PieDegrees</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xPos</I>
 </DT><DD>The x-coordinate (a double) of the lower-lefthand corner of the oval's bounding box.
</DD><DT><I>yPos</I>
 </DT><DD>The y-coordinate (a double) of the lower-lefthand corner of the oval's bounding box.
</DD><DT><I>startAngle</I>
 </DT><DD>The starting angle, in degrees (a double) of the wedge.
</DD><DT><I>endAngle</I>
 </DT><DD>The ending angle, in degrees (a double) of the wedge.
</DD><DT><I>arcWidth</I>
 </DT><DD>The double representing the arc width, expressed in meters, or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected.
</DD><DT><I>arcHeight</I>
 </DT><DD>The double representing the arc height, expressed in meters, or pixels, depending on whether the MeterLibrary or the PixelLibrary is selected.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012500">PieRadians</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a012400" TARGET="TEXT">PieDegrees</A> except that <I>startAngle</I> and <I>endAngle</I> are expressed in radians.

<P><B>drawingObj.PieRadians</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>startAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>endAngle</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a012600">Polygon</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws and fills a polygon, using the current fill and border styles. The points can be specified as a variant array of either <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A>[] objects or doubles. The array of doubles array must contain (2 * <I>numPts</I>) because it represents (x, y) coordinate pairs. 

<P><B>drawingObj.Polygon</B><B>(</B><BR>&nbsp;&nbsp;<I>points</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>The array (variant) of either <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A>[] objects or (x, y) coordinates (doubles). 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012700">Polyline</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws a set of line segments according to the current line style. The points can be specified as a variant array of either <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A>[] objects or doubles. The array of doubles array must contain (2 * <I>numPts</I>) because it represents (x, y) coordinate pairs. 

<P><B>drawingObj.Polyline</B><B>(</B><BR>&nbsp;&nbsp;<I>points</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>points</I>
 </DT><DD>The array (variant) of either <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A>[] objects or (x, y) coordinates (doubles). 
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012800">Rect</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws and fills a rectangle, using the current fill and border styles.

<P><B>drawingObj.Rect</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xPos</I>
 </DT><DD>A double that is the x-coordinate of the lower-lefthand corner of the rectangle's bounding box.
</DD><DT><I>yPos</I>
 </DT><DD>A double that is the y-coordinate of the lower-lefthand corner of the rectangle's bounding box.
</DD><DT><I>width</I>
 </DT><DD>The width of the rectangle (a double), in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD><DT><I>height</I>
 </DT><DD>The height of the rectangle (a double), in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012900">Reset</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Resets the local context and sets all attributes to their defaults (nested transformations from the context still apply although local transformations are reset). This subroutine affects only the state used for upcoming drawing methods, not the current drawing.

<P><B>drawingObj.Reset</B><B>(</B> <B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a012a00">RestoreGraphicsState</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Restores the drawing surface's graphics state (the font, color, fillstyles, and so on) to what it was before the last <A HREF="DA_E0040.htm#vref_000106010a012c00" TARGET="TEXT">SaveGraphicsState</A>.

<P><B>drawingObj.RestoreGraphicsState</B><B>(</B> <B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a012b00">RoundRect</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Draws a rectangle with rounded, rather than square, corners. The corners are considered to be segments of an oval (in effect, an arc).

<P><B>drawingObj.RoundRect</B><B>(</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><B>,</B><BR>&nbsp;&nbsp;<I>width</I><B>,</B><BR>&nbsp;&nbsp;<I>height</I><B>,</B><BR>&nbsp;&nbsp;<I>arcWidth</I><B>,</B><BR>&nbsp;&nbsp;<I>arcHeight</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xPos</I>
 </DT><DD>A double that is the x-coordinate of the lower-lefthand corner of the rectangle's bounding box.
</DD><DT><I>yPos</I>
 </DT><DD>A double that is the y-coordinate of the lower-lefthand corner of the rectangle's bounding box.
</DD><DT><I>width</I>
 </DT><DD>A double that is the width of the rectangle, in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD><DT><I>height</I>
 </DT><DD>A double that is the the height of the rectangle, in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD><DT><I>arcWidth</I>
 </DT><DD>The arc width (a double) in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD><DT><I>arcHeight</I>
 </DT><DD>The arc height (a double), in either pixels or meters, depending on whether the PixelLibrary or the MeterLibrary is selected.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012c00">SaveGraphicsState</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Saves the drawing surface's current graphics state by pushing it onto an internal stack.

<P><B>drawingObj.SaveGraphicsState</B><B>(</B> <B>)</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a012d00">SecondaryFillColor</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies a secondary fill color. For gradient fills, this is the second color used for blending. For hatch fills, it is the color used to fill around the hatch marks. For empty fills, it is always transparent. It does not apply to solid fills.

<P><B>drawingObj.SecondaryFillColor</B><B>(</B><BR>&nbsp;&nbsp;<I>val</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>val</I>
 </DT><DD>The <A HREF="DA_E0038.htm" TARGET="TEXT">DAColor</A> object that is the secondary color.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="DA_E0040.htm#vref_000106010a010c00" TARGET="TEXT">FillColor</A>

<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012e00">Text</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Creates a filled region from the text outlines, using the current fontstyle to determine the size of the font and the face. Color and other attributes come from the current fill and border styles. Note that the color attribute of the current font style is ignored. The text's starting location is given by <I>xPos</I>, <I>yPos</I>.

<P><B>drawingObj.Text</B><B>(</B><BR>&nbsp;&nbsp;<I>string</I><B>,</B><BR>&nbsp;&nbsp;<I>xPos</I><B>,</B><BR>&nbsp;&nbsp;<I>yPos</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>string</I>
 </DT><DD>The text used as the outline (a string).
</DD><DT><I>xPos</I>
 </DT><DD>The starting point's x-coordinate (a double).
</DD><DT><I>yPos</I>
 </DT><DD>The starting point's y-coordinate (a double).
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a012f00">TextPoint</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Same as <A HREF="DA_E0040.htm#vref_000106010a012e00" TARGET="TEXT">Text</A> except that the starting location is given by a <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> object.

<P><B>drawingObj.TextPoint</B><B>(</B><BR>&nbsp;&nbsp;<I>string</I><B>,</B><BR>&nbsp;&nbsp;<I>pt</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>string</I>
 </DT><DD>The text used as the outline (a string).
</DD><DT><I>pt</I>
 </DT><DD>The <A HREF="DA_E0058.htm" TARGET="TEXT">DAPoint2</A> object designating the text's starting location. This can be animated.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a013000">Transform</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Transform operations include translation, scaling, and/or shearing. The subroutine affects only the state used for upcoming drawing methods, not the current drawing. This operation is cumulative. 

<P><B>drawingObj.Transform</B><B>(</B><BR>&nbsp;&nbsp;<I>xf</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>xf</I>
 </DT><DD>The <A HREF="DA_E0109.htm" TARGET="TEXT">DATransform2</A> object that is the two-dimensional transform.
</DD></DL>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a013100">VerticalFillScale</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Stretches or compresses the fill pattern vertically to match the width of the drawn object's bounding box.

<P><B>drawingObj.VerticalFillScale</B><B>(</B> <B>)</B><BR><H5>Remarks</H5>
<P>There is no guarantee that the entire fill style will appear in drawn object because many fill regions are not rectangular.

<H3><A NAME="vref_000106010a020000">DADrawingSurface Properties</A></H3>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020100" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">BorderStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020200" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">ClipMatte</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020300" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">FontStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020400" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">HatchFillTransparent</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020500" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">Image</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020600" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LineStyle</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020700" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">LocalContextImage</A><BR>
<P><A CLASS=tctop HREF="DA_E0040.htm#vref_000106010a020800" TARGET=TEXT><IMG SRC="../art/bullet1.gif" WIDTH="5" HEIGHT="11" BORDER=0 ALT="bullet1.gif">MouseEventsEnabled</A><BR>
<H4><HR COLOR=#0000FF><A NAME="vref_000106010a020100">BorderStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>A <A HREF="DA_E0050.htm" TARGET="TEXT">DALineStyle</A> object that specifies how the outline of a filled region will be drawn. The color specified in the line style determines the color of the border. (Interior fills are specified with <A HREF="DA_E0040.htm#vref_000106010a010f00" TARGET="TEXT">FillStyle</A>.) For an alternative way of setting border attributes, see <A HREF="DA_E0040.htm#vref_000106010a010400" TARGET="TEXT">BorderColor</A>, <A HREF="DA_E0040.htm#vref_000106010a010500" TARGET="TEXT">BorderDashStyle</A>, <A HREF="DA_E0040.htm#vref_000106010a010600" TARGET="TEXT">BorderJoinStyle</A>, and <A HREF="DA_E0040.htm#vref_000106010a010700" TARGET="TEXT">BorderWidth</A>.

<P><B>drawingObj.BorderStyle</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a020200">ClipMatte</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies an image matte (or masking stencil) to the drawing context. Note that, unlike the <B>DAImage</B> <A HREF="DA_E0045.htm#vref_000106010f010200" TARGET="TEXT">Clip</A> function, this property affects what will be drawn rather than what has already been drawn.

<P><B>drawingObj.ClipMatte</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a020300">FontStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>A <A HREF="DA_E0043.htm" TARGET="TEXT">DAFontStyle</A> (animated) object that sets font attributes such as face, size, and color. 

<P><B>drawingObj.FontStyle</B><BR><H5>See Also</H5>
<P><A HREF="DA_E0040.htm#vref_000106010a011200" TARGET="TEXT">Font</A>

<H4><HR COLOR=#0000FF><A NAME="vref_000106010a020400">HatchFillTransparent</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>A boolean specifying whether the hatch fill is transparent or not.

<P><B>drawingObj.HatchFillTransparent</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a020500">Image</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Returns the <A HREF="DA_E0045.htm" TARGET="TEXT">DAImage</A> object (animated image) associated with the <A HREF="DA_E0040.htm" TARGET="TEXT">DrawingSurface</A>.

<P><B>drawingObj.Image</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a020600">LineStyle</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Adds a <A HREF="DA_E0050.htm" TARGET="TEXT">DALineStyle</A> to the graphics state. A <B>DALineStyle</B> object determines the line color, dash style, width, endpoint, and join style. Setting this property affects how the line drawing commands (such as <A HREF="DA_E0040.htm#vref_000106010a010200" TARGET="TEXT">ArcRadians</A> and <A HREF="DA_E0040.htm#vref_000106010a012700" TARGET="TEXT">Polyline</A>) are drawn.

<P><B>drawingObj.LineStyle</B><BR><H5>See Also</H5>
<P><A HREF="DA_E0040.htm#vref_000106010a011a00" TARGET="TEXT">LineColor</A>, <A HREF="DA_E0040.htm#vref_000106010a011b00" TARGET="TEXT">LineDashStyle</A>, <A HREF="DA_E0040.htm#vref_000106010a011c00" TARGET="TEXT">LineEndStyle</A>, <A HREF="DA_E0040.htm#vref_000106010a011d00" TARGET="TEXT">LineJoinStyle</A>, <A HREF="DA_E0040.htm#vref_000106010a011f00" TARGET="TEXT">LineWidth</A> 

<H4><HR COLOR=#0000FF><A NAME="vref_000106010a020700">LocalContextImage</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Returns an image that corresponds to what was drawn since the latest <A HREF="DA_E0040.htm#vref_000106010a012c00" TARGET="TEXT">SaveGraphicsState</A> call. This property is useful for instancing and procedural tiling.

<P><B>drawingObj.LocalContextImage</B><BR><H4><HR COLOR=#0000FF><A NAME="vref_000106010a020800">MouseEventsEnabled</A></H4>
<A HREF="DA_E0040.htm" TARGET="TEXT">DADrawingSurface Class</A>
<P>Specifies whether mouseover and selection events will be detected for the objects subsequently drawn. TRUE means that events are detected and FALSE means they are not.

<P><B>drawingObj.MouseEventsEnabled</B><BR><H3><A NAME="vref_000106010a030000">Relevant Functions from the DAStatics Class</A></H3>
<P><A HREF="DA_E0070.htm#vref_0001060128000100" TARGET="TEXT">lib.ImportDirectDrawSurface(dds, updateEvent)</A>
<P><A HREF="DA_E0070.htm#vref_0001060128000200" TARGET="TEXT">lib.NewDrawingSurface()</A>

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
