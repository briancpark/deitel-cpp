<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IFilterMapper2 Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0143.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0145.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060138000000">IFilterMapper2 Interface</A></H2>
<BR CLEAR=ALL>
<P><B>IFilterMapper2</B> is an interface for registering and locating DirectShow filters with greater flexibility than <A HREF="dssd0143.htm" TARGET="TEXT">IFilterMapper</A> allowed. Applications and filters should use IFilterMapper2 instead of IFilterMapper, although both interfaces can find filters registered with the other interface.

<P>One major change from IFilterMapper to IFilterMapper2 is that IFilterMapper2 provides support for filter categories. A filter can appear in one or more categories (e.g. Video Compressors) to restrict the search space. The <A HREF="dssd0144.htm#If_0001060138030300" TARGET="TEXT">RegisterFilter</A> method takes a category, and the <A HREF="dssd0144.htm#If_0001060138030400" TARGET="TEXT">EnumMatchingFilters</A> method searches across categories.

<P>Other changes include:
<OL><LI>Quicker and easier enumeration of hardware devices such as WDM/PnP
<LI>Registration in one step (previously you had to register pins and mediatypes with separate calls)
<LI>Register and search by mediums (see Kernel Streaming pins NT DDK)
</OL>
<A NAME="If_0001060138010000"></A><P><B>When to Implement
</B>
<P>This interface is implemented on the filter graph and is not intended to be implemented by developers. 

<A NAME="If_0001060138020000"></A><P><B>When to Use
</B>
<P>Applications and filters should use IFlterMapper2 when they need to register or unregister filters. IFilterMapper2 should be used instead of IFilterMapper. 

<A NAME="If_0001060138030000"></A><P><B>Methods in Vtable Order

</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IFilterMapper2 methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0144.htm#If_0001060138030100" TARGET="TEXT">CreateCategory</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds a new category to the list of ActiveMovie categories (CLSID_ActiveMovieCategories).
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0144.htm#If_0001060138030200" TARGET="TEXT">UnregisterFilter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Removes the registration of this filter from the registry.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0144.htm#If_0001060138030300" TARGET="TEXT">RegisterFilter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Register a filter, pins, and media types under a category.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0144.htm#If_0001060138030400" TARGET="TEXT">EnumMatchingFilters</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides an enumerator that enumerates registered filters that meet specified requirements. 
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060138030100">IFilterMapper2::CreateCategory</A></H3>
<A HREF="dssd0144.htm" TARGET="TEXT">IFilterMapper2 Interface</A>
<P>Adds a new category to the list of ActiveMovie categories (CLSID_ActiveMovieCategories).
<P><B>HRESULT</B> <B>CreateCategory</B><B>(</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>clsidCategory</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwCategoryMerit</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>Description</I> <B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>clsidCategory</I>
 </DT><DD>[in] Name of the new filter category.
</DD><DT><I>dwCategoryMerit</I>
 </DT><DD>[in] Merit value of the category. Categories with higher merit are enumerated first. 
</DD><DT><I>Description</I>
 </DT><DD>[in] Descriptive name for the category. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK on success; HRESULT_FROM_WIN32 on failure.

<H5>Remarks</H5>
<P>The Graph builder initially skips all categories with merit less than DO_NOT_USE to speed up the <A HREF="dssd0146.htm#If_000106013a030400" TARGET="TEXT">IGraphBuilder::RenderFile</A> method. Categories of filters that should not be considered for playback should be marked DO_NOT_USE. For more information on "merit" see the remarks section of the <A HREF="dssd0143.htm#If_0001060137030200" TARGET="TEXT">IFilterMapper::RegisterFilter</A> method.

<P>A filter can appear in one or more categories (e.g. Video Compressors) to restrict the search space. 
<H3><HR COLOR=#0000FF><A NAME="If_0001060138030200">IFilterMapper2::UnregisterFilter</A></H3>
<A HREF="dssd0144.htm" TARGET="TEXT">IFilterMapper2 Interface</A>
<P>Removes the registration of this filter from the registry.
<P><B>HRESULT</B> <B>UnregisterFilter</B><B>(</B><BR>&nbsp;&nbsp;<B>const</B> <B>CLSID</B> <I>*pclsidCategory</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>OLECHAR</B> <I>*szInstance</I><B>,</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>Filter</I> <B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pclsidCategory</I>
 </DT><DD>[in] Name of the category which the filter falls under.
</DD><DT><I>szInstance</I>
 </DT><DD>[in] Name of the filter you wish to remove.
</DD><DT><I>Filter</I>
 </DT><DD>[in] Globally unique identifier (GUID) of the filter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK on success; HRESULT_FROM_WIN32 on failure.

<H5>Remarks</H5>
<P>If <I>szInstance</I> is null, this method uses the filter guid passed in Filter. 

<P>This method might return an error if the filter was not registered.
<H3><HR COLOR=#0000FF><A NAME="If_0001060138030300">IFilterMapper2::RegisterFilter</A></H3>
<A HREF="dssd0144.htm" TARGET="TEXT">IFilterMapper2 Interface</A>
<P>Register a filter, pins, and media types under a category.
<P><B>HRESULT</B> <B>RegisterFilter</B><B>(</B><BR>&nbsp;&nbsp;<B>REFCLSID</B> <I>clsidFilter</I><B>,</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>Name</I><B>,</B><BR>&nbsp;&nbsp;<B>IMoniker</B> <I>**ppMoniker</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>CLSID</B> <I>*pclsidCategory</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>OLECHAR</B> <I>*szInstance</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>REGFILTER2</B> <I>*prf2</I> <B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>clsidFilter</I>
 </DT><DD>[in] Globally unique identifier (GUID) of the filter. CoCreateInstance will be called with this guid when the filter is instantiated.
</DD><DT><I>Name</I>
 </DT><DD>[in] Descriptive name for the filter.
</DD><DT><I>ppMoniker</I>
 </DT><DD>[in, out] Address of a pointer to a device moniker which determines where this filter's data will be written. This parameter will be set to NULL upon return.
 </DD><DT><I>pclsidCategory</I>
 </DT><DD>[in] Category of the filter to register. 
</DD><DT><I>szInstance</I>
 </DT><DD>[in] Unique identifier for the filter (can be the friendly name or the filter clsid). 
</DD><DT><I>prf2</I>
 </DT><DD>[in] Pointer to a <A HREF="dssd0287.htm#structs_0001060501002400" TARGET="TEXT">REGFILTER2</A> structure containing merit and pin information.
</DD></DL>
<H5>Return Values</H5>
<P>Returns one of the following values:
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Value </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Meaning
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">VFW_E_BAD_KEY </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Couldn't get registry key.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HRESULT_FROM_WIN32 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Failure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">NOERROR </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Success.
</FONT></TD></TR></TABLE>

<H5>Remarks</H5>
<P>Specify the moniker in the <I>ppMoniker</I> parameter if you are registering a filter for a WDM/PnP Device. If <I>ppMoniker</I> is not null, the moniker returned can be used to write additional private values in the property bag.
<P>The <I>pclsidCategory</I> parameter defaults to CLSID_ActiveMovieFilters if NULL is passed in.

<P>Set <I>ppMoniker</I> to NULL if you don't want to provide or receive the moniker

<H3><HR COLOR=#0000FF><A NAME="If_0001060138030400">IFilterMapper2::EnumMatchingFilters</A></H3>
<A HREF="dssd0144.htm" TARGET="TEXT">IFilterMapper2 Interface</A>
<P>Provides an enumerator that enumerates registered filters that meet specified requirements. 
<P><B>HRESULT</B> <B>EnumMatchingFilters</B><B>(</B><BR>&nbsp;&nbsp;<B>IEnumMoniker</B> <I>**ppEnum</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwFlags</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bExactMatch</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwMerit</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bInputNeeded</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>cInputTypes</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <I>*pInputTypes</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>REGPINMEDIUM</B> <I>*pMedIn</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>CLSID</B> <I>*pPinCategoryIn</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bRender</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bOutputNeeded</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>cOutputTypes</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>GUID</B> <I>*pOutputTypes</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>REGPINMEDIUM</B> <I>*pMedOut</I><B>,</B><BR>&nbsp;&nbsp;<B>const</B> <B>CLSID</B> <I>*pPinCategoryOut</I><B>,</B><B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppEnum</I>
 </DT><DD>[out] Enumerator returned.
</DD><DT><I>dwFlags</I>
 </DT><DD>[in] Currently reserved, specify 0.
</DD><DT><I>bExactMatch</I>
 </DT><DD>[in] Specify TRUE to indicate wildcards not allowed; FALSE indicates wildcards allowed.
</DD><DT><I>dwMerit</I>
 </DT><DD>[in] Enumerate only filters with at least this merit. 
</DD><DT><I>bInputNeeded</I>
 </DT><DD>[in] TRUE if there must be at least one input pin. 
</DD><DT><I>cInputTypes</I>
 </DT><DD>[in] Number of input types to match.
</DD><DT><I>pInputTypes</I>
 </DT><DD>[size_is(cInputTypes*2)] Input major type and subtype required. Set to GUID_NULL if you do not care.
</DD><DT><I>pMedIn</I>
 </DT><DD>[in] Input medium. Set to NULL if not needed.
</DD><DT><I>pPinCategoryIn</I>
 </DT><DD>[in] Input pin category. Set to NULL if not needed.
</DD><DT><I>bRender</I>
 </DT><DD>[in] Option that specifies if the input must be rendered by this filter. 
</DD><DT><I>bOutputNeeded</I>
 </DT><DD>[in] TRUE if there must be at least one output pin. 
</DD><DT><I>cOutputTypes</I>
 </DT><DD>[in] Number of output types to match.
</DD><DT><I>pOutputTypes</I>
 </DT><DD>[size_is(cOutputTypes*2)] Output major type and subtype required. Set to GUID_NULL if you do not care.
</DD><DT><I>pMedOut</I>
 </DT><DD>[in] Output medium. Set to NULL if not needed.
</DD><DT><I>pPinCategoryOut</I>
 </DT><DD>[in] Output pin category. Set to NULL if not needed.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful.


<H5>Remarks</H5>
<P>If a pin hasn't registered any media types, this method will not consider a match for the media type passed in for the <I>pInputTypes</I> or <I>pOutputTypes</I> parameters.

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
