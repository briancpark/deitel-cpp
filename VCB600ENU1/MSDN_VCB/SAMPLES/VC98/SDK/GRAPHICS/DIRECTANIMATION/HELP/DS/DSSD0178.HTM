<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IVPConfig Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0177.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0179.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_000106015a000000">IVPConfig Interface</A></H2>
<BR CLEAR=ALL>
<P><B>IVPConfig</B> enables a video port (VP) mixer filter to communicate with a VP driver (decoder), to set and retrieve configuration information. This interface assumes that the mixer filter creates the video port.

<A NAME="If_000106015a010000"></A><P><B>When to Implement</B>
<P>The Windows Driver Model (WDM) Ksproxy filter implements this interface so you won't need to implement it in most cases. Implement this interface when you need this functionality on a platform that does not support WDM, or when you need to alter the default behavior.

<A NAME="If_000106015a020000"></A><P><B>When to Use</B>
<P>The overlay mixer filter (<A HREF="dssd0335.htm#filteref_0001070129000000" TARGET="TEXT">Overlay Mixer</A>) uses this interface so you won't need to use it in most cases. Use this interface when you implement your own overlay mixer filter.

<A NAME="If_000106015a030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IVPConfig methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030100" TARGET="TEXT">GetConnectInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves connection information structures.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030800" TARGET="TEXT">SetConnectInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the index for the current video port connection information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030500" TARGET="TEXT">GetVPDataInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current video port data information.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030200" TARGET="TEXT">GetMaxPixelRate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the maximum pixels per second rate for a given width and height.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030600" TARGET="TEXT">InformVPInputFormats</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Informs the device what video formats the video port supports.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030400" TARGET="TEXT">GetVideoFormats</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the video formats the decoder supports.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030d00" TARGET="TEXT">SetVideoFormat</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the video format.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030b00" TARGET="TEXT">SetInvertPolarity</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Reverses the current polarity.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030300" TARGET="TEXT">GetOverlaySurface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Given the context, retrieves an overlay surface object to be used as an allocator.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030700" TARGET="TEXT">IsVPDecimationAllowed</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Given the context (Video/VBI), retrieves whether scaling at the video port is allowed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030c00" TARGET="TEXT">SetScalingFactors</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the factors by which the decoder should scale the video stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030900" TARGET="TEXT">SetDirectDrawKernelHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the DirectDraw&#174; kernel handle.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030e00" TARGET="TEXT">SetVideoPortID</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the video port ID.


</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0178.htm#If_000106015a030a00" TARGET="TEXT">SetDDSurfaceKernelHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the DirectDraw surface kernel handle.


</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030100">IVPConfig::GetConnectInfo</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Retrieves connection information structures.
<P><B>HRESULT</B> <B>GetConnectInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>pdwNumConnectInfo</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDDVIDEOPORTCONNECT</B> <I>pddVPConnectInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwNumConnectInfo</I>
 </DT><DD>[in/out] Points to a buffer that contains the number of DDVIDEOPORTCONNECT structures


 provided by the <I>pddVPConnectInfo</I> parameter. Contains the actual number of structures returned on output. If <I>pddVPConnectInfo</I> is NULL, this method updates this parameter with the number of structures supported by the driver.
</DD><DT><I>pddVPConnectInfo</I>
 </DT><DD>[in/out] Points to an array of DDVIDEOPORTCONNECT structures that the driver fills in. Specify NULL to retrieve the total number of formats supported. 

</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the count or structures were retrieved, or a driver error.

<H5>Remarks</H5>
<P>This method retrieves the various connection information structures (guid, port width)


 in an array of structures (<I>pddVPConnectInfo</I>). It is the callee's responsibility to allocate


 the correct amount of space for the number of structures requested. 

<P>Set the index for connection information by using the <A HREF="dssd0178.htm#If_000106015a030800" TARGET="TEXT">IVPConfig::SetConnectInfo</A> method.


<H3><HR COLOR=#0000FF><A NAME="If_000106015a030200">IVPConfig::GetMaxPixelRate</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Retrieves the maximum pixels per second rate for a given width and height.
<P><B>HRESULT</B> <B>GetMaxPixelRate</B><B>(</B><BR>&nbsp;&nbsp;<B>LPAMVPSIZE</B> <I>pamvpSize</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>pdwMaxPixelsPerSecond</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pamvpSize</I>
 </DT><DD>[in/out] Pointer to an <A HREF="dssd0287.htm#structs_0001060501000b00" TARGET="TEXT">AMVPSIZE</A> structure containing the desired width and height and which receives the final dimensions upon return.


</DD><DT><I>pdwMaxPixelsPerSecond</I>
 </DT><DD>[out] Pointer to the retrieved maximum pixels per second rate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the maximum pixel rate was retrieved.


<H5>Remarks</H5>
<P>This method retrieves the maximum pixels per second rate expected for a given format and a given scaling factor. If the decoder does not support those scaling factors, then it returns the rate and the nearest scaling factors it supports.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030300">IVPConfig::GetOverlaySurface</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Given the context, retrieves an overlay surface object to use as an allocator.
<P><B>HRESULT</B> <B>GetOverlaySurface</B><B>(</B><BR>&nbsp;&nbsp;<B>AMVP_CONTEXT</B> <I>amvpContext</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDIRECTDRAWSURFACE</B> <I>*ppddOverlaySurface</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>amvpContext</I>
 </DT><DD>[in] Context in which to use the overlay surface.
</DD><DT><I>ppddOverlaySurface</I>
 </DT><DD>[out] Address of a pointer to the retrieved DirectDraw&#174; overlay surface object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the overlay surface object was returned. (Default implementation sets the surface to NULL and returns NOERROR.)

<H5>Remarks</H5>
<P>The VP mixer uses this function to determine if the driver wants


 the VP mixer to use its overlay surface and if so to get a pointer to it. If this function returns NULL, then the VP mixer allocates its own surface.


<H3><HR COLOR=#0000FF><A NAME="If_000106015a030400">IVPConfig::GetVideoFormats</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Retrieves the video formats the decoder supports.
<P><B>HRESULT</B> <B>GetVideoFormats</B><B>(</B><BR>&nbsp;&nbsp;<B>LPDWORD</B> <I>pdwNumFormats</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDDPIXELFORMAT</B> <I>pddPixelFormats</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwNumFormats</I>
 </DT><DD>[in/out] Pointer to the number of <A HREF="dssd0389.htm#external_00010a010900001b" TARGET="TEXT">DDPIXELFORMAT</A> structures provided by the <I>pddPixelFormats</I> parameter. Upon output,


 this method updates this parameter with the actual number of structures retrieved. If <I>pddPixelFormats</I> is NULL, this method updates this parameter with the total number of formats the driver supports.
</DD><DT><I>pddPixelFormats</I>
 </DT><DD>[in/out] Pointer to an array of <A HREF="dssd0389.htm#external_00010a010900001b" TARGET="TEXT">DDPIXELFORMAT</A> structures that the driver fills. Specify NULL to retrieve only the count of supported formats in <I>pdwNumFormats</I>.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the count or structures were returned, or a driver error otherwise.

<H5>Remarks</H5>
<P>This method queries for either the number of <A HREF="dssd0389.htm#external_00010a010900001b" TARGET="TEXT">DDPIXELFORMAT</A> structures supported by the driver, or retrieves as many structures as can fit into the provided buffer space.

<P>It is the callee's responsibility to allocate


 the correct amount of space for the number of structures requested.

<P>Set the video format using <A HREF="dssd0178.htm#If_000106015a030d00" TARGET="TEXT">IVPConfig::SetVideoFormat</A>.


<H3><HR COLOR=#0000FF><A NAME="If_000106015a030500">IVPConfig::GetVPDataInfo</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Retrieves the current video port data information.
<P><B>HRESULT</B> <B>GetVPDataInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>LPAMVPDATAINFO</B> <I>pamvpDataInfo</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pamvpDataInfo</I>
 </DT><DD>[in/out] Pointer to the <A HREF="dssd0287.htm#structs_0001060501000900" TARGET="TEXT">AMVPDATAINFO</A> data information structure.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the video port data information was retrieved.



<H3><HR COLOR=#0000FF><A NAME="If_000106015a030600">IVPConfig::InformVPInputFormats</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Informs the device what video formats the video port supports.
<P><B>HRESULT</B> <B>InformVPInputFormats</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwNumFormats</I><B>,</B><BR>&nbsp;&nbsp;<B>LPDDPIXELFORMAT</B> <I>pDDPixelFormats</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwNumFormats</I>
 </DT><DD>[in] Number of video formats contained in the <I>pDDPixelFormats</I> parameter. 
</DD><DT><I>pDDPixelFormats</I>
 </DT><DD>[in] Array of pixel format structures (<A HREF="dssd0389.htm#external_00010a010900001b" TARGET="TEXT">DDPIXELFORMAT</A>) to send to the device.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_FALSE if failure, or NOERROR otherwise.

<H5>Remarks</H5>
<P>The supplied array of supported video port formats might determine what formats the device, in turn, proposes.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030700">IVPConfig::IsVPDecimationAllowed</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Given the context (Video/VBI), retrieves whether scaling at the video port is allowed.


<P><B>HRESULT</B> <B>IsVPDecimationAllowed</B><B>(</B><BR>&nbsp;&nbsp;<B>AMVP_CONTEXT</B> <I>amvpContext</I><B>,</B><BR>&nbsp;&nbsp;<B>LPBOOL</B> <I>pbIsDecimationAllowed</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>amvpContext</I>
 </DT><DD>[in] Context in which to query the VP decimation capability.

</DD><DT><I>pbIsDecimationAllowed</I>
 </DT><DD>[out] Pointer to the retrieved value indicating whether decimation is allowed.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if this method returned the decimation capability.



<H5>Remarks</H5>
<P>The VP mixer uses this function to determine whether the driver wants


 the mixer to decimate video data at its own discretion. This function can be especially useful in a capture with preview situation in which you would not want the VP mixer filter to perform any scaling at the video port. 
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030800">IVPConfig::SetConnectInfo</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Sets the index for the current video port connection information.
<P><B>HRESULT</B> <B>SetConnectInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwChosenEntry</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwChosenEntry</I>
 </DT><DD>[in] Index of new video port connect information (zero-based) to pass to the driver. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the video port connect information was set.



<H5>Remarks</H5>
<P>Retrieve connection information by using <A HREF="dssd0178.htm#If_000106015a030100" TARGET="TEXT">IVPConfig::GetConnectInfo</A>.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030900">IVPConfig::SetDirectDrawKernelHandle</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Sets the DirectDraw kernel handle.
<P><B>HRESULT</B> <B>SetDirectDrawKernelHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwDDKernelHandle</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwDDKernelHandle</I>
 </DT><DD>[in] DirectDraw kernel level handle passed as a <A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A> value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the specified handle was set successfully.



<H5>Remarks</H5>
<P>Sets the DirectDraw kernel level handle on the mini driver


 to enable it to talk to DirectDraw directly.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030a00">IVPConfig::SetDDSurfaceKernelHandle</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Sets the DirectDraw surface kernel handle.
<P><B>HRESULT</B> <B>SetDDSurfaceKernelHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwDDKernelHandle</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwDDKernelHandle</I>
 </DT><DD>[in] DirectDraw surface handle (kernel mode)


 passed as a <A HREF="dssd0389.htm#external_00010a010900002b" TARGET="TEXT">DWORD</A> value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the specified handle is set successfully.



<H5>Remarks</H5>
<P>This method sets the DirectDraw handle on the mini driver to enable it to talk to the video port directly.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030b00">IVPConfig::SetInvertPolarity</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Reverses the current polarity.


<P><B>HRESULT</B> <B>SetInvertPolarity</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR if the polarity was reversed.



<H5>Remarks</H5>
<P>Reversing polarity means asking the decoder to treat even fields like odd fields and vice versa.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030c00">IVPConfig::SetScalingFactors</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Sets the factors by which the decoder should scale the video stream.
<P><B>HRESULT</B> <B>SetScalingFactors</B><B>(</B><BR>&nbsp;&nbsp;<B>LPAMVPSIZE</B> <I>pamvpSize</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pamvpSize</I>
 </DT><DD>[in] Pointer to the new scaling size structure (<A HREF="dssd0287.htm#structs_0001060501000b00" TARGET="TEXT">AMVPSIZE</A>) to use to specify the width and height.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the new scaling factors were set.



<H5>Remarks</H5>
<P>If the decoder does not support the specified scaling factors, then it sets the values to the nearest factors it can support.
<H3><HR COLOR=#0000FF><A NAME="If_000106015a030d00">IVPConfig::SetVideoFormat</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Sets the video format.
<P><B>HRESULT</B> <B>SetVideoFormat</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwChosenEntry</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwChosenEntry</I>
 </DT><DD>[in] Specifies the index (zero-based) of the video pixel format to use.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the new video format was set.



<H5>Remarks</H5>
<P>Retrieve the video formats by using <A HREF="dssd0178.htm#If_000106015a030400" TARGET="TEXT">IVPConfig::GetVideoFormats</A>.


<H3><HR COLOR=#0000FF><A NAME="If_000106015a030e00">IVPConfig::SetVideoPortID</A></H3>
<A HREF="dssd0178.htm" TARGET="TEXT">IVPConfig Interface</A>
<P>Sets the video port ID. 
<P><B>HRESULT</B> <B>SetVideoPortID</B> <B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwVideoPortID</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwVideoPortID </I>
 </DT><DD>[in] DirectDraw video port ID.
</DD></DL>
<H5>Return Values</H5>
<P>Returns NOERROR if the specified handle is set successfully.



<H5>Remarks</H5>
<P>This method sets the DirectDraw video port ID on the mini driver to enable it to talk to the video port directly.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
