<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CAMMsgEvent Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0184.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0186.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060205000000">CAMMsgEvent Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/util06.gif" WIDTH="205" HEIGHT="57" ALT="CAMMsgEvent class hierarchy" >

<P>The <B>CAMMsgEvent</B> class is a wrapper for event objects that do message processing.
This class adds one method to the <A HREF="dssd0184.htm" TARGET="TEXT">CAMEvent</A> object to allow sent messages to be processed while waiting. 
 

<A NAME="Lib_0001060205010000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0185.htm#Lib_0001060205010100" TARGET="TEXT">WaitMsg</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Allows sent messages to be processed while 
waiting for an event to be signaled or for the indicated time-out to occur.

</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060205010100">CAMMsgEvent::WaitMsg</A></H3>
<A HREF="dssd0185.htm" TARGET="TEXT">CAMMsgEvent Class</A>
<P>Allows sent messages to be processed while waiting for an event to be signaled 
or for the indicated time-out to occur. 


<P><B>BOOL</B> <B>WaitMsg</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwTimeOut</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwTimeOut</I>
</DT><DD>Optional time-out value, represented in milliseconds. The default is INFINITE.
</DD></DL>
<H5>Return Values</H5>
<P>Returns TRUE if the event is signaled, or FALSE if the time-out occurred.

<H5>Remarks</H5>
<P>Call <B>CAMMsgEvent::WaitMsg</B> rather than <A HREF="dssd0184.htm#Lib_0001060204020500" TARGET="TEXT">CAMEvent::Wait</A> if you 
want to block on a time-out or a signaled event and continue to process sent messages. If you do not process messages and another thread sends you a message, deadlock could occur. For example, if you create a thread by way of the Win32 <A HREF="dssd0232.htm#Lib_0001060234030200" TARGET="TEXT">CreateThread</A> function and then block until the thread can initialize, deadlock will occur if the thread sends a message to your window using the Win32 <A HREF="dssd0389.htm#external_00010a01090000c4" TARGET="TEXT">SendMessage</A> function. This is because 
<B>SendMessage</B> does not return until the message has been processed. 
<B>CAMMsgEvent::WaitMsg</B> allows <B>SendMessage</B> to return to the caller 
by using a Win32 <A HREF="dssd0389.htm#external_00010a01090000bb" TARGET="TEXT">PeekMessage</A> loop to do message processing.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
