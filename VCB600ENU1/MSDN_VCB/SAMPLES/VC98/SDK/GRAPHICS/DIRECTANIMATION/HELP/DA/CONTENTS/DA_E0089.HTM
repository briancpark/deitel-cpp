<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>DAStatic Functions Relevant to DANumber Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0088.htm','/DA_E0000.htm','/DA_E0030.htm','/index.htm','/DA_E0090.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="vref_000106013b000000">DAStatic Functions Relevant to DANumber Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000100">Abs</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> that represents the absolute value of the given animated number. The value is equal to the absolute value (the non-negative equivalent) of the value of <I>a</I>.

<P><B>lib.Abs</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to apply the operation to.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000200">Acos</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the arccosine (inverse cosine) of the argument. 

<P><B>lib.Acos</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. The value is assumed to be a cosine value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000400" TARGET="TEXT">Asin</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000300">Add</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object representing the sum of the given arguments. The value is the value of <I>a</I> added to the value of <I>b</I> (a + b).

<P><B>lib.Add</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to add.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A>object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000400">Asin</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A>object that represents the arcsine (inverse sine) of the given argument. 

<P><B>lib.Asin</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. The value is assumed to be a sine value.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000200" TARGET="TEXT">Acos</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000500">Atan</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the arctangent (inverse tangent) of the given argument.

<P><B>lib.Atan</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000200" TARGET="TEXT">Acos</A>, <A HREF="DA_E0089.htm#vref_000106013b000400" TARGET="TEXT">Asin</A>, <A HREF="DA_E0089.htm#vref_000106013b000600" TARGET="TEXT">Atan2</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000600">Atan2</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the arctangent (inverse tangent) of the quotient of the given arguments. The value is the inverse tangent of the value of <I>a</I> divided by the value of <I>b</I>.

<P><B>lib.Atan2</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to divide.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000200" TARGET="TEXT">Acos</A>, <A HREF="DA_E0089.htm#vref_000106013b000400" TARGET="TEXT">Asin</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000700">Ceiling</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the ceiling value, the smallest integer value that is greater than or equal to the value of the given argument.

<P><B>lib.Ceiling</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to find the ceiling for.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000800">Cos</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the cosine of the given argument. 

<P><B>lib.Cos</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. The value is assumed to be in radians.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b002000" TARGET="TEXT">Sin</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000900">DANumber</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Converts a number (a double) to a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A>. The only time <B>DANumber</B> is used is when converting numbers to a corresponding <B>DANumber</B> objects.

<P><B>lib.DANumber</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The number (double) to be converted.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object.


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000a00">Derivative</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that is the instantaneous derivative (rate of change) of the given argument. For example, a constant number yields a constant derivative of 0 and a value equal to "time" yields a constant derivative of 1. 

<P><B>lib.Derivative</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object for which to calculate the derivative. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000b00">Div</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object representing the quotient of the given arguments. The value is the value of <I>a</I> divided by the value of <I>b</I> (a/b).

<P><B>lib.Div</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to divide.
</DD></DL>
<H5>Return Values</H5>
<P>Returns <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> the object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000c00">EQ</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object that represents the relation <I>a</I> = <I>b</I>. The value is TRUE when the value of <I>a</I> is equal to the value of <I>b</I>, otherwise, it is FALSE.

<P><B>lib.EQ</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000d00">Exp</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the exponential of the given argument. The value is the base of natural logarithms, <I>e</I>, raised to the power of the value of <I>a</I>. 

<P><B>lib.Exp</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to apply as an exponent of <I>e</I>. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b001400" TARGET="TEXT">Ln</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000e00">Floor</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> that represents the floor value, the largest integer value that is less than or equal to the value of the given argument.

<P><B>lib.Floor</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to find the floor for.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b000f00">GT</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object that represents the relation <I>a</I> &gt; <I>b</I>. The value is TRUE when the value of <I>a</I> is greater than the value of <I>b</I>, otherwise, it is FALSE.

<P><B>lib.GT</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001000">GTE</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object that represents the relation <I>a</I> <FONT FACE="Symbol">&#179;</FONT> <I>b</I>. The value is TRUE when the value of <I>a</I> is greater than or equal to the value of <I>b</I>, otherwise, it is FALSE.

<P><B>lib.GTE</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001100">Integral</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the sum of all values of <I>a</I> from the start time to the present. 

<P><B>lib.Integral</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to integrate. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001200">InterpolateAnim</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object the moves along the interval in <I>duration</I> seconds. Velocity is constant.

<P><B>lib.InterpolateAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>from</I><B>,</B><BR>&nbsp;&nbsp;<I>to</I><B>,</B><BR>&nbsp;&nbsp;<I>duration</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>from</I>
 </DT><DD>The beginning <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. This must be an animated number. 
</DD><DT><I>to</I>
 </DT><DD>The ending <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. This must be an animated number.
</DD><DT><I>duration</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object representing the length of time, in seconds. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object.


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001300">Interpolate</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Same as <A HREF="DA_E0089.htm#vref_000106013b001200" TARGET="TEXT">InterpolateAnim</A> except the arguments are non-animated numbers(doubles).

<P><B>lib.Interpolate</B><B>(</B><BR>&nbsp;&nbsp;<I>from</I><B>,</B><BR>&nbsp;&nbsp;<I>to</I><B>,</B><BR>&nbsp;&nbsp;<I>duration</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR=#0000FF><A NAME="vref_000106013b001400">Ln</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the natural logarithm of the given argument. The value is the value by which the base of natural logarithms, <I>e</I>, must be raised to equal the value of <I>a</I>. 

<P><B>lib.Ln</B><B>(</B><BR>&nbsp;&nbsp;<B>DANumber</B> <I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object for which to calculate the natural logarithm. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000d00" TARGET="TEXT">Exp</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001500">Log10</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the common logarithm (base-10 logarithm) of the given argument. The value is the value by which 10 must be raised to equal the value of <I>a</I>. 

<P><B>lib.Log10</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object for which to calculate the common logarithm. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001600">LT</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object that represents the relation <I>a</I> &lt; <I>b</I>. The value is TRUE when the value of <I>a</I> is less than the value of <I>b</I>, otherwise, it is FALSE.

<P><B>lib.LT</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001700">LTE</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object that represents the relation <I>a</I> <FONT FACE="Symbol">&#163;</FONT> <I>b</I>. The value is TRUE when the value of <I>a</I> is less than or equal to the value of <I>b</I>, otherwise, it is FALSE.

<P><B>lib.LTE</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001800">Mod</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the modulus of the given arguments. The value is the modulus, the remainder of the integer value of <I>a</I> divided by the integer value of <I>b</I>.

<P><B>lib.Mod</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to calculate the modulus for.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001900">Mul</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> representing the product of the given arguments. The value is the value of <I>a</I> multiplied by the value of <I>b</I> 
(a <FONT FACE="Symbol">&#180;</FONT> b).

<P><B>lib.Mul</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to multiply.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001a00">NE</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object that represents the relation <I>a</I> != <I>b</I>. The value is TRUE when the value of <I>a</I> is not equal to the value of <I>b</I>, otherwise, it is FALSE.

<P><B>lib.NE</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to compare.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0036.htm" TARGET="TEXT">DABoolean</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001b00">Neg</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object representing the negation of the given arguments. The value is equal to the value of <I>a</I> subtracted from zero (0 - a).

<P><B>lib.Neg</B><B>(</B><BR>&nbsp;&nbsp;<B>DANumber</B> <I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to negate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001c00">NumberBSpline</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object based on a B-spline function. The function depends on the control elements, the knot vector, the mathematical degree, and the weights of the control elements (these are optional).

<P>A B-spline function without weights is piecewise polynomial and with weights is piecewise rational (the quotient of two polynomials). It requires that:

<P>numberOfControlElements = numberOfKnots - <I>degree</I> + 1

<P>The control elements define the approximate direction and shape of the function. The knots represent junction values, in parameter space, between the connected polynomial parts. 

<P>Given a degree <I>d</I> and a number of knots <I>k</I>, the function is valid in the range knot<I>d</I> to knot<I>k-d</I>+1, and is otherwise undefined. For example, for a degree 2 curve, the valid range is from the second knot to the next to the last knot, inclusive.

<P>The returned <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> is the traversal of the spline function according to the <I>evaluation</I> parameter. The evaluation parameter is a <B>DANumber</B> that must be in the valid range of the spline, which is [knot<I>d</I>, knot<I>k</I>-<I>d</I>+1]. Any values outside this range are automatically clamped to the end values.

<P><B>lib.NumberBSpline</B><B>(</B><BR>&nbsp;&nbsp;<I>degree</I><B>,</B><BR>&nbsp;&nbsp;<I>knots</I><B>,</B><BR>&nbsp;&nbsp;<I>control_elements</I><B>,</B><BR>&nbsp;&nbsp;<I>weights</I><B>,</B><BR>&nbsp;&nbsp;<I>evaluation</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>degree</I>
 </DT><DD>A number representing the mathematical degree of the B-spline to evaluate. Must be 1, 2, or 3. 
</DD><DT><I>knots</I>
 </DT><DD>An array of <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects representing the knots used to calculate the B-spline. 
</DD><DT><I>control_elements</I>
 </DT><DD>An array of <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects representing the control elements used to calculate the B-spline.
</DD><DT><I>weights</I>
 </DT><DD>An array of <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects representing the weights used to calculate the rational B-spline. There must be the same number of weights as control elements. For non-rational B-splines, the value of <I>weights</I> is null.
</DD><DT><I>evaluation</I>
 </DT><DD>A <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that controls the spline evaluation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object.


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001d00">Pow</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> representing <I>a</I> raised to the power of <I>b</I>. The value is equal to a<SUP>b</SUP>.

<P><B>lib.Pow</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to apply the operation to.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001e00">Round</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the value of the given argument, rounded to the nearest integer.

<P><B>lib.Round</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to be rounded.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="vref_000106013b001f00">SeededRandom</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents an infinite, time-varying sequence of pseudo-random values.

<P><B>lib.SeededRandom</B><B>(</B><BR>&nbsp;&nbsp;<I>seed</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>seed</I>
 </DT><DD>The double that provides the seed, or starting value, for the sequence.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002000">Sin</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the sine of the given argument. 

<P><B>lib.Sin</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. The value is assumed to be in radians.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000800" TARGET="TEXT">Cos</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002100">SlowInSlowOutAnim</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that moves along the interval in <I>duration</I> seconds. The animation is dampened so that the number increases slowly, hits a maximum speed at the midpoint, and then decelerates until the end is reached. The <I>acceleration</I> is specified in Gs, or multiples of the earth's gravitational constant.

<P><B>lib.SlowInSlowOutAnim</B><B>(</B><BR>&nbsp;&nbsp;<I>from</I><B>,</B><BR>&nbsp;&nbsp;<I>to</I><B>,</B><BR>&nbsp;&nbsp;<I>duration</I><B>,</B><BR>&nbsp;&nbsp;<I>acceleration</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>from</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that is the beginnng of the animation. This must be an animated number.
</DD><DT><I>to</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that is the end of the animation. This must be an animated number.
</DD><DT><I>duration</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that is the length of the animation, in seconds.
</DD><DT><I>acceleration</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that is the rate of acceleration, in Gs. This must be an animated number.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object.


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002200">SlowInSlowOut</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Same as <A HREF="DA_E0089.htm#vref_000106013b002100" TARGET="TEXT">SlowInSlowOutAnim</A> except that the arguments are non-animated numbers (doubles).

<P><B>lib.SlowInSlowOut</B><B>(</B><BR>&nbsp;&nbsp;<I>from</I><B>,</B><BR>&nbsp;&nbsp;<I>to</I><B>,</B><BR>&nbsp;&nbsp;<I>duration</I><B>,</B><BR>&nbsp;&nbsp;<I>acceleration</I><BR>&nbsp;&nbsp;<B>)</B><BR><H3><HR COLOR=#0000FF><A NAME="vref_000106013b002300">Sqrt</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the square root of the given argument. The value is the square root of the value of <I>a</I>. 

<P><B>lib.Sqrt</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to apply the square root operation to.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002400">Sub</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object representing the difference of the given arguments. The value is the value of <I>b</I> subtracted from <I>a</I> (a - b).

<P><B>lib.Sub</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><B>,</B><BR>&nbsp;&nbsp;<I>b</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I> and <I>b</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> objects to subtract.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002500">Tan</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the tangent of the given argument. 

<P><B>lib.Tan</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. The value is assumed to be in radians.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0089.htm#vref_000106013b000500" TARGET="TEXT">Atan</A>, <A HREF="DA_E0089.htm#vref_000106013b000800" TARGET="TEXT">Cos</A>, <A HREF="DA_E0089.htm#vref_000106013b002000" TARGET="TEXT">Sin</A>

<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002600">ToDegrees</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the value of the given argument converted from radians to degrees.

<P><B>lib.ToDegrees</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to convert.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<H3><HR COLOR=#0000FF><A NAME="vref_000106013b002700">ToRadians</A></H3>
<A HREF="DA_E0061.htm" TARGET="TEXT">DAStatics Class</A>
<P>Creates a <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object that represents the value of the given argument converted from degrees to radians.

<P><B>lib.ToRadians</B><B>(</B><BR>&nbsp;&nbsp;<I>a</I><BR>&nbsp;&nbsp;<B>)</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object to convert.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0054.htm" TARGET="TEXT">DANumber</A> object. 


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
