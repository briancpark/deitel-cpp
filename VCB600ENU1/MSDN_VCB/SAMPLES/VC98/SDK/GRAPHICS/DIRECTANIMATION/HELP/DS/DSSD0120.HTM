<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IConfigAviMux Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0119.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0121.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_0001060120000000">IConfigAviMux Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IConfigAviMux</B> interface controls how the <A HREF="dssd0303.htm#filteref_0001070109000000" TARGET="TEXT">AVI multiplexer filter</A>



 writes files out to disk. DirectShow currently exposes this interface



 through the property page of the AVI multiplexer filter and you can use it



 to set the master stream and compatibility indexes.

<P><B>IConfigAviMux</B> provides backward compatibility with older Video for Windows&#174; audio-video interleaved (AVI) index formats (idx1)



 as well as extended AVI 2.0 index formats (indx)


 to allow for file sizes greater than 1 gigabyte (GB). Set and retrieve the compatibility indexes by using the <A HREF="dssd0120.htm#If_0001060120030300" TARGET="TEXT">IConfigAviMux::SetOutputCompatibilityIndex</A> and <A HREF="dssd0120.htm#If_0001060120030400" TARGET="TEXT">IConfigAviMux::GetOutputCompatibilityIndex</A> methods. See <A HREF="dssd0075.htm#avispec_0001050502030000" TARGET="TEXT">AVI 2.0 File Format Extensions</A> for more information on AVI 2.0.

<A NAME="If_0001060120010000"></A><P><B>When to Implement
</B>
<P>DirectShow implements this interface and makes its functionality available to anyone through the property page of an AVI multiplexer filter. However, you can implement this interface yourself if you're writing a filter that takes audio and video streams from a capture graph and generates an AVI file.

<A NAME="If_0001060120020000"></A><P><B>When to Use
</B>
<P>Use this interface when your application must control how a file is captured.

<A NAME="If_0001060120030000"></A><P><B>Methods in Vtable Order

</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IConfigAviMux methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0120.htm#If_0001060120030100" TARGET="TEXT">SetMasterStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the master stream that other streams must synchronize to after the file is saved to disk.



 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0120.htm#If_0001060120030200" TARGET="TEXT">GetMasterStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the master stream that other streams must synchronize to after the file is written out.
 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0120.htm#If_0001060120030300" TARGET="TEXT">SetOutputCompatibilityIndex</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the AVI index format for the file that the multiplexer saves to.



 </FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0120.htm#If_0001060120030400" TARGET="TEXT">GetOutputCompatibilityIndex</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the AVI index format for the file that the multiplexer will write to.

</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_0001060120030100">IConfigAviMux::SetMasterStream</A></H3>
<A HREF="dssd0120.htm" TARGET="TEXT">IConfigAviMux Interface</A>
<P>Sets the master stream that other streams must synchronize to after the file is saved to disk.
<P><B>HRESULT</B> <B>SetMasterStream</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>iStream</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>iStream</I>
 </DT><DD>[in] Master input stream. Set to -1 to disable.



</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>Different streams in the capture scenario can



 capture at different rates if you are using separate audio and video capture cards.



 By specifying a master stream that all others must synchronize to, this method adjusts the frame rate or audio sampling rate to account for drifts in the rates.
<P>To eliminate capture drifts that can occur between audio sampling rates and video frame rates, it is recommended that you use combined audio/video cards for capture of large files.



<H5>See Also</H5>
<P><A HREF="dssd0120.htm#If_0001060120030200" TARGET="TEXT">IConfigAviMux::GetMasterStream</A>
 

<H3><HR COLOR=#0000FF><A NAME="If_0001060120030200">IConfigAviMux::GetMasterStream</A></H3>
<A HREF="dssd0120.htm" TARGET="TEXT">IConfigAviMux Interface</A>
<P>Retrieves the master stream that other streams must synchronize to after the file is written out.
<P><B>HRESULT</B> <B>GetMasterStream</B><B>(</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>*pStream</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pStream</I>
 </DT><DD>[out] Pointer to the master stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>To eliminate capture drifts that can occur between audio sampling rates and video frame rates, it is recommended that you use combined audio/video cards for capture of large files.



<H5>See Also</H5>
<P><A HREF="dssd0120.htm#If_0001060120030100" TARGET="TEXT">IConfigAviMux::SetMasterStream</A>
 

<H3><HR COLOR=#0000FF><A NAME="If_0001060120030300">IConfigAviMux::SetOutputCompatibilityIndex</A></H3>
<A HREF="dssd0120.htm" TARGET="TEXT">IConfigAviMux Interface</A>
<P>Sets the AVI index format for the file that the multiplexer saves to.
<P><B>HRESULT</B> <B>SetOutputCompatibilityIndex</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>fOldIndex</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>fOldIndex</I>
 </DT><DD>[in] TRUE indicates either AVI 1.0 (idx1) index format or AVI 2.0 (indx)



 index format; FALSE indicates only AVI 2.0 (indx) index format.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>Remarks</H5>
<P>In addition to backward compatibility with Video for Windows&#174;



 AVI index formats (idx1), DirectShow also supports extended AVI 2.0 index format (indx), which this method can specify. AVI 2.0 index format allows for increased AVI file size (greater than 1 GB), hierarchical indexing, incremental growth of files, and minimal disk seeks. See <A HREF="dssd0075.htm#avispec_0001050502030000" TARGET="TEXT">AVI 2.0 File Format Extensions</A> for more information on AVI 2.0.

<H5>See Also</H5>
<P><A HREF="dssd0120.htm#If_0001060120030400" TARGET="TEXT">IConfigAviMux::GetOutputCompatibilityIndex</A>

<H3><HR COLOR=#0000FF><A NAME="If_0001060120030400">IConfigAviMux::GetOutputCompatibilityIndex</A></H3>
<A HREF="dssd0120.htm" TARGET="TEXT">IConfigAviMux Interface</A>
<P>Retrieves the AVI index format for the file that the multiplexer will write to.
<P><B>HRESULT</B> <B>GetOutputCompatibilityIndex</B><B>(</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>*pfOldIndex</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pfOldIndex</I>
 </DT><DD>[out] Value indicating the index format. Returns TRUE if AVI 1.0 (idx1) index format or AVI 2.0 (indx) index format is set; returns FALSE if only AVI 2.0 (indx) index format is set.




</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value that depends on the implementation of the interface. 

<H5>See Also</H5>
<P><A HREF="dssd0120.htm#If_0001060120030300" TARGET="TEXT">SetOutputCompatibilityIndex</A>
 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
