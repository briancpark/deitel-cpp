<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IAMovie Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0102.htm','/dssd0000.htm','/dssd0088.htm','/index.htm','/dssd0104.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="If_000106010f000000">IAMovie Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IAMovie</B> interface is a plug-in distributor (PID) interface that you could use as a replacement for all other interfaces on the filter graph manager. It wraps the most commonly used methods of <A HREF="dssd0146.htm" TARGET="TEXT">IGraphBuilder</A>, <A HREF="dssd0149.htm" TARGET="TEXT">IMediaControl</A>, <A HREF="dssd0150.htm" TARGET="TEXT">IMediaEvent</A>, and <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> by providing the same methods as these interfaces and simply calling these interfaces on the filter graph manager for the implementation. It also adds several unique methods that simplify instantiating and running a filter graph. 

<A NAME="If_000106010f010000"></A><P><B>When to Implement</B>
<P>This interface is implemented by the IAMovie sample plug-in distributor included in this SDK. It is not expected that anything else will implement this interface. 

<A NAME="If_000106010f020000"></A><P><B>When to Use</B>
<P>Applications use plug-in distributors. If this interface is implemented through the IAMovie sample application, you can use the methods on this interface rather than the methods on the <A HREF="dssd0146.htm" TARGET="TEXT">IGraphBuilder</A>, <A HREF="dssd0149.htm" TARGET="TEXT">IMediaControl</A>, <A HREF="dssd0150.htm" TARGET="TEXT">IMediaEvent</A>, and <A HREF="dssd0154.htm" TARGET="TEXT">IMediaPosition</A> interfaces. You can also use specialized methods on this interface
to render a filter graph and play it in one command, to enumerate filters in the filter graph that contain a specified interface, to enumerate all pins in the filter graph, and to perform other tasks. 

<A NAME="If_000106010f030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Returns pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IFilterGraph methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030100" TARGET="TEXT">AddFilter</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds a filter to the graph and gives it a name.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030700" TARGET="TEXT">RemoveFilter</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Removes a filter from the graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030600" TARGET="TEXT">Reconnect</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Breaks the existing pin connection and reconnects it to the same pin.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030400" TARGET="TEXT">EnumFilters</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Provides an enumerator for all filters in the graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030500" TARGET="TEXT">FindFilterByName</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Finds a filter that was added with a specified name.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030200" TARGET="TEXT">ConnectDirect</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects the two <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> objects directly (without intervening filters).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030600" TARGET="TEXT">Reconnect</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Breaks the existing pin connection and reconnects it to the same pin.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030300" TARGET="TEXT">Disconnect</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Disconnects the pin, if connected.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0140.htm#If_0001060134030800" TARGET="TEXT">SetDefaultSyncSource</A>
</FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the default synchronization source (a clock).
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IAMovie methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
 </B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030300" TARGET="TEXT">Connect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Connects two <A HREF="dssd0165.htm" TARGET="TEXT">IPin</A> objects. If they will not connect directly, this method
connects them with intervening transforms.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031900" TARGET="TEXT">Render</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds a chain of filters to this output pin so as to render it.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031e00" TARGET="TEXT">Run</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Switches the entire filter graph into running mode.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031100" TARGET="TEXT">Pause</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pauses all filters in the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031f00" TARGET="TEXT">Stop</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Switches all filters in the filter graph to a stopped state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031000" TARGET="TEXT">GetState</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the state of the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031b00" TARGET="TEXT">RenderFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds and connects filters needed to play the specified file.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030100" TARGET="TEXT">AddSourceFilter</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adds to the graph the source filter that can read the given file name, 
and returns an interface pointer to the filter object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030f00" TARGET="TEXT">GetEventHandle</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a handle to a manual-reset event that will be signaled.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030e00" TARGET="TEXT">GetEvent</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the next notification event.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f032000" TARGET="TEXT">WaitForCompletion</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Waits until the graph's operation has completed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030200" TARGET="TEXT">CancelDefaultHandling</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Cancels any default handling of the specified event by the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031d00" TARGET="TEXT">RestoreDefaultHandling</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Restores default handling for this event.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030a00" TARGET="TEXT">get_Duration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the total duration of the media stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031400" TARGET="TEXT">put_CurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the time that the media stream begins.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030900" TARGET="TEXT">get_CurrentPosition</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the current position in terms of the total length of the media stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030d00" TARGET="TEXT">get_StopTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the position within the media stream at which playback should stop.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031700" TARGET="TEXT">put_StopTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the position within the media stream at which playback should stop.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030b00" TARGET="TEXT">get_PrerollTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the time prior to the start position that the filter graph
begins any nonrandom access device rolling.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031500" TARGET="TEXT">put_PrerollTime</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the time prior to the start position that the filter graph begins any nonrandom access
device rolling.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031600" TARGET="TEXT">put_Rate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the playback rate, relative to normal playback of the media stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030c00" TARGET="TEXT">get_Rate</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the playback rate, relative to normal playback of the media stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031800" TARGET="TEXT">RemoveAllFilters</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Removes all filters from the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031200" TARGET="TEXT">Play</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Plays the media in the current filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031300" TARGET="TEXT">PlayFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Plays the media in a given file.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030400" TARGET="TEXT">EnumFiltersByInterface</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a list of filters supporting a specified interface. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030500" TARGET="TEXT">EnumPins</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a list of pins in the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030600" TARGET="TEXT">EnumPinsIn</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a list of input pins in the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030700" TARGET="TEXT">EnumPinsOut</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves a list of output pins in the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031a00" TARGET="TEXT">RenderAll</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Renders all output pins in the filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f031c00" TARGET="TEXT">RenderNewFile</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Renders a filter graph for a file name, possibly reusing existing filters. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0103.htm#If_000106010f030800" TARGET="TEXT">FreeEventParams</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Frees the resources associated with an event's parameters.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030100">IAMovie::AddSourceFilter</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Adds a source filter to the filter graph for this file. The <A HREF="dssd0146.htm#If_000106013a030400" TARGET="TEXT">IGraphBuilder::RenderFile</A> method adds the same source filter.

<P><B>HRESULT</B> <B>AddSourceFilter</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>lpwstrFileName</I><B>,</B><BR>&nbsp;&nbsp;<B>IBaseFilter*</B> <B>*</B> <I>ppFilter</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lpwstrFileName</I>
</DT><DD>[in] Pointer to the file.
</DD><DT><I>ppFilter</I>
</DT><DD>[out] Pointer to an <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface on the filter that was added.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0146.htm#If_000106013a030100" TARGET="TEXT">IGraphBuilder::AddSourceFilter</A> method. The <I>lpwstrFileName</I> file name is used as the filter name when <B>IGraphBuilder::AddSourceFilter</B> is called. 

<H3><HR COLOR=#0000FF><A NAME="If_000106010f030200">IAMovie::CancelDefaultHandling</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Cancels any default handling by the filter graph of the specified event and ensures that it is passed to the application.

<P><B>HRESULT</B> <B>CancelDefaultHandling</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>lEvCode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lEvCode</I>
 </DT><DD>Event code for which to cancel default handling.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful, or S_FALSE if the event does not have any default handling.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0150.htm#If_000106013e030100" TARGET="TEXT">IMediaEvent::CancelDefaultHandling</A> method. 

<H3><HR COLOR=#0000FF><A NAME="If_000106010f030300">IAMovie::Connect</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Connects the two pins, using intermediates if necessary.

<P><B>HRESULT</B> <B>Connect</B><B>(</B><BR>&nbsp;&nbsp;<B>IPin</B> <B>*</B> <I>ppinOut</I><B>,</B><BR>&nbsp;&nbsp;<B>IPin</B> <B>*</B> <I>ppinIn</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppinOut</I>
</DT><DD>[in] Output pin.
</DD><DT><I>ppinIn</I>
</DT><DD>[in] Input pin.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0146.htm#If_000106013a030200" TARGET="TEXT">IGraphBuilder::Connect</A> method. 

<H3><HR COLOR=#0000FF><A NAME="If_000106010f030400">IAMovie::EnumFiltersByInterface</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves a list of filters supporting a specified interface. 

<P><B>HRESULT</B> <B>EnumFiltersByInterface</B><B>(</B><BR>&nbsp;&nbsp;<B>REFIID</B> <I>riid</I><B>,</B><BR>&nbsp;&nbsp;<B>IEnumFilters</B> <B>**</B> <I>ppEnum</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>riid</I>
 </DT><DD>[in] REFIID of the interface qualifying the search.
</DD><DT><I>ppEnum</I>
 </DT><DD>[out] Retrieved <A HREF="dssd0131.htm" TARGET="TEXT">IEnumFilters</A> enumerator containing the matching filters.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method retrieves an <A HREF="dssd0131.htm" TARGET="TEXT">IEnumFilters</A> enumerator containing a list of pointers to filters in the filter graph that support a specified interface. Note that the pointers in the list (as returned by <A HREF="dssd0131.htm#If_000106012b030200" TARGET="TEXT">IEnumFilters::Next</A>) actually point to the specified <I>riid</I> interface on each filter rather than to the <A HREF="dssd0116.htm" TARGET="TEXT">IBaseFilter</A> interface. For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030500">IAMovie::EnumPins</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves a list of pins in the filter graph.

<P><B>HRESULT</B> <B>EnumPins</B><B>(</B><BR>&nbsp;&nbsp;<B>IEnumPins</B> <B>**</B> <I>ppEnum</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppEnum</I>
 </DT><DD>[out] Enumerator containing the list of pins.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030600">IAMovie::EnumPinsIn</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves a list of input pins in the filter graph.

<P><B>HRESULT</B> <B>EnumPinsIn</B><B>(</B><BR>&nbsp;&nbsp;<B>IEnumPins</B> <B>**</B> <I>ppEnum</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppEnum</I>
 </DT><DD>[out] Enumerator containing the list of input pins.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030700">IAMovie::EnumPinsOut</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves a list of output pins in the filter graph.

<P><B>HRESULT</B> <B>EnumPinsOut</B><B>(</B><BR>&nbsp;&nbsp;<B>IEnumPins</B> <B>**</B> <I>ppEnum</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppEnum</I>
 </DT><DD>[out] Enumerator containing the list of output pins.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030800">IAMovie::FreeEventParams</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Frees the resources associated with an event's parameters.

<P><B>HRESULT</B> <B>FreeEventParams</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>lEvCode</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>lParam1</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>lParam2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lEvCode</I>
 </DT><DD>Event code.
</DD><DT><I>lParam1</I>
 </DT><DD>Event's first parameter.
</DD><DT><I>lParam2</I>
 </DT><DD>Event's second parameter.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A>.


<H5>Remarks</H5>
<P>The <I>lParam1</I> and <I>lParam2</I> parameters must be <A HREF="dssd0389.htm#external_00010a01090000aa" TARGET="TEXT">LONG</A> values, <A HREF="dssd0389.htm#external_00010a0109000006" TARGET="TEXT">BSTR</A> values, or <A HREF="dssd0175.htm" TARGET="TEXT">IUnknown</A> interface pointers. If an argument is a <B>LONG</B> value, <B>FreeEventParams</B> does nothing to it. If it is an <B>IUnknown</B> interface pointer, its reference count has been incremented. Call its 
<A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> method to decrement its reference count after calling <B>FreeEventParams</B>. If the argument is a <B>BSTR</B> value, free it by calling the task allocator after <B>FreeEventParams</B>.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030900">IAMovie::get_CurrentPosition</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves the current position in terms of the total length of the media stream.

<P><B>HRESULT</B> <B>get_CurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pllTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pllTime</I>
 </DT><DD>[out] Reference time of the current position.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030300" TARGET="TEXT">IMediaPosition::get_CurrentPosition</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030a00">IAMovie::get_Duration</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves the total duration of the media stream.

<P><B>HRESULT</B> <B>get_Duration</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>plength</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>plength</I>
 </DT><DD>[out] Returned length of the media stream.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030400" TARGET="TEXT">IMediaPosition::get_Duration</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030b00">IAMovie::get_PrerollTime</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves the time prior to the start position that devices should start rolling.

<P><B>HRESULT</B> <B>get_PrerollTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTime</I>
 </DT><DD>[out] Returned preroll time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030500" TARGET="TEXT">IMediaPosition::get_PrerollTime</A> method. 

<H3><HR COLOR=#0000FF><A NAME="If_000106010f030c00">IAMovie::get_Rate</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves the rate of playback relative to normal playback speed.

<P><B>HRESULT</B> <B>get_Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <B>*</B> <I>pdRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdRate</I>
</DT><DD>[out] Returned rate.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030600" TARGET="TEXT">IMediaPosition::get_Rate</A> method. 

<H3><HR COLOR=#0000FF><A NAME="If_000106010f030d00">IAMovie::get_StopTime</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves the time at which the media stream stops.

<P><B>HRESULT</B> <B>get_StopTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME*</B> <I>pTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pTime</I>
 </DT><DD>[out] Returned stop time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030700" TARGET="TEXT">IMediaPosition::get_StopTime</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030e00">IAMovie::GetEvent</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves the next notification event.

<P><B>HRESULT</B> <B>GetEvent</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <B>*</B> <I>lEventCode</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <B>*</B> <I>lParam1</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <B>*</B> <I>lParam2</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <I>msTimeout</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lEventCode</I>
 </DT><DD>[out] Next event notification.
</DD><DT><I>lParam1</I>
 </DT><DD>[out] First parameter of the event. 
</DD><DT><I>lParam2</I>
 </DT><DD>[out] Second parameter of the event. 
</DD><DT><I>msTimeout</I>
 </DT><DD>[in] Time, in milliseconds, to wait before assuming that there are no events.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0150.htm#If_000106013e030300" TARGET="TEXT">IMediaEvent::GetEvent</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f030f00">IAMovie::GetEventHandle</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Retrieves a handle to a manual-reset event that will be signaled as long as there are event notifications to deliver.

<P><B>HRESULT</B> <B>GetEventHandle</B><B>(</B><BR>&nbsp;&nbsp;<B>OAEVENT</B> <B>*</B> <I>hEvent</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>hEvent</I>
 </DT><DD>[out] Handle for the event.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0150.htm#If_000106013e030400" TARGET="TEXT">IMediaEvent::GetEventHandle</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031000">IAMovie::GetState</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Determines the state of the filter.

<P><B>HRESULT</B> <B>GetState</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwMilliSecsTimeout</I><B>,</B><BR>&nbsp;&nbsp;<B>FILTER_STATE</B> <B>*</B> <I>State</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dwMilliSecsTimeout</I>
</DT><DD>[in] Duration of the time-out, in milliseconds. To block indefinitely, pass INFINITE.
</DD><DT><I>State</I>
</DT><DD>[out] Holder of the returned state of the filter. States include stopped, paused, running, or intermediate (in the process of changing).
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value, which will be <A HREF="dssd0293.htm#errcodes_0001060a01000060" TARGET="TEXT">VFW_S_STATE_INTERMEDIATE</A> if the state
transition is not complete, or S_OK if it has been successfully completed.

<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0149.htm#If_000106013d030400" TARGET="TEXT">IMediaControl::GetState</A> method. Note that the state is returned in a
<A HREF="dssd0288.htm#dtypes_0001060601001800" TARGET="TEXT">FILTER_STATE</A> structure rather than as an OAFilterState type.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031100">IAMovie::Pause</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Pauses all the filters in the filter graph.

<P><B>HRESULT</B> <B>Pause</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0149.htm#If_000106013d030500" TARGET="TEXT">IMediaControl::Pause</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031200">IAMovie::Play</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Plays the media in the current filter graph.

<P><B>HRESULT</B> <B>Play</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method runs the filter graph to completion by calling <A HREF="dssd0103.htm#If_000106010f031e00" TARGET="TEXT">IAMovie::Run</A>, and waits for it to complete by calling 
<A HREF="dssd0103.htm#If_000106010f032000" TARGET="TEXT">IAMovie::WaitForCompletion</A>. For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031300">IAMovie::PlayFile</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Plays the media in a given file.

<P><B>HRESULT</B> <B>PlayFile</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>strFilename</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strFilename</I>
 </DT><DD>[in] Name of the file to play.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method calls the <A HREF="dssd0103.htm#If_000106010f031c00" TARGET="TEXT">IAMovie::RenderNewFile</A> method to build a filter graph capable of rendering the 
file passed in <I>strFilename</I> and then plays the file by calling <A HREF="dssd0103.htm#If_000106010f031200" TARGET="TEXT">IAMovie::Play</A>. For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031400">IAMovie::put_CurrentPosition</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Sets the time that the media stream begins.

<P><B>HRESULT</B> <B>put_CurrentPosition</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>Time</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Time</I>
 </DT><DD>[in] Start time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030800" TARGET="TEXT">IMediaPosition::put_CurrentPosition</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031500">IAMovie::put_PrerollTime</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Sets the time prior to the start position that devices should start rolling.

<P><B>HRESULT</B> <B>put_PrerollTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>llTime</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>llTime</I>
</DT><DD>[in] Preroll time to be set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030900" TARGET="TEXT">IMediaPosition::put_PrerollTime</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031600">IAMovie::put_Rate</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Sets the rate of playback relative to normal speed.

<P><B>HRESULT</B> <B>put_Rate</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>dRate</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>dRate</I>
</DT><DD>[in] Rate to set.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030a00" TARGET="TEXT">IMediaPosition::put_Rate</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031700">IAMovie::put_StopTime</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Sets the time at which the media stream will stop.

<P><B>HRESULT</B> <B>put_StopTime</B><B>(</B><BR>&nbsp;&nbsp;<B>REFTIME</B> <I>Time</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>Time</I>
 </DT><DD>[in] Stop time.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0154.htm#If_0001060142030b00" TARGET="TEXT">IMediaPosition::put_StopTime</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031800">IAMovie::RemoveAllFilters</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Removes all filters from the filter graph.

<P><B>HRESULT</B> <B>RemoveAllFilters</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method enumerates all filters in the filter graph and then removes each of them by calling 
<A HREF="dssd0140.htm#If_0001060134030700" TARGET="TEXT">RemoveFilter</A>. For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031900">IAMovie::Render</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Builds a filter graph that renders the data from this output pin.

<P><B>HRESULT</B> <B>Render</B><B>(</B><BR>&nbsp;&nbsp;<B>IPin</B> <B>*</B> <I>ppinOut</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ppinOut</I>
</DT><DD>[in] Output pin.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0146.htm#If_000106013a030300" TARGET="TEXT">IGraphBuilder::Render</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031a00">IAMovie::RenderAll</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Renders all output pins in the filter graph.

<P><B>HRESULT</B> <B>RenderAll</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This member function enumerates all output pins in the filter graph and renders each of them (builds a filter graph capable of rendering the media type) by calling <A HREF="dssd0103.htm#If_000106010f031900" TARGET="TEXT">IAMovie::Render</A> for each output pin. For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031b00">IAMovie::RenderFile</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Adds and connects filters needed to play the specified file.

<P><B>HRESULT</B> <B>RenderFile</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>strFilename</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strFilename</I>
 </DT><DD>Name of the file to render.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0146.htm#If_000106013a030400" TARGET="TEXT">IGraphBuilder::RenderFile</A> method with the <I>PlayList</I> parameter of that method set to NULL. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031c00">IAMovie::RenderNewFile</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Renders a filter graph for a file name, possibly reusing existing filters. 

<P><B>HRESULT</B> <B>RenderNewFile</B><B>(</B><BR>&nbsp;&nbsp;<B>LPCWSTR</B> <I>strFilename</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>strFilename</I>
 </DT><DD>[in] Name of the file to be rendered.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method disconnects all filters in the filter graph, then renders the file in the <I>strFilename</I> parameter by calling <A HREF="dssd0103.htm#If_000106010f031b00" TARGET="TEXT">IAMovie::RenderFile</A>. This will use the disconnected filters if they can be used to render the file. It then removes any unconnected filters left in the filter graph. For implementation details of this method, see the IAMovie sample plug-in distributor included in this SDK.
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031d00">IAMovie::RestoreDefaultHandling</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Reinstates the normal default handling by a filter graph for the specified event if there is one.

<P><B>HRESULT</B> <B>RestoreDefaultHandling</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>lEvCode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>lEvCode</I>
 </DT><DD>[in] Event to restore.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful, or S_FALSE if there is no default handling for this event.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0150.htm#If_000106013e030500" TARGET="TEXT">IMediaEvent::RestoreDefaultHandling</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031e00">IAMovie::Run</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Switches the entire filter graph into a running state.

<P><B>HRESULT</B> <B>Run</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0149.htm#If_000106013d030700" TARGET="TEXT">IMediaControl::Run</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f031f00">IAMovie::Stop</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Switches all filters in the filter graph to the stopped state.

<P><B>HRESULT</B> <B>Stop</B><B>(</B> <B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0149.htm#If_000106013d030800" TARGET="TEXT">IMediaControl::Stop</A> method. 
<H3><HR COLOR=#0000FF><A NAME="If_000106010f032000">IAMovie::WaitForCompletion</A></H3>
<A HREF="dssd0103.htm" TARGET="TEXT">IAMovie Interface</A>
<P>Provides a simplified way for applications to wait until the filter graph's operation has completed. It is the equivalent of blocking until the event notification <A HREF="dssd0291.htm#events_0001060801000400" TARGET="TEXT">EC_COMPLETE</A>, <A HREF="dssd0291.htm#events_0001060801000700" TARGET="TEXT">EC_ERRORABORT</A>, or <A HREF="dssd0291.htm#events_0001060801001700" TARGET="TEXT">EC_USERABORT</A> is received.


<P><B>HRESULT</B> <B>WaitForCompletion</B><B>(</B><BR>&nbsp;&nbsp;<B>long</B> <I>msTimeout</I><B>,</B><BR>&nbsp;&nbsp;<B>long</B> <B>*</B> <I>pEvCode</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>msTimeout</I>
 </DT><DD>[in] Duration of the time-out, in milliseconds. To block indefinitely, pass INFINITE.
</DD><DT><I>pEvCode</I>
 </DT><DD>[out] Event to wait for.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>This method simply calls the <A HREF="dssd0150.htm#If_000106013e030600" TARGET="TEXT">IMediaEvent::WaitForCompletion</A> method. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
