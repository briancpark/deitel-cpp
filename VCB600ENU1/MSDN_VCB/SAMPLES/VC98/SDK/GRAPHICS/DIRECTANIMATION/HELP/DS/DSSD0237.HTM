<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>CPullPin Class</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0236.htm','/dssd0000.htm','/dssd0180.htm','/index.htm','/dssd0238.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="Lib_0001060239000000">CPullPin Class</A></H2>
<BR CLEAR=ALL>
<P><IMG SRC="art/pulpin01.gif" WIDTH="205" HEIGHT="56" ALT="CPullPin class hierarchy" >

<P>The <B>CPullPin</B> class is provided to allow a filter downstream from the source to create a thread and pull a media stream from an asynchronous source filter that supports the <A HREF="dssd0114.htm" TARGET="TEXT">IAsyncReader</A> interface. Typically this class is implemented on the input pin of a parser filter, since the Microsoft&#174; DirectShow&#153; asynchronous reader filter just reads a media stream from a file and provides no parsing.

<A NAME="Lib_0001060239010000"></A><P><B>Protected Data Members</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B><A NAME="Lib_0001060239010001">m_pAlloc</A></B>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Pointer to the <A HREF="dssd0160.htm" TARGET="TEXT">IMemAllocator</A> interface used by the connection. 
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060239020000"></A><P><B>Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030100" TARGET="TEXT">Active</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the pin to start pulling data from the asynchronous reader.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030200" TARGET="TEXT">AlignDown</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Aligns a <A HREF="dssd0389.htm#external_00010a01090000ab" TARGET="TEXT">LONGLONG</A> value down to the next <A HREF="dssd0389.htm#external_00010a01090000aa" TARGET="TEXT">LONG</A> boundary.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030300" TARGET="TEXT">AlignUp</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Aligns a <A HREF="dssd0389.htm#external_00010a01090000ab" TARGET="TEXT">LONGLONG</A> value up to the next <A HREF="dssd0389.htm#external_00010a01090000aa" TARGET="TEXT">LONG</A> boundary.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030500" TARGET="TEXT">Connect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Initiates a connection from this pin to the asynchronous reader.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030600" TARGET="TEXT">CPullPin</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Constructs a <A HREF="dssd0237.htm" TARGET="TEXT">CPullPin</A> object.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030800" TARGET="TEXT">Disconnect</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Breaks a connection to the asynchronous reader.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030900" TARGET="TEXT">Duration</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the total duration of the media stream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030c00" TARGET="TEXT">GetReader</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves the asynchronous reader interface. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030d00" TARGET="TEXT">Inactive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Instructs the pin to stop pulling data from the asynchronous reader.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239031000" TARGET="TEXT">Seek</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the start and stop times of the media stream.
</FONT></TD></TR></TABLE>
<A NAME="Lib_0001060239030000"></A><P><B>Overridable Member Functions</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Name </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030400" TARGET="TEXT">BeginFlush</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Flushes this pin and all downstream pins.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030700" TARGET="TEXT">DecideAllocator</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Proposes an allocator for use by the asynchronous reader.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030a00" TARGET="TEXT">EndFlush</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Signals end of flushing operation.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030b00" TARGET="TEXT">EndOfStream</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sends end-of-stream notification downstream.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030e00" TARGET="TEXT">OnError</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Handles run-time errors that caused pulling to stop.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0237.htm#Lib_0001060239030f00" TARGET="TEXT">Receive</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Handles the arrival of data from the asynchronous reader.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030100">CPullPin::Active</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Instructs the pin to start pulling data from the asynchronous reader.

<P><B>HRESULT</B> <B>Active</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H5>Remarks</H5>
<P>The reader interface must be retrieved and the allocator decided before calling this 
member function. This is handled by the <A HREF="dssd0237.htm#Lib_0001060239030500" TARGET="TEXT">CPullPin::Connect</A> member function.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030200">CPullPin::AlignDown</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Aligns a <A HREF="dssd0389.htm#external_00010a01090000ab" TARGET="TEXT">LONGLONG</A> value down to the next <A HREF="dssd0389.htm#external_00010a01090000aa" TARGET="TEXT">LONG</A> boundary.

<P><B>LONGLONG</B> <B>AlignDown</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <I>ll</I><B>,</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>lAlign</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B> <BR><H5>Parameters</H5>
<DL><DT><I>ll</I>
 </DT><DD>Element to be aligned.
</DD><DT><I>lAlign</I>
 </DT><DD>Alignment boundary.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <I>ll</I> value aligned to <I>lAlign</I>.


<H5>Remarks</H5>
<P>Aligning downward is a truncation operation.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030300">CPullPin::AlignUp</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Aligns a <A HREF="dssd0389.htm#external_00010a01090000ab" TARGET="TEXT">LONGLONG</A> value up to the next <A HREF="dssd0389.htm#external_00010a01090000aa" TARGET="TEXT">LONG</A> boundary.

<P><B>LONGLONG</B> <B>AlignUp</B><B>(</B><BR>&nbsp;&nbsp;<B>LONGLONG</B> <I>ll</I><B>,</B><BR>&nbsp;&nbsp;<B>LONG</B> <I>lAlign</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ll</I>
 </DT><DD>Element to be aligned.
</DD><DT><I>lAlign</I>
 </DT><DD>Alignment boundary.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.


<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030400">CPullPin::BeginFlush</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Override to flush this pin and all downstream pins.

<P><B>virtual</B> <B>HRESULT</B> <B>BeginFlush</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called by the <A HREF="dssd0237.htm#Lib_0001060239031000" TARGET="TEXT">CPullPin::Seek</A> member function before
pausing the thread prior to a seeking operation. You must implement this member function to 
call the <A HREF="dssd0165.htm#If_000106014d030100" TARGET="TEXT">IPin::BeginFlush</A> method on the connected downstream pin. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030500">CPullPin::Connect</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Initiates a connection from this pin to the asynchronous reader.

<P><B>HRESULT</B> <B>Connect</B><B>(</B><BR>&nbsp;&nbsp;<B>IUnknown*</B> <I>pUnk</I><B>,</B><BR>&nbsp;&nbsp;<B>IMemAllocator*</B> <I>pAlloc</I><B>,</B><BR>&nbsp;&nbsp;<B>BOOL</B> <I>bSync</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pUnk</I>
 </DT><DD>Object to query for existence of asynchronous reader (<A HREF="dssd0114.htm" TARGET="TEXT">IAsyncReader</A>).
</DD><DT><I>pAlloc</I>
 </DT><DD>Optional allocator to propose as preferred allocator if necessary.
</DD><DT><I>bSync</I>
 </DT><DD>Set TRUE if the reader uses synchronous rather than asynchronous reads.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successfully connected to the <A HREF="dssd0114.htm" TARGET="TEXT">IAsyncReader</A> interface
from the object specified by <I>pUnk</I>.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030600">CPullPin::CPullPin</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Constructs a <A HREF="dssd0237.htm" TARGET="TEXT">CPullPin</A> object.

<P><B>CPullPin</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>No return value.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030700">CPullPin::DecideAllocator</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Negotiates an allocator to use with the asynchronous reader.

<P><B>virtual</B> <B>HRESULT</B> <B>DecideAllocator</B><B>(</B><BR>&nbsp;&nbsp;<B>IMemAllocator*</B> <I>pAlloc</I><B>,</B><BR>&nbsp;&nbsp;<B>ALLOCATOR_PROPERTIES</B> <B>*</B> <I>pProps</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pAlloc</I>
 </DT><DD>Allocator to propose as the preferred allocator (optional). Pass NULL if you aren't proposing an allocator.
</DD><DT><I>pProps</I>
 </DT><DD>Size, count, and alignment of the allocator (optional). Pass 0 if not requesting the allocator properties. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful, VFW_E_BADALIGN if <I>eProps</I> contains an invalid alignment property, E_OUTOFMEMORY if there is not enough memory available to create an allocator, and E_NOINTERFACE if the created <A HREF="dssd0160.htm" TARGET="TEXT">IMemAllocator</A> interface is invalid.

<H5>Remarks</H5>
<P>This member function calls the <A HREF="dssd0114.htm#If_000106011a030500" TARGET="TEXT">IAsyncReader::RequestAllocator</A> method to negotiate an allocator. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030800">CPullPin::Disconnect</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Breaks a connection to the asynchronous reader.

<P><B>HRESULT</B> <B>Disconnect</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns NOERROR if there is no connection.

<H5>Remarks</H5>
<P>This member function disconnects any connection to an 
asynchronous file reader made in the <A HREF="dssd0237.htm#Lib_0001060239030500" TARGET="TEXT">CPullPin::Connect</A> method.
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030900">CPullPin::Duration</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Retrieves the total duration of the media stream.

<P><B>HRESULT</B> <B>Duration</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME*</B> <I>ptDuration</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>ptDuration</I>
 </DT><DD>Duration measured in bytes multiplied by UNIT (10,000,000).
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030a00">CPullPin::EndFlush</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Override to signal the end of a flushing operation.

<P><B>virtual</B> <B>HRESULT</B> <B>EndFlush</B><B>(</B><B>void</B><B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called by the <A HREF="dssd0237.htm#Lib_0001060239031000" TARGET="TEXT">CPullPin::Seek</A> member function after
pausing the thread prior to a seeking operation. You must implement this member function to 
call the <A HREF="dssd0165.htm#If_000106014d030600" TARGET="TEXT">IPin::EndFlush</A> method on the connected downstream pin. 

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030b00">CPullPin::EndOfStream</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Override to send an end-of-stream notification downstream. 

<P><B>virtual</B> <B>HRESULT</B> <B>EndOfStream</B><B>(</B><B>void</B><B>)</B> <B>PURE;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function is called during processing of received samples when the end of the 
stream is reached. You must implement this member function to 
call the <A HREF="dssd0165.htm#If_000106014d030700" TARGET="TEXT">IPin::EndOfStream</A> method on the connected downstream pin. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030c00">CPullPin::GetReader</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Returns the asynchronous reader.

<P><B>IAsyncReader*</B> <B>GetReader</B><B>(</B><B>void</B><B>)</B><B>;</B> <BR><H5>Return Values</H5>
<P>Returns a reference-counted <A HREF="dssd0114.htm" TARGET="TEXT">IAsyncReader</A> interface.

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030d00">CPullPin::Inactive</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Instructs the pin to stop pulling data from the asynchronous reader.

<P><B>HRESULT</B> <B>Inactive</B><B>(</B><B>void</B><B>)</B><B>;</B><BR><H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>This member function calls the <A HREF="dssd0114.htm#If_000106011a030100" TARGET="TEXT">IAsyncReader::BeginFlush</A> method,
ends the thread, calls the <A HREF="dssd0114.htm#If_000106011a030200" TARGET="TEXT">IAsyncReader::EndFlush</A> method and then 
decommits the allocator. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030e00">CPullPin::OnError</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Override to handle run-time errors that caused pulling to stop.

<P><B>virtual</B> <B>void</B> <B>OnError</B><B>(</B><BR>&nbsp;&nbsp;<B>HRESULT</B> <I>hr</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>hr</I>
 </DT><DD><A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value of the trapped error.
</DD></DL>
<H5>Return Values</H5>
<P>No return value.
<H5>Remarks</H5>
<P>These errors are returned from the upstream filter (the asynchronous reader), which will have
already reported errors to the filter graph manager. This member function must be implemented
since it is called by several <A HREF="dssd0237.htm" TARGET="TEXT">CPullPin</A> member functions when trapping errors. 

<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239030f00">CPullPin::Receive</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Override this member function to handle the arrival of data from the asynchronous reader.

<P><B>virtual</B> <B>HRESULT</B> <B>Receive</B><B>(</B><BR>&nbsp;&nbsp;<B>IMediaSample</B> <B>*</B> <I>pSample</I><BR>&nbsp;&nbsp;<B>)</B> <B>PURE;</B><BR><H5>Parameters</H5>
<DL><DT><I>pSample</I>
</DT><DD>[in] Pointer to a media sample.
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value. Returning a value other than S_OK will stop the data.

<H5>Remarks</H5>
<P> You must implement this member function in your derived class.
This member function is called whenever a new sample arrives while processing the sample stream. 
It should be written in the same manner as the <A HREF="dssd0161.htm#If_0001060149030400" TARGET="TEXT">IMemInputPin::Receive</A> method on an input pin. 
<H3><HR COLOR=#0000FF><A NAME="Lib_0001060239031000">CPullPin::Seek</A></H3>
<A HREF="dssd0237.htm" TARGET="TEXT">CPullPin Class</A>
<P>Sets the start and stop times of the media stream.

<P><B>HRESULT</B> <B>Seek</B><B>(</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStart</I><B>,</B><BR>&nbsp;&nbsp;<B>REFERENCE_TIME</B> <I>tStop</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>tStart</I>
 </DT><DD>Start time (defaults to zero).
</DD><DT><I>tStop</I>
 </DT><DD>Stop time (defaults to the value of <A HREF="dssd0237.htm#Lib_0001060239030900" TARGET="TEXT">CPullPin::Duration</A>).
</DD></DL>
<H5>Return Values</H5>
<P>Returns an <A HREF="dssd0293.htm#errcodes_0001060a01000001" TARGET="TEXT">HRESULT</A> value.

<H5>Remarks</H5>
<P>If the filter graph is running (active), the media rendering will start 
immediately at the new position defined by <I>tStart</I>. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
