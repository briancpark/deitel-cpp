<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>IMemoryData Interface</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0367.htm','/dssd0000.htm','/dssd0360.htm','/index.htm','/dssd0369.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="mms_face_0001080308000000">IMemoryData Interface</A></H2>
<BR CLEAR=ALL>
<P>The <B>IMemoryData</B> interface contains methods which set and retrieve memory data on audio data objects. Audio data objects provide the underlying data which stream samples access. This interface provides a way to initialize memory buffers and to set actual amounts of audio data in the objects. Additionally, the <A HREF="dssd0368.htm#mms_face_0001080308030100" TARGET="TEXT">GetInfo</A> method can be used to retrieve audio memory data.

<A NAME="mms_face_0001080308010000"></A><P><B>When to Implement</B>
<P>Implement this interface on underlying audio data objects which will be accessed by audio stream sample objects.

<A NAME="mms_face_0001080308020000"></A><P><B>When to Use</B>
<P>Typically these methods are usually called by the <A HREF="dssd0366.htm" TARGET="TEXT">IAudioMediaStream</A> or <A HREF="dssd0367.htm" TARGET="TEXT">IAudioStreamSample</A> object rather than by the application.

<A NAME="mms_face_0001080308030000"></A><P><B>Methods in Vtable Order</B>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUnknown methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030200" TARGET="TEXT">QueryInterface</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves pointers to supported interfaces.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030100" TARGET="TEXT">AddRef</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Increments the reference count.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0175.htm#If_0001060157030300" TARGET="TEXT">Release</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Decrements the reference count.
</FONT></TD></TR></TABLE>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IMemoryData methods </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description

</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0368.htm#mms_face_0001080308030300" TARGET="TEXT">SetBuffer</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Initializes a memory buffer with a pointer to memory and length. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0368.htm#mms_face_0001080308030100" TARGET="TEXT">GetInfo</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Retrieves information describing an audio data object including how much data is actually in the object at the moment as last set by <A HREF="dssd0368.htm#mms_face_0001080308030200" TARGET="TEXT">SetActual</A>. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0368.htm#mms_face_0001080308030200" TARGET="TEXT">SetActual</A>
 </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sets the actual amount of audio data now in the object, in bytes.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080308030100">IMemoryData::GetInfo</A></H3>
<A HREF="dssd0368.htm" TARGET="TEXT">IMemoryData Interface</A>
<P>Retrieves information describing an audio data object including how much data is actually in the object at the moment as last set by <A HREF="dssd0368.htm#mms_face_0001080308030200" TARGET="TEXT">SetActual</A>.
<P><B>HRESULT</B> <B>GetInfo</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pdwLength</I><B>,</B><BR>&nbsp;&nbsp;<B>BYTE</B> <I>**ppbData</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>*pcbActualData</I> <B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>pdwLength</I>
 </DT><DD>[out] Length of memory in bytes, if non-NULL.
</DD><DT><I>ppbData</I>
 </DT><DD>[out] Pointer to the memory, if non-NULL.
</DD><DT><I>pcbActualData</I>
 </DT><DD>[out]Length of actual data in bytes, if non-NULL.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful.

<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080308030200">IMemoryData::SetActual</A></H3>
<A HREF="dssd0368.htm" TARGET="TEXT">IMemoryData Interface</A>
<P>Sets the actual amount of audio data now in the object, in bytes.
<P><B>HRESULT</B> <B>SetActual</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>cbDataValid</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>cbDataValid</I>
 </DT><DD>[in] The actual amount of data in bytes. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful or E_POINTER if required parameters is null.

<H5>Remarks</H5>
<P>This method is usually called by the <A HREF="dssd0366.htm" TARGET="TEXT">IAudioMediaStream</A> or <A HREF="dssd0367.htm" TARGET="TEXT">IAudioStreamSample</A> object rather than by the application.
<H3><HR COLOR=#0000FF><A NAME="mms_face_0001080308030300">IMemoryData::SetBuffer</A></H3>
<A HREF="dssd0368.htm" TARGET="TEXT">IMemoryData Interface</A>
<P>Initializes a memory buffer with a pointer to memory and length.
<P><B>HRESULT</B> <B>SetBuffer</B><B>(</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>cbSize</I><B>,</B><BR>&nbsp;&nbsp;<B>BYTE</B> <I>*pbData</I><B>,</B><BR>&nbsp;&nbsp;<B>DWORD</B> <I>dwFlags</I> <B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>cbSize</I>
 </DT><DD>[in] Size in bytes of memory pointed to by <I>pbData</I>.
</DD><DT><I>pbData</I>
 </DT><DD>[in] Pointer to memory to be used by this object.
</DD><DT><I>dwFlags</I>
 </DT><DD>[in] Flags. Must be 0.
</DD></DL>
<H5>Return Values</H5>
<P>Returns S_OK if successful or E_INVALIDARG if either the cbSize is 0 or pbData is NULL.

<H5>Remarks</H5>
<P>This method can be called more than once but should not be called when owned by a sample being processed by the <A HREF="dssd0363.htm#mms_face_0001080303030500" TARGET="TEXT">IStreamSample::Update</A> method. 
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
