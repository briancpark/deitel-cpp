<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Filter Graph Manager and Filter Graphs</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0031.htm','/dssd0000.htm','/dssd0030.htm','/index.htm','/dssd0033.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="filgraf_0001030102000000">Filter Graph Manager and Filter Graphs</A></H2>
<BR CLEAR=ALL>
<P>To use the filter graph manager from an application, it is not necessary to know much about the
underlying filter graphs. However, it is useful to understand at least the basic principles of filter
graphs if you ever want to configure your own filter graph rather than letting the filter graph manager 
configure them for you. 

<P>A filter graph is composed of a collection of filters of different types. Most filters can be 
categorized into one of the following three types.

<UL><LI>A source filter, which takes the data from some source, such as a file on disk, a 
satellite feed, an Internet server, or a VCR, and introduces it into the filter graph.
<LI>A transform filter, which takes the data, processes it, and then passes it along.
<LI>A rendering filter, which renders the data; typically this is rendered to a hardware device, 
but could be rendered to any location that accepts media input (such as memory or 
a disk file).
</UL>
<P>In addition to these three types, there are other kinds of filters, for example, effect filters, which add effects without changing the data type, and parser filters, which understand the format of the source data and know how to read the correct bytes, create times stamps, and perform seeks.


<P>For example, a filter graph whose purpose is to play back an MPEG-compressed video from a file would use the following filters.

<UL><LI>A source filter to read the data off the disk.
<LI>An MPEG filter to parse the stream and split the MPEG audio and video data streams. 

<LI>A transform filter to decompress the video data.
<LI>A transform filter to decompress the audio data.
<LI>A video renderer filter to display the video data on the screen. 
<LI>An audio renderer filter to send the audio to the sound card. 
</UL>
<P>The following illustration shows such a filter graph.

<P><IMG SRC="art/arch2.gif" WIDTH="383" HEIGHT="155" ALT="MPEG filter graph example" >

<P>It is possible for some filters to represent a combination of types. 
For example, a filter might be an audio renderer that also acts as a transform filter by passing 
through the video data. But typically, filters fit only one of these three types.

<P>Filter graphs stream multimedia data through filters. In the media stream,
one filter passes the media <I>downstream</I> to the next filter. An <I>upstream filter</I> describes
the filter that passes data to the filter; a <I>downstream filter</I> describes 
the next filter in line for the data. This distinction is important because media flows downstream, 
but other information can go upstream.

<P>To make a filter graph work, filters must be connected in the proper order, and 
the data stream must be started and stopped in the proper order. The filter graph manager 
connects filters and controls the media stream. It also has the ability to search for a 
configuration of filters that will render a particular media type and build that filter graph. Filter graphs can 
also be preconfigured, in which case the filter graph manager does not need to search for 
a configuration.

<P>When searching for a rendering configuration, the filter graph manager uses the filter mapper, 
which first reads the registry and determines the types of filters available. The 
filter graph manager then attempts to link filters that accept that data type 
until it reaches a rendering filter. A merit value is 
registered with each filter and, of the filters that might be capable of handling the data, 
the filters with the highest merit are tried first.

<P>Controlling the media stream means starting, pausing, or stopping the media stream. It can 
also mean playing for a particular duration or seeking to a particular point in the stream. 
The filter graph manager allows the application or ActiveX Control to specify these activities, and 
then calls the appropriate methods on the filters to invoke them. It also allows filters to 
post events that the application can retrieve. Therefore an application can, for example, 
retrieve status about some special filter it has installed.

<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
