<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Static Methods Relevant to Vector2Bvr Objects</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/DA_E0198.htm','/DA_E0000.htm','/DA_E0116.htm','/index.htm','/DA_E0200.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dxmref_0001070153000000">Static Methods Relevant to Vector2Bvr Objects</A></H2>
<BR CLEAR=ALL>
<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000100">add</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior that is the vector-valued sum of the two vectors. 

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>add</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0199.htm#dxmref_0001070153000700" TARGET="TEXT">sub</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000200">bSpline</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> behavior based on a B-spline function. The function depends on the control elements, the knot vector, the mathematical degree, and the weights of the control elements (these are optional).

<P>A B-spline function without weights is piecewise polynomial and with weights is piecewise rational (the quotient of two polynomials). It requires that:

<P>numberOfControlElements = numberOfKnots - <I>degree</I> + 1

<P>The control elements define the approximate direction and shape of the function. The knots represent junction values, in parameter space, between the connected polynomial parts. 

<P>Given a degree <I>d</I> and a number of knots <I>k</I>, the function is valid in the range knot<I>d</I> to knot<I>k-d</I>+1, and is otherwise undefined. For example, for a degree 2 curve, the valid range is from the second knot to the next to the last knot, inclusive.

<P>The returned <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> is the traversal of the spline function according to the <I>evaluation</I> parameter. The evaluation parameter is a <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> that must be in the valid range of the spline, which is [knot<I>d</I>, knot<I>k</I>-<I>d</I>+1]. Any values outside this range are automatically clamped to the end values.

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>bSpline</B><B>(</B><BR>&nbsp;&nbsp;<B>int</B> <I>degree</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>knots</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector2Bvr[]</B> <I>control_elements</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr[]</B> <I>weights</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>evaluation</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>degree</I>
 </DT><DD>A number representing the mathematical degree of the B-spline to evaluate. Must be 1, 2, or 3. 
</DD><DT><I>knots</I>
 </DT><DD>An array of <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the knots used to calculate the B-spline. 
</DD><DT><I>control_elements</I>
 </DT><DD>An array of <A HREF="DA_E0209.htm" TARGET="TEXT">Point2Bvr</A> objects representing the control elements used to calculate the B-spline.
</DD><DT><I>weights</I>
 </DT><DD>An array of <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> objects representing the weights used to calculate the rational B-spline. There must be the same number of weights as control elements. For non-rational B-splines, the value of <I>weights</I> is null.
</DD><DT><I>evaluation</I>
 </DT><DD>A <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object that controls the spline evaluation.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000300">derivative</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a new, two-dimensional vector behavior that is the instantaneous derivative (rate of change) of the given vector behavior. For example, a constant vector behavior yields a constant derivative of [0 0], and <A HREF="DA_E0199.htm#dxmref_0001070153000800" TARGET="TEXT">vector2</A>(time, 0) (without any additional time substitutions) yields a constant derivative vector of [1 0]. 

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>derivative</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>vec</I>
 </DT><DD>A <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000400">dot</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a number behavior that represent the "dot product" of the given vectors. The dot product is the product of the lengths of the vectors and the cosine of the angle between them.

<P><B>public</B> <B>static</B> <B>NumberBvr</B> <B>dot</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000500">integral</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates an two-dimensional vector that represents the sum of the all values of <I>vec</I> from the given start time to the present. 

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>integral</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>vec</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>a</I>
 </DT><DD>The <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000600">neg</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a new two-dimensional vector that is the same length as the original vector but points in the opposite direction.

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>neg</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v1</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I>
 </DT><DD>A <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object that is the original vector.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.


<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000700">sub</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior. The direction and length of the vector are calculated by subtracting the coordinates of <I>v2</I> from the corresponding coordinates of <I>v1</I>. 

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>sub</B><B>(</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v1</I><B>,</B><BR>&nbsp;&nbsp;<B>Vector2Bvr</B> <I>v2</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>v1</I> and <I>v2</I>
 </DT><DD>The <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> objects.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object.


<H5>See Also</H5>
<P><A HREF="DA_E0199.htm#dxmref_0001070153000100" TARGET="TEXT">add</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000800">vector2</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior, having a direction and length as specified by the given Cartesian coordinates.

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>vector2</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>x</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>y</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>x</I> 
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying the distance along the x-axis from the origin to a point. This parameter can also be of type double. 
</DD><DT><I>y</I>
 </DT><DD><A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object specifying the distance along the y-axis. This parameter can also be of type double.
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0199.htm#dxmref_0001070153000900" TARGET="TEXT">vector2Polar</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000900">vector2Polar</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior, having a direction and length as specified by the given polar coordinates.

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>vector2Polar</B><B>(</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<B>NumberBvr</B> <I>length</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>XYangle</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object that is the counter-clockwise angle of the vector, in radians, from the positive x-ray. This parameter can also be of type double.
</DD><DT><I>length</I>
 </DT><DD>The <A HREF="DA_E0147.htm" TARGET="TEXT">NumberBvr</A> object that is the length of the vector. This parameter can also be of type double. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<H5>See Also</H5>
<P><A HREF="DA_E0199.htm#dxmref_0001070153000800" TARGET="TEXT">vector2</A>

<H3><HR COLOR=#0000FF><A NAME="dxmref_0001070153000a00">vector2PolarDegrees</A></H3>
<A HREF="DA_E0157.htm" TARGET="TEXT">Statics Class</A>
<P>Creates a two-dimensional vector behavior, having a direction and length as specified by the given polar coordinates.

<P><B>public</B> <B>static</B> <B>Vector2Bvr</B> <B>vector2PolarDegrees</B><B>(</B><BR>&nbsp;&nbsp;<B>double</B> <I>XYangle</I><B>,</B><BR>&nbsp;&nbsp;<B>double</B> <I>length</I><BR>&nbsp;&nbsp;<B>)</B><B>;</B><BR><H5>Parameters</H5>
<DL><DT><I>XYangle</I>
 </DT><DD>The double that is the counter-clockwise angle of the vector (expressed in degrees) from the positive x-ray.
</DD><DT><I>length</I>
 </DT><DD>The double that is the length of the vector. 
</DD></DL>
<H5>Return Values</H5>
<P>Returns the <A HREF="DA_E0209.htm" TARGET="TEXT">Vector2Bvr</A> object. 


<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
