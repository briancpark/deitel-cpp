<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><TITLE>Data Types</TITLE>
<STYLE>
<!--
.tctop {color: blue}
.cpslug {color: blue; text-decoration: none}
-->
</STYLE>
<SCRIPT LANGUAGE="JAVASCRIPT">
//<!--
function ShowButtons() {
    if (window.top.frames.length!=0 && window.top.frames[0].ShowButtons!=null)
	window.top.frames[0].ShowButtons('/dssd0287.htm','/dssd0000.htm','/dssd0087.htm','/index.htm','/dssd0289.htm');
}
ShowButtons();
//-->
</SCRIPT>
</HEAD>
<BODY onLoad="ShowButtons()" TOPMARGIN=10 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="dtypes_0001060601000000">Data Types</A></H2>
<BR CLEAR=ALL>
<P>This section describes the Microsoft&#174; DirectShow&#153; data types.

<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Data type </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description

</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000100" TARGET="TEXT">AM_ASPECT_RATIO_MODE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the aspect ratio of a video image in a display window.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000200" TARGET="TEXT">AM_DVD_GRAPH_FLAGS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the type of decoder to use in a DVD filter graph.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000300" TARGET="TEXT">AM_DVD_STREAM_FLAGS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a DVD stream type (video, audio, or subpicture). 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000400" TARGET="TEXT">AM_LINE21_CCLEVEL</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Closed caption capability level.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000500" TARGET="TEXT">AM_LINE21_CCSERVICE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Closed caption decoder service. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000600" TARGET="TEXT">AM_LINE21_CCSTATE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Closed caption state (on or off). 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000700" TARGET="TEXT">AM_LINE21_DRAWBGMODE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Closed caption text background mode. 

</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000800" TARGET="TEXT">AM_SAMPLE_PROPERTY_FLAGS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Values for the <A HREF="dssd0287.htm#structs_0001060501000403" TARGET="TEXT">dwSampleFlags</A> member of the <A HREF="dssd0287.htm#structs_0001060501000400" TARGET="TEXT">AM_SAMPLE2_PROPERTIES</A> structure. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000900" TARGET="TEXT">AM_STREAM_INFO_FLAGS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates whether or not various components of the <A HREF="dssd0287.htm#structs_0001060501000800" TARGET="TEXT">AM_STREAM_INFO</A> structure have been set.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000a00" TARGET="TEXT">AMVP_CONTEXT</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> Specifies the video port (VP) context (Video or VBI data).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000b00" TARGET="TEXT">AMVP_MODE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> Specifies the various modes for video ports (VP).



</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000c00" TARGET="TEXT">AnalogVideoStandard</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the format of the baseband analog video signal.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000d00" TARGET="TEXT">CameraControlProperty</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies what part of the camera DirectShow is controlling.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000e00" TARGET="TEXT">CL_ELEM_FLAGS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Cutlist element flags.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601000f00" TARGET="TEXT">CL_ELEM_STATUS</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Cutlist status flags.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001000" TARGET="TEXT">CompressionCaps</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates video compression capabilities.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001100" TARGET="TEXT">DVD_DISC_SIDE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Sides of a DVD disc. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001200" TARGET="TEXT">DVD_DOMAIN</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates the state of a DVD player.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001300" TARGET="TEXT">DVD_ERROR</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies DVD error conditions. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001400" TARGET="TEXT">DVD_FRAMERATE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DVD frame rates. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001500" TARGET="TEXT">DVD_MENU_ID</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DVD Video Title Set (VTS) menu identifiers. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001600" TARGET="TEXT">DVD_PLAYBACK_LOCATION</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DVD playback location.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001700" TARGET="TEXT">DVD_WARNING</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies DVD warning conditions. 
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001800" TARGET="TEXT">FILTER_STATE</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a filter's state.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001900" TARGET="TEXT">InterleavingMode</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"> Specifies how video frames and audio samples are to be written to disk.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001a00" TARGET="TEXT">MPEG2Level</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The MPEG2 video Level as specified in the MPEG2 video standard. (ISO13818-2)
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001b00" TARGET="TEXT">MPEG2Profile</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The MPEG2 video Profile as specified in the MPEG2 video standard. (ISO13818-2)
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001c00" TARGET="TEXT">PIN_DIRECTION</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a pin's direction.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001d00" TARGET="TEXT">QualityMessageType</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes a quality message type.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001e00" TARGET="TEXT">REG_PINFLAG</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Flags for the <I>dwFlags</I> member in the <A HREF="dssd0287.htm#structs_0001060501002300" TARGET="TEXT">REGFILTERPINS2</A> structure.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601001f00" TARGET="TEXT">StreamControlState</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Describes the state of the stream and indicates how to proceed.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601002000" TARGET="TEXT">TunerInputType</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies the frequency of a TV tuner (Cable or Antenna).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601002100" TARGET="TEXT">VfwCaptureDialogs</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies a dialog box that might exist in a Microsoft Video for Windows&#174; capture driver.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="dssd0288.htm#dtypes_0001060601002200" TARGET="TEXT">VfwCompressDialogs</A> </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies a dialog box that might exist in a Video for Windows compression (codec) driver.
</FONT></TD></TR></TABLE>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000100">AM_ASPECT_RATIO_MODE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies the aspect ratio of a video image in a display window.

<PRE><FONT FACE="Courier" SIZE="2">typedef enum _AM_ASPECT_RATIO_MODE
{
    AM_ARMODE_NONE,&#009;&#009;&#009;
    AM_ARMODE_LETTER_BOX,&#009;&#009;
} AM_ASPECT_RATIO_MODE;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000101">AM_ARMODE_NONE</A></B>
 </DT><DD>No aspect ratio correction.
</DD><DT><B><A NAME="dtypes_0001060601000102">AM_ARMODE_LETTER_BOX</A></B>
 </DT><DD>Letter box the video. Paint background color in the excess region so the video is not distorted.
</DD></DL>
<H5>Remarks</H5>
<P>If the <I>AM_ARMODE_NONE</I> member is specified in this enumerated type, a video stream will always occupy the entire region of the display window when the window is resized. The <I>AM_ARMODE_LETTER_BOX</I> member eliminates stretching and distortions of the video by keeping the aspect ratio consistant and painting the excess areas of the window a background color.

<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000200">AM_DVD_GRAPH_FLAGS</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies the type of decoder to use in a DVD filter graph.

<PRE><FONT FACE="Courier" SIZE="2">
enum {
&#009;AM_DVD_HWDEC_PREFER,
&#009;AM_DVD_HWDEC_ONLY,
&#009;AM_DVD_SWDEC_PREFER,
&#009;AM_DVD_SWDEC_ONLY,
&#009;AM_DVD_NOVPE
} AM_DVD_GRAPH_FLAGS;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000201">AM_DVD_HWDEC_PREFER</A></B>
 </DT><DD>Maximum hardware decoding. Default.
</DD><DT><B><A NAME="dtypes_0001060601000202">AM_DVD_HWDEC_ONLY</A></B>
 </DT><DD>Hardware decoding only.
</DD><DT><B><A NAME="dtypes_0001060601000203">AM_DVD_SWDEC_PREFER</A></B>
 </DT><DD>Maximum software decoding.
</DD><DT><B><A NAME="dtypes_0001060601000204">AM_DVD_SWDEC_ONLY</A></B>
 </DT><DD>Software decoding only
</DD><DT><B><A NAME="dtypes_0001060601000205">AM_DVD_NOVPE</A></B>
 </DT><DD>Do not use video port extensions (VPE).
</DD></DL>
<H5>Remarks</H5>
<P>Do not combine any of the hardware flags (AM_DVD_HWDEC_*) with any of the software flags (AM_DVD_SWDEC_*). However, you can combine <B>AM_DVD_NOVPE</B> with any of the hardware flags.
<H5>See Also</H5>
<P><A HREF="dssd0129.htm#If_0001060129030300" TARGET="TEXT">IDvdGraphBuilder::RenderDvdVideoVolume</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000300">AM_DVD_STREAM_FLAGS</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Describes a DVD stream type (video, audio, or subpicture). 

<PRE><FONT FACE="Courier" SIZE="2">
enum {
&#009;AM_DVD_STREAM_VIDEO,
&#009;AM_DVD_STREAM_AUDIO,
&#009;AM_DVD_STREAM_SUBPIC
} AM_DVD_STREAM_FLAGS;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000301">AM_DVD_STREAM_VIDEO</A></B>
 </DT><DD> DVD video stream.
</DD><DT><B><A NAME="dtypes_0001060601000302">AM_DVD_STREAM_AUDIO</A></B>
 </DT><DD> DVD audio stream.
</DD><DT><B><A NAME="dtypes_0001060601000303">AM_DVD_STREAM_SUBPIC</A></B>
 </DT><DD> DVD subpicture stream.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0287.htm#structs_0001060501000200" TARGET="TEXT">AM_DVD_RENDERSTATUS</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000400">AM_LINE21_CCLEVEL</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Closed caption capability level.


<PRE><FONT FACE="Courier" SIZE="2"> typedef enum _AM_LINE21_CCLEVEL {  
    AM_L21_CCLEVEL_TC2
} AM_LINE21_CCLEVEL, *PAM_LINE21_CCLEVEL ;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000401">AM_L21_CCLEVEL_TC2</A></B>
 </DT><DD>Capability level 2.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0102.htm#If_000106010e030300" TARGET="TEXT">IAMLine21Decoder::GetDecoderLevel</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000500">AM_LINE21_CCSERVICE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Closed caption decoder service.

<PRE><FONT FACE="Courier" SIZE="2"> typedef enum _AM_LINE21_CCSERVICE {
    AM_L21_CCSERVICE_None,
    AM_L21_CCSERVICE_Caption1,
    AM_L21_CCSERVICE_Caption2,
    AM_L21_CCSERVICE_Text1,
    AM_L21_CCSERVICE_Text2,
    AM_L21_CCSERVICE_XDS,
} AM_LINE21_CCSERVICE, *PAM_LINE21_CCSERVICE ;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000501">AM_L21_CCSERVICE_None</A></B>
 </DT><DD>No current service.
</DD><DT><B><A NAME="dtypes_0001060601000502">AM_L21_CCSERVICE_Caption1</A></B>
 </DT><DD>True captioning, first field. Default service.
</DD><DT><B><A NAME="dtypes_0001060601000503">AM_L21_CCSERVICE_Caption2</A></B>
 </DT><DD>Captioning for secondary language, second field. Generally not used.
</DD><DT><B><A NAME="dtypes_0001060601000504">AM_L21_CCSERVICE_Text1</A></B>
 </DT><DD>First text field. Not currently implemented; provided for future compatibility.
</DD><DT><B><A NAME="dtypes_0001060601000505">AM_L21_CCSERVICE_Text2</A></B>
 </DT><DD>Second text field. Not currently implemented; provided for future compatibility.
</DD><DT><B><A NAME="dtypes_0001060601000506">AM_L21_CCSERVICE_XDS</A></B>
 </DT><DD>Extended Data Services (XDS or EDS). Not currently implemented; provided for future compatibility.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0102.htm#If_000106010e030200" TARGET="TEXT">IAMLine21Decoder::GetCurrentService</A>, <A HREF="dssd0102.htm#If_000106010e030900" TARGET="TEXT">IAMLine21Decoder::SetCurrentService</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000600">AM_LINE21_CCSTATE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Closed caption state (on or off).

<PRE><FONT FACE="Courier" SIZE="2"> typedef enum _AM_LINE21_CCSTATE {
    AM_L21_CCSTATE_Off,
    AM_L21_CCSTATE_On
} AM_LINE21_CCSTATE, *PAM_LINE21_CCSTATE ;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000601">AM_L21_CCSTATE_Off</A></B>
 </DT><DD>Closed captioning off.
</DD><DT><B><A NAME="dtypes_0001060601000602">AM_L21_CCSTATE_On</A></B>
 </DT><DD>Closed captioning on.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0102.htm#If_000106010e030700" TARGET="TEXT">IAMLine21Decoder::GetServiceState</A>, <A HREF="dssd0102.htm#If_000106010e030d00" TARGET="TEXT">IAMLine21Decoder::SetServiceState</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000700">AM_LINE21_DRAWBGMODE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Closed caption text background mode. 

<PRE><FONT FACE="Courier" SIZE="2"> typedef enum _AM_LINE21_DRAWBGMODE {
    AM_L21_DRAWBGMODE_Opaque,
    AM_L21_DRAWBGMODE_Transparent
} AM_LINE21_DRAWBGMODE, *PAM_LINE21_DRAWBGMODE ;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000701">AM_L21_DRAWBGMODE_Opaque</A></B>
 </DT><DD>Opaque background.
</DD><DT><B><A NAME="dtypes_0001060601000702">AM_L21_DRAWBGMODE_Transparent</A></B>
 </DT><DD>Transparent background.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0102.htm#If_000106010e030400" TARGET="TEXT">IAMLine21Decoder::GetDrawBackgroundMode</A>, <A HREF="dssd0102.htm#If_000106010e030a00" TARGET="TEXT">IAMLine21Decoder::SetDrawBackgroundMode</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000800">AM_SAMPLE_PROPERTY_FLAGS</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Values for the <A HREF="dssd0287.htm#structs_0001060501000403" TARGET="TEXT">dwSampleFlags</A> member of the <A HREF="dssd0287.htm#structs_0001060501000400" TARGET="TEXT">AM_SAMPLE2_PROPERTIES</A> structure.

<PRE><FONT FACE="Courier" SIZE="2">
enum tagAM_SAMPLE_PROPERTY_FLAGS
     { AM_SAMPLE_SPLICEPOINT        = 0x01,   
       AM_SAMPLE_PREROLL            = 0x02,   
       AM_SAMPLE_DATADISCONTINUITY  = 0x04,   
       AM_SAMPLE_TYPECHANGED        = 0x08,   
       AM_SAMPLE_TIMEVALID          = 0x10,   
       AM_SAMPLE_TIMEDISCONTINUITY  = 0x40,   
       AM_SAMPLE_FLUSH_ON_PAUSE     = 0x80,   
       AM_SAMPLE_STOPVALID          = 0x100,  
       AM_SAMPLE_ENDOFSTREAM        = 0x200,  
       AM_STREAM_MEDIA              = 0,      
       AM_STREAM_CONTROL            = 1       
     };
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000801">AM_SAMPLE_SPLICEPOINT</A></B>
</DT><DD>Sample is a splice point (it can be decoded without reference to previous data).
</DD><DT><B><A NAME="dtypes_0001060601000802">AM_SAMPLE_PREROLL</A></B>
</DT><DD>Sample is a preroll sample.
</DD><DT><B><A NAME="dtypes_0001060601000803">AM_SAMPLE_DATADISCONTINUITY</A></B>
</DT><DD>Indicates the start of a new segment.
</DD><DT><B><A NAME="dtypes_0001060601000804">AM_SAMPLE_TYPECHANGED</A></B>
</DT><DD>Sample type changed.
</DD><DT><B><A NAME="dtypes_0001060601000805">AM_SAMPLE_TIMEVALID</A></B>
</DT><DD>Time is valid. 
</DD><DT><B><A NAME="dtypes_0001060601000806">AM_SAMPLE_TIMEDISCONTINUITY</A></B>
</DT><DD>A time gap in the data starts after this sample &#151; <I>pbBuffer</I> can be NULL.
</DD><DT><B><A NAME="dtypes_0001060601000807">AM_SAMPLE_FLUSH_ON_PAUSE</A></B>
</DT><DD>For live data &#151; discard in paused state.


</DD><DT><B><A NAME="dtypes_0001060601000808">AM_SAMPLE_STOPVALID</A></B>
</DT><DD>Stop time is valid.
</DD><DT><B><A NAME="dtypes_0001060601000809">AM_SAMPLE_ENDOFSTREAM</A></B>
</DT><DD>End of stream occurs after this sample. This is reserved for kernel streaming and DirectShow currently doesn't use it. 
</DD><DT><B><A NAME="dtypes_000106060100080a">AM_STREAM_MEDIA</A></B>
</DT><DD>Normal data stream identifier.
</DD><DT><B><A NAME="dtypes_000106060100080b">AM_STREAM_CONTROL</A></B>
</DT><DD>Control stream identifier. A value greater than 0x7FFFFFFF indicates an application-defined stream.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000900">AM_STREAM_INFO_FLAGS</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Indicates whether or not various components of the <A HREF="dssd0287.htm#structs_0001060501000800" TARGET="TEXT">AM_STREAM_INFO</A> structure have been set.

<PRE><FONT FACE="Courier" SIZE="2">typedef enum {
    AM_STREAM_INFO_START_DEFINED = 0x00000001,
    AM_STREAM_INFO_STOP_DEFINED  = 0x00000002,
    AM_STREAM_INFO_DISCARDING    = 0x00000004,
    AM_STREAM_INFO_STOP_SEND_EXTRA = 0x00000010
} AM_STREAM_INFO_FLAGS;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000901">AM_STREAM_INFO_START_DEFINED</A></B>
 </DT><DD>Indicates a valid stream start time has been set.
</DD><DT><B><A NAME="dtypes_0001060601000902">AM_STREAM_INFO_STOP_DEFINED</A></B>
 </DT><DD>Indicates a valid stream stop time has been set.
</DD><DT><B><A NAME="dtypes_0001060601000903">AM_STREAM_INFO_DISCARDING</A></B>
 </DT><DD>Indicates that stream discarding is currently active.
</DD><DT><B><A NAME="dtypes_0001060601000904">AM_STREAM_INFO_STOP_SEND_EXTRA</A></B>
 </DT><DD>Indicates that the pin will send an extra stream sample upon completion.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000a00">AMVP_CONTEXT</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies the video port (VP) context (Video or VBI data).


<PRE><FONT FACE="Courier" SIZE="2">typedef enum _AMVP_CONTEXT {&#009;
AMVP_CONTEXT_VBI,
AMVP_CONTEXT_VIDEO
} AMVP_CONTEXT;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000a01">AMVP_CONTEXT_VBI</A></B>
 </DT><DD>Vertical blanking interval (VBI) data.
</DD><DT><B><A NAME="dtypes_0001060601000a02">AMVP_CONTEXT_VIDEO</A></B>
 </DT><DD> Video data.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000b00">AMVP_MODE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies the various modes for video ports. 

<PRE><FONT FACE="Courier" SIZE="2">typedef enum _AMVP_MODE{&#009;
AMVP_MODE_WEAVE,
AMVP_MODE_BOBINTERLEAVED,
AMVP_MODE_BOBNONINTERLEAVED,
AMVP_MODE_SKIPEVEN,
AMVP_MODE_SKIPODD
} AMVP_MODE;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000b01">AMVP_MODE_WEAVE</A></B>
 </DT><DD>Weave.
</DD><DT><B><A NAME="dtypes_0001060601000b02">AMVP_MODE_BOBINTERLEAVED</A></B>
 </DT><DD>Interleaved bob. Bob mode in which resources are allocated to switch to weave mode, for example, on the next frame.


</DD><DT><B><A NAME="dtypes_0001060601000b03">MODE_BOBNONINTERLEAVED</A></B>
 </DT><DD>Noninterleaved bob. Bob mode in which resources are not allocated to switch to weave mode.
</DD><DT><B><A NAME="dtypes_0001060601000b04">AMVP_MODE_SKIPEVEN</A></B>
 </DT><DD>Skip even fields.
</DD><DT><B><A NAME="dtypes_0001060601000b05">AMVP_MODE_SKIPODD</A></B>
 </DT><DD>Skip odd fields.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000c00">AnalogVideoStandard</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies the format of the baseband analog video signal.

<PRE><FONT FACE="Courier" SIZE="2"> typedef enum
    {
        AnalogVideo_None       = 0x00000000
        AnalogVideo_NTSC_M     = 0x00000001,  //        75 IRE Setup
        AnalogVideo_NTSC_M_J   = 0x00000002,  // Japan,  0 IRE Setup
        AnalogVideo_NTSC_433   = 0x00000004

        AnalogVideo_PAL_B      = 0x00000010,
        AnalogVideo_PAL_D      = 0x00000020,
        AnalogVideo_PAL_H      = 0x00000080,
        AnalogVideo_PAL_I      = 0x00000100,
        AnalogVideo_PAL_M      = 0x00000200,
        AnalogVideo_PAL_N      = 0x00000400,
        AnalogVideo_PAL_60     = 0x00000800,
        AnalogVideo_SECAM_B    = 0x00001000,
        AnalogVideo_SECAM_D    = 0x00002000,
        AnalogVideo_SECAM_G    = 0x00004000,
        AnalogVideo_SECAM_H    = 0x00008000,
        AnalogVideo_SECAM_K    = 0x00010000,
        AnalogVideo_SECAM_K1   = 0x00020000,
        AnalogVideo_SECAM_L    = 0x00040000,
        AnalogVideo_SECAM_L1   = 0x00080000,
    } AnalogVideoStandard;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000c01">AnalogVideo_None</A></B>
 </DT><DD>Digital sensor
</DD><DT><B><A NAME="dtypes_0001060601000c02">AnalogVideo_NTSC_M</A></B>
 </DT><DD>NTSC_M
</DD><DT><B><A NAME="dtypes_0001060601000c03">AnalogVideo_NTSC_M_J</A></B>
 </DT><DD>NTSC_M_J
</DD><DT><B><A NAME="dtypes_0001060601000c04">AnalogVideo_PAL_B</A></B>
 </DT><DD>PAL_B
</DD><DT><B><A NAME="dtypes_0001060601000c05">AnalogVideo_PAL_D</A></B>
 </DT><DD>PAL_D
</DD><DT><B><A NAME="dtypes_0001060601000c06">AnalogVideo_PAL_H</A></B>
 </DT><DD>PAL_H
</DD><DT><B><A NAME="dtypes_0001060601000c07">AnalogVideo_PAL_I</A></B>
 </DT><DD>PAL_I
</DD><DT><B><A NAME="dtypes_0001060601000c08">AnalogVideo_PAL_M</A></B>
 </DT><DD>PAL_M
</DD><DT><B><A NAME="dtypes_0001060601000c09">AnalogVideo_PAL_N</A></B>
 </DT><DD>PAL_N
</DD><DT><B><A NAME="dtypes_0001060601000c0a">AnalogVideo_SECAM_B</A></B>
 </DT><DD>SECAM_B
</DD><DT><B><A NAME="dtypes_0001060601000c0b">AnalogVideo_SECAM_D</A></B>
 </DT><DD>SECAM_D
</DD><DT><B><A NAME="dtypes_0001060601000c0c">AnalogVideo_SECAM_G</A></B>
 </DT><DD>SECAM_G
</DD><DT><B><A NAME="dtypes_0001060601000c0d">AnalogVideo_SECAM_H</A></B>
 </DT><DD>SECAM_H
</DD><DT><B><A NAME="dtypes_0001060601000c0e">AnalogVideo_SECAM_K</A></B>
 </DT><DD>SECAM_K
</DD><DT><B><A NAME="dtypes_0001060601000c0f">AnalogVideo_SECAM_K1</A></B>
 </DT><DD>SECAM_K1
</DD><DT><B><A NAME="dtypes_0001060601000c10">AnalogVideo_SECAM_L</A></B>
 </DT><DD>SECAM_L
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000d00">CameraControlProperty</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies what part of the camera DirectShow is controlling.

<PRE><FONT FACE="Courier" SIZE="2">typedef enum
    {
        CameraControl_Pan = 1,
        CameraControl_Tilt,
        CameraControl_Roll,
        CameraControl_Zoom,
        CameraControl_Exposure,
        CameraControl_Iris,
        CameraControl_Focus
    } CameraControlProperty;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000d01">CameraControl_Pan</A></B>
 </DT><DD>Control the camera's pan.
</DD><DT><B><A NAME="dtypes_0001060601000d02">CameraControl_Tilt</A></B>
 </DT><DD>Control the camera's tilt.
</DD><DT><B><A NAME="dtypes_0001060601000d03">CameraControl_Roll</A></B>
 </DT><DD>Control the camera's roll.
</DD><DT><B><A NAME="dtypes_0001060601000d04">CameraControl_Zoom</A></B>
 </DT><DD>Control the camera's zoom.
</DD><DT><B><A NAME="dtypes_0001060601000d05">CameraControl_Exposure</A></B>
 </DT><DD>Control the camera's exposure.
</DD><DT><B><A NAME="dtypes_0001060601000d06">CameraControl_Iris</A></B>
 </DT><DD>Control the camera's iris.
</DD><DT><B><A NAME="dtypes_0001060601000d07">CameraControl_Focus</A></B>
 </DT><DD>Control the camera's focus.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000e00">CL_ELEM_FLAGS</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Cutlist element flags.
<PRE><FONT FACE="Courier" SIZE="2">enum CL_ELEM_FLAGS{
    CL_ELEM_FIRST,
    CL_ELEM_LAST,
    CL_ELEM_NULL,  
    CL_ELEM_ALL,
    CL_ELEM_NONE};
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000e01">CL_ELEM_FIRST</A></B>
 </DT><DD>First element.
</DD><DT><B><A NAME="dtypes_0001060601000e02">CL_ELEM_LAST</A></B>
 </DT><DD>Last element.
</DD><DT><B><A NAME="dtypes_0001060601000e03">CL_ELEM_NULL</A></B>
 </DT><DD>Null element.
</DD><DT><B><A NAME="dtypes_0001060601000e04">CL_ELEM_ALL</A></B>
 </DT><DD>All elements.
</DD><DT><B><A NAME="dtypes_0001060601000e05">CL_ELEM_NONE</A></B>
 </DT><DD>No elements.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601000f00">CL_ELEM_STATUS</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Cutlist status flags.
<PRE><FONT FACE="Courier" SIZE="2">enum CL_ELEM_STATUS{
    CL_NOT_PLAYED,
    CL_PLAYING,
    CL_FINISHED,  
    CL_STATE_INVALID,
    CL_STATE_MASK,
    CL_WAIT_FOR_STATE};
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601000f01">CL_NOT_PLAYED</A></B>
 </DT><DD>Element has not played.
</DD><DT><B><A NAME="dtypes_0001060601000f02">CL_PLAYING</A></B>
 </DT><DD>Element is playing.
</DD><DT><B><A NAME="dtypes_0001060601000f03">CL_FINISHED</A></B>
 </DT><DD>Element finished playing.
</DD><DT><B><A NAME="dtypes_0001060601000f04">CL_STATE_INVALID</A></B>
 </DT><DD>Invalid state.
</DD><DT><B><A NAME="dtypes_0001060601000f05">CL_STATE_MASK</A></B>
 </DT><DD>Mask for invalid states (equals CL_STATE_INVALID).
</DD><DT><B><A NAME="dtypes_0001060601000f06">CL_WAIT_FOR_STATE</A></B>
 </DT><DD>Wait flag. For input parameter only.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001000">CompressionCaps</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Indicates video compression capabilities. 

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum {
    CompressionCaps_CanQuality = 0x00000001,
    CompressionCaps_CanCrunch = 0x00000002,
    CompressionCaps_CanKeyFrame = 0x00000004,
    CompressionCaps_CanBFrame = 0x00000008,
    CompressionCaps_CanWindow = 0x0000000A
} CompressionCaps;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001001">CompressionCaps_CanQuality</A></B>
 </DT><DD>Video compressor supports the <A HREF="dssd0113.htm#If_0001060119030a00" TARGET="TEXT">IAMVideoCompression::put_Quality</A> and <A HREF="dssd0113.htm#If_0001060119030500" TARGET="TEXT">IAMVideoCompression::get_Quality</A> methods.
</DD><DT><B><A NAME="dtypes_0001060601001002">CompressionCaps_CanCrunch</A></B>
 </DT><DD>Video compressor can compress video to a specified data rate. If the compressor has this capability
then the output pin's media type will contain the data rate in the <A HREF="dssd0287.htm#structs_0001060501001e00" TARGET="TEXT">VIDEOINFOHEADER</A> structure's 
<A HREF="dssd0287.htm#structs_0001060501001e03" TARGET="TEXT">dwBitRate</A> member. The only way to set the data rate is to set 
<B>dwBitRate</B>.
</DD><DT><B><A NAME="dtypes_0001060601001003">CompressionCaps_CanKeyFrame</A></B>
 </DT><DD>Video compressor supports the <A HREF="dssd0113.htm#If_0001060119030800" TARGET="TEXT">IAMVideoCompression::put_KeyFrameRate</A> and <A HREF="dssd0113.htm#If_0001060119030300" TARGET="TEXT">IAMVideoCompression::get_KeyFrameRate</A> methods.
</DD><DT><B><A NAME="dtypes_0001060601001004">CompressionCaps_CanBFrame</A></B>
 </DT><DD>Video compressor supports the <A HREF="dssd0113.htm#If_0001060119030900" TARGET="TEXT">IAMVideoCompression::put_PFramesPerKeyFrame</A> and
<A HREF="dssd0113.htm#If_0001060119030400" TARGET="TEXT">IAMVideoCompression::get_PFramesPerKeyFrame</A> methods.
</DD><DT><B><A NAME="dtypes_0001060601001005">CompressionCaps_CanWindow</A></B>
 </DT><DD>Video compressor supports the <A HREF="dssd0113.htm#If_0001060119030b00" TARGET="TEXT">IAMVideoCompression::put_WindowSize</A> and
<A HREF="dssd0113.htm#If_0001060119030200" TARGET="TEXT">IAMVideoCompression::get_WindowSize</A> methods.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0113.htm" TARGET="TEXT">IAMVideoCompression</A><H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001100">DVD_DISC_SIDE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Sides of a DVD disc.

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum tagDVD_DISC_SIDE {
    DVD_SIDE_A,
    DVD_SIDE_B
} DVD_DISC_SIDE;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001101">DVD_SIDE_A</A></B>
 </DT><DD>Side A.
</DD><DT><B><A NAME="dtypes_0001060601001102">DVD_SIDE_B</A></B>
 </DT><DD>Side B.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001200">DVD_DOMAIN</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Indicates the state of a DVD player. 

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum tagDVD_DOMAIN {
    DVD_DOMAIN_FirstPlay,
    DVD_DOMAIN_VideoManagerMenu, 
    DVD_DOMAIN_VideoTitleSetMenu,  
    DVD_DOMAIN_Title,         
    DVD_DOMAIN_Stop     
} DVD_DOMAIN;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001201">DVD_DOMAIN_FirstPlay</A></B>
 </DT><DD>Performing default initialization of a DVD disc.
</DD><DT><B><A NAME="dtypes_0001060601001202">DVD_DOMAIN_VideoManagerMenu</A></B>
 </DT><DD>Displaying menus for whole disc.
</DD><DT><B><A NAME="dtypes_0001060601001203">DVD_DOMAIN_VideoTitleSetMenu</A></B>
 </DT><DD>Displaying menus for current title set. 
</DD><DT><B><A NAME="dtypes_0001060601001204">DVD_DOMAIN_Title</A></B>
 </DT><DD>Displaying the current title.
</DD><DT><B><A NAME="dtypes_0001060601001205">DVD_DOMAIN_Stop</A></B>
 </DT><DD>Player is in stopped state.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001300">DVD_ERROR</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies DVD error conditions. 

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum _tagDVD_ERROR {
    DVD_ERROR_Unexpected,
    DVD_ERROR_CopyProtectFail,   
    DVD_ERROR_InvalidDVD1_0Disc,
    DVD_ERROR_InvalidDiscRegion,
    DVD_ERROR_LowParentalLevel
} DVD_ERROR;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001301">DVD_ERROR_Unexpected</A></B>
 </DT><DD>Something unexpected happened; perhaps content is authored incorrectly. Playback is stopped.
</DD><DT><B><A NAME="dtypes_0001060601001302">DVD_ERROR_CopyProtectFail</A></B>
 </DT><DD>Key exchange for DVD copy protection failed. Playback is stopped.
</DD><DT><B><A NAME="dtypes_0001060601001303">DVD_ERROR_InvalidDVD1_0Disc</A></B>
 </DT><DD>DVD-Video disc is authored incorrectly for specification version 1.<I>x</I>. Playback is stopped.
</DD><DT><B><A NAME="dtypes_0001060601001304">DVD_ERROR_InvalidDiscRegion</A></B>
 </DT><DD>DVD-Video disc is not approved for playback by decoders from this DVD region.


</DD><DT><B><A NAME="dtypes_0001060601001305">DVD_ERROR_LowParentalLevel</A></B>
 </DT><DD>Player parental level is lower than the lowest parental level available in the DVD content. Playback is stopped.
</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0292.htm#dvdevent_0001060901000800" TARGET="TEXT">EC_DVD_ERROR</A><H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001400">DVD_FRAMERATE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>DVD frame rates. 

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum tagDVD_FRAMERATE
{
    DVD_FPS_25, 
    DVD_FPS_30NonDrop 
} DVD_FRAMERATE;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001401">DVD_FPS_25</A></B>
 </DT><DD>25 frames per second.
</DD><DT><B><A NAME="dtypes_0001060601001402">DVD_FPS_30NonDrop</A></B>
 </DT><DD>Exactly 30 frames per second.


</DD></DL>
<H5>Remarks</H5>
<P>You must know the frame rate to interpret the frame count as time.
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001500">DVD_MENU_ID</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>DVD Video Title Set (VTS) menu identifiers.

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum tagDVD_MENU_ID {
    DVD_MENU_Title,     
    DVD_MENU_Root, 
    DVD_MENU_Subpicture,
    DVD_MENU_Audio,    
    DVD_MENU_Angle,     
    DVD_MENU_Chapter    
} DVD_MENU_ID;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001501">DVD_MENU_Title</A></B>
 </DT><DD>Choose a title from any VTS in a DVD-Video volume.
</DD><DT><B><A NAME="dtypes_0001060601001502">DVD_MENU_Root</A></B>
 </DT><DD>Main menu for a specific VTS.
</DD><DT><B><A NAME="dtypes_0001060601001503">DVD_MENU_Subpicture</A></B>
 </DT><DD>Choose a subpicture stream in a VTS.
</DD><DT><B><A NAME="dtypes_0001060601001504">DVD_MENU_Audio</A></B>
 </DT><DD>Choose an audio stream in a VTS.
</DD><DT><B><A NAME="dtypes_0001060601001505">DVD_MENU_Angle</A></B>
 </DT><DD>Choose the angle number in a VTS.
</DD><DT><B><A NAME="dtypes_0001060601001506">DVD_MENU_Chapter</A></B>
 </DT><DD>Choose a chapter in a VTS.
</DD></DL>
<H5>Remarks</H5>
<P>The root menu always provides a means of getting to the subpicture, audio, angle and chapter menus if they exist.
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001600">DVD_PLAYBACK_LOCATION</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>DVD playback location.

<PRE><FONT FACE="Courier" SIZE="2">
typedef struct tagDVD_PLAYBACK_LOCATION 
{
ULONG   TitleNum;   
    ULONG   ChapterNum; 
    ULONG   TimeCode;  
} DVD_PLAYBACK_LOCATION;
</FONT></PRE>
<H5>Members</H5>
<DL><DT><B><A NAME="dtypes_0001060601001601">TitleNum</A></B>
 </DT><DD>Title number for the whole disc (TTN not VTS_TTN).

</DD><DT><B><A NAME="dtypes_0001060601001602">ChapterNum</A></B>
 </DT><DD>Part-of-title number with title. 0xffffffff if not a simple linear movie.
</DD><DT><B>TimeCode</B>
 </DT><DD>Timecode. Use <A HREF="dssd0287.htm#structs_0001060501001100" TARGET="TEXT">DVD_TIMECODE</A> for current playback time. 0xffffffff if not a simple linear movie.
</DD></DL>
<H5>Remarks</H5>
<P><A HREF="dssd0288.htm#dtypes_0001060601001601" TARGET="TEXT">TitleNum</A> and <B>ChapterNum</B> or <B>TitleNum</B> and <B>TimeCode</B> are sufficient to save the playback location for simple linear movies.
 <H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001700">DVD_WARNING</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies DVD warning conditions. 

<PRE><FONT FACE="Courier" SIZE="2">
typedef enum _tagDVD_WARNING {
    DVD_WARNING_InvalidDVD1_0Disc  } 
DVD_WARNING;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001701">DVD_WARNING_InvalidDVD1_0Disc</A></B>
 </DT><DD>DVD-Video disc is authored incorrectly. Playback can continue, but unexpected behavior may occur.


</DD></DL>
<H5>See Also</H5>
<P><A HREF="dssd0292.htm#dvdevent_0001060901000e00" TARGET="TEXT">EC_DVD_WARNING</A>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001800">FILTER_STATE</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Describes a filter's state.

<PRE><FONT FACE="Courier" SIZE="2">typedef enum _FilterState
   {   State_Stopped   = 0,
       State_Paused    = State_Stopped + 1,
       State_Running   = State_Paused + 1
    }  FILTER_STATE;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001801">State_Stopped</A></B>
 </DT><DD>Equal to 0. The filter is not processing data.
</DD><DT><B><A NAME="dtypes_0001060601001802">State_Paused</A></B>
 </DT><DD>Equal to 1. The filter is processing but not rendering data.
</DD><DT><B><A NAME="dtypes_0001060601001803">State_Running</A></B>
 </DT><DD>Equal to 2. The filter is processing and rendering data.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001900">InterleavingMode</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies how video frames and audio samples are to be written to disk.

<PRE><FONT FACE="Courier" SIZE="2">  typedef enum
    {
        INTERLEAVE_NONE,
        INTERLEAVE_CAPTURE,
        INTERLEAVE_FULL
    } InterleavingMode;

</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001901">INTERLEAVE_NONE</A></B>
 </DT><DD>Writes out frames in the order they arrive (uninterleaved). Files must be turned into playback at a later time.
</DD><DT><B><A NAME="dtypes_0001060601001902">INTERLEAVE_CAPTURE</A></B>
 </DT><DD>Approximate interleaving with less overhead than INTERLEAVE_FULL. Geared to video capture.
</DD><DT><B><A NAME="dtypes_0001060601001903">INTERLEAVE_FULL</A></B>
 </DT><DD>Full, precise interleaving of audio samples and video frames. Geared to authoring and playback.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001a00">MPEG2Level</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>The MPEG2 video Level as specified in the MPEG2 video standard. (ISO13818-2)<PRE><FONT FACE="Courier" SIZE="2">enum MPEG2Level {
    MPEG2Level_Low = 1,
    MPEG2Level_Main,
    MPEG2Level_High1440,
    MPEG2Level_High
};
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001a01">MPEG2Level_Low</A></B>
 </DT><DD>Low level.
</DD><DT><B><A NAME="dtypes_0001060601001a02">MPEG2Level_Main</A></B>
 </DT><DD>Main level.
</DD><DT><B><A NAME="dtypes_0001060601001a03">MPEG2Level_High1440</A></B>
 </DT><DD>High level.
</DD><DT><B><A NAME="dtypes_0001060601001a04">MPEG2Level_High</A></B>
 </DT><DD>Highest level.
</DD></DL>
<H5>Remarks</H5>
<P>DVD MPEG-2 video decoders should support <A HREF="dssd0288.htm#dtypes_0001060601001a01" TARGET="TEXT">MPEG2Level_Low</A> or <A HREF="dssd0288.htm#dtypes_0001060601001a02" TARGET="TEXT">MPEG2Level_Main</A>.
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001b00">MPEG2Profile</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>The MPEG2 video Profile as specified in the MPEG2 video standard. (ISO13818-2)<PRE><FONT FACE="Courier" SIZE="2">enum MPEG2Profile {
    MPEG2Profile_Simple = 1,
    MPEG2Profile_Main,
    MPEG2Profile_SNRScalable,
    MPEG2Profile_SpatiallyScalable,
    MPEG2Profile_High
};
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001b01">MPEG2Profile_Simple</A></B>
 </DT><DD>Simple.
</DD><DT><B><A NAME="dtypes_0001060601001b02">MPEG2Profile_Main</A></B>
 </DT><DD>Main.
</DD><DT><B><A NAME="dtypes_0001060601001b03">MPEG2Profile_SNRScalable</A></B>
 </DT><DD>SNRScalable.


</DD><DT><B><A NAME="dtypes_0001060601001b04">MPEG2Profile_SpatiallyScalable</A></B>
 </DT><DD>SpatiallyScalable.
</DD><DT><B><A NAME="dtypes_0001060601001b05">MPEG2Profile_High</A></B>
 </DT><DD>High.
</DD></DL>
<H5>Remarks</H5>
<P>DVD video decoders should support <A HREF="dssd0288.htm#dtypes_0001060601001b01" TARGET="TEXT">MPEG2Profile_Simple</A> or <A HREF="dssd0288.htm#dtypes_0001060601001b02" TARGET="TEXT">MPEG2Profile_Main</A>.
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001c00">PIN_DIRECTION</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Describes a pin's direction.

<PRE><FONT FACE="Courier" SIZE="2">typedef enum _PinDirection {
    PINDIR_INPUT,
    PINDIR_OUTPUT
} PIN_DIRECTION;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001c01">PINDIR_INPUT</A></B>
 </DT><DD>Input pin.
</DD><DT><B><A NAME="dtypes_0001060601001c02">PINDIR_OUTPUT</A></B>
 </DT><DD>Output pin.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001d00">QualityMessageType</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Describes a quality message type.

<PRE><FONT FACE="Courier" SIZE="2">typedef enum {
    Famine,
    Flood
} QualityMessageType;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001d01">Famine</A></B>
 </DT><DD>Downstream filter needs more data.
</DD><DT><B><A NAME="dtypes_0001060601001d02">Flood</A></B>
 </DT><DD>Downstream filter needs less data.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001e00">REG_PINFLAG</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Flags for the <I>dwFlags</I> member in the <A HREF="dssd0287.htm#structs_0001060501002300" TARGET="TEXT">REGFILTERPINS2</A> structure.

<PRE><FONT FACE="Courier" SIZE="2">enum
{
    REG_PINFLAG_B_ZERO = 0x1,
    REG_PINFLAG_B_RENDERER = 0x2,
    REG_PINFLAG_B_MANY = 0x4,
    REG_PINFLAG_B_OUTPUT = 0x8
} REG_PINFLAG;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001e01">REG_PINFLAG_B_ZERO</A></B>
 </DT><DD>Flag indicating the filter has zero instances of this pin.
</DD><DT><B><A NAME="dtypes_0001060601001e02">REG_PINFLAG_B_RENDERER</A></B>
 </DT><DD>Flag indicating the filter renders this input.
</DD><DT><B><A NAME="dtypes_0001060601001e03">REG_PINFLAG_B_MANY</A></B>
 </DT><DD>Flag indicating the filter has more than one instance of this pin.
</DD><DT><B><A NAME="dtypes_0001060601001e04">REG_PINFLAG_B_OUTPUT</A></B>
 </DT><DD>Flag indicating this pin is an output pin.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601001f00">StreamControlState</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Describes the state of the stream and indicates how to proceed.

<PRE><FONT FACE="Courier" SIZE="2">enum StreamControlState {
      STREAM_FLOWING,
      STREAM_DISCARDING,
      STREAM_RECHECK
    };
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601001f01">STREAM_FLOWING</A></B>
 </DT><DD>Indicates the stream is currently transmitting data.
</DD><DT><B><A NAME="dtypes_0001060601001f02">STREAM_DISCARDING</A></B>
 </DT><DD>Discards the samples as they are received.
</DD><DT><B><A NAME="dtypes_0001060601001f03">STREAM_RECHECK</A></B>
 </DT><DD>Used internally by the <A HREF="dssd0204.htm" TARGET="TEXT">CBaseStreamControl</A> class to recheck the stream's state.
</DD></DL>
<H5>See Also</H5>
<P>CBase
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601002000">TunerInputType</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies the frequency of a TV tuner (Cable or Antenna).

<PRE><FONT FACE="Courier" SIZE="2">typedef enum
    {
        TunerInputCable,
        TunerInputAntenna
    } TunerInputType;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601002001">TunerInputCable</A></B>
 </DT><DD>Indicates cable frequency.
</DD><DT><B><A NAME="dtypes_0001060601002002">TunerInputAntenna</A></B>
 </DT><DD>Indicates broadcast antenna frequency.
</DD></DL>
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601002100">VfwCaptureDialogs</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies a dialog box that might exist in a Video for Windows capture driver.

<PRE><FONT FACE="Courier" SIZE="2"> typedef enum {
    VfwCaptureDialog_Source = 1,
    VfwCaptureDialog_Format = 2,
    VfwCaptureDialog_Display = 4
} VfwCaptureDialogs;
</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601002101">VfwCaptureDialog_Source</A></B>
 </DT><DD>Video source dialog box.
</DD><DT><B><A NAME="dtypes_0001060601002102">VfwCaptureDialog_Format</A></B>
 </DT><DD>Video format dialog box.
</DD><DT><B><A NAME="dtypes_0001060601002103">VfwCaptureDialog_Display</A></B>
 </DT><DD>Video display dialog box.
</DD></DL>
<H5>Remarks</H5>
<P>The <A HREF="dssd0111.htm" TARGET="TEXT">IAMVfwCaptureDialogs</A> interface uses this enumerated data type.
<H3><HR COLOR=#0000FF><A NAME="dtypes_0001060601002200">VfwCompressDialogs</A></H3>
<A HREF="dssd0288.htm" TARGET="TEXT">Data Types</A>
<P>Specifies a dialog box that might exist in a Video for Windows compression (codec) driver.

<PRE><FONT FACE="Courier" SIZE="2"> typedef enum {
    VfwCompressDialog_Config = 1,
    VfwCompressDialog_About = 2
} VfwCompressDialogs;

</FONT></PRE>
<H5>Values</H5>
<DL><DT><B><A NAME="dtypes_0001060601002201">VfwCompressDialog_Config</A></B>
 </DT><DD>Configure dialog box.
</DD><DT><B><A NAME="dtypes_0001060601002202">VfwCompressDialog_About</A></B>
 </DT><DD>About dialog box.
</DD></DL>
<H5>Remarks</H5>
<P>The <A HREF="dssd0112.htm" TARGET="TEXT">IAMVfwCompressDialogs</A> interface uses this enumerated data type.
<P><P><FONT FACE="MS SANS SERIF" SIZE="1" COLOR="BLACK">
<A CLASS=cpslug HREF="copyrite.htm" TARGET="TEXT">&#169; 1997 Microsoft Corporation. All rights reserved. Terms of Use.</A>
</FONT>
<BR CLEAR=ALL><P>
</FONT><P>
</BODY></HTML>
